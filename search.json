[{"path":"https://samtool.openmse.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Quang Huynh. Author, maintainer. Tom Carruthers. Author. Adrian Hordyk. Author.","code":""},{"path":"https://samtool.openmse.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huynh Q, Carruthers T, Hordyk (2024). SAMtool: Stock Assessment Methods Toolkit. R package version 1.7.0, https://samtool.openmse.com, https://github.com/Blue-Matter/SAMtool, https://openmse.com.","code":"@Manual{,   title = {SAMtool: Stock Assessment Methods Toolkit},   author = {Quang Huynh and Tom Carruthers and Adrian Hordyk},   year = {2024},   note = {R package version 1.7.0, https://samtool.openmse.com, https://github.com/Blue-Matter/SAMtool},   url = {https://openmse.com}, }"},{"path":"https://samtool.openmse.com/index.html","id":"samtool-","dir":"","previous_headings":"","what":"Stock Assessment Methods Toolkit","title":"Stock Assessment Methods Toolkit","text":"Stock Assessment Methods toolkit (SAMtool) collection assessment methods management procedures developed data-intensive applications. package includes Rapid Conditioning Model conditioning operating models data-moderate data-rich fisheries. SAMtool part openMSE collection packages. can learn openMSE packages openMSE documentation site.","code":""},{"path":"https://samtool.openmse.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stock Assessment Methods Toolkit","text":"can install released version SAMtool CRAN : development version GitHub :","code":"install.packages(\"SAMtool\") # install.packages(\"remotes\") remotes::install_github(\"Blue-Matter/SAMtool\")"},{"path":"https://samtool.openmse.com/reference/Assessment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-Assessment — Assessment-class","title":"Class-Assessment — Assessment-class","text":"S4 class contains assessment output. Created function class Assess.","code":""},{"path":"https://samtool.openmse.com/reference/Assessment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-Assessment — Assessment-class","text":"Model Name assessment model. Name Name Data object. conv Logical. Whether assessment model converged (defined whether TMB returned positive-definite covariance matrix model). UMSY Estimate exploitation maximum sustainable yield. FMSY Estimate instantaneous fishing mortality rate maximum sustainable yield. MSY Estimate maximum sustainable yield. BMSY Biomass maximum sustainable yield. SSBMSY Spawning stock biomass maximum sustainable yield. VBMSY Vulnerable biomass maximum sustainable yield. B0 Biomass unfished equilibrium. R0 Recruitment unfished equilibrium. N0 Abundance unfished equilibrium. SSB0 Spawning stock biomass unfished equilibrium. VB0 Vulnerable biomass unfished equilibrium. h Steepness. U Time series exploitation. U_UMSY Time series relative exploitation. FMort Time series instantaneous fishing mortality. F_FMSY Time series fishing mortality relative MSY. B Time series biomass. B_BMSY Time series biomass relative MSY. B_B0 Time series depletion. SSB Time series spawning stock biomass. SSB_SSBMSY Time series spawning stock biomass relative MSY. SSB_SSB0 Time series spawning stock depletion. VB Time series vulnerable biomass. VB_VBMSY Time series vulnerable biomass relative MSY. VB_VB0 Time series vulnerable biomass depletion. R Time series recruitment. N Time series population abundance. N_at_age Time series numbers--age matrix. Selectivity Selectivity--age matrix. Obs_Catch Observed catch. Obs_Index Observed index. Obs_C_at_age Observed catch--age matrix. Catch Predicted catch. Index Predicted index. C_at_age Predicted catch--age matrix. Dev vector estimated deviation parameters. Dev_type description deviation parameters, e.g. \"log recruitment deviations\". NLL Negative log-likelihood. vector total likelihood, integrated across random effects applicable, components, penalty term (applied U > 0.975 year). SE_UMSY Standard error UMSY estimate. SE_FMSY Standard error FMSY estimate. SE_MSY Standard error MSY estimate. SE_U_UMSY Standard error U/UMSY. SE_F_FMSY Standard error F/FMSY. SE_B_BMSY Standard error B/BMSY. SE_B_B0 Standard error B/B0. SE_SSB_SSBMSY Standard error SSB/SSBMSY. SE_SSB_SSB0 Standard error SSB/SSB0. SE_VB_VBMSY Standard error VB/VBMSY. SE_VB_VB0 Standard error VB/VB0. SE_Dev vector standard errors deviation parameters. info list containing data starting values estimated parameters assessment. forecast list containing components forecasting: per_recruit data frame SPR (spawning potential ratio) YPR (yield-per-recruit), calculated range exploitation rate 0 - 0.99 instantaneous F 0 - 2.5 FMSY. catch_eq function calculates catch next year (model terminal year) apical F provided. obj list components returned TMB::MakeADFun(). opt list components calling stats::nlminb() obj. SD list (class sdreport) parameter estimates standard errors, obtained TMB::sdreport(). TMB_report list model output reported TMB executable, .e. obj$report(), derived quantities (e.g. MSY). dependencies character string data types required assessment.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/Assessment-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-Assessment — Assessment-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/Assessment-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class-Assessment — Assessment-class","text":"","code":"# \\donttest{ output <- DD_TMB(Data = MSEtool::SimulatedData) class(output) #> [1] \"Assessment\" #> attr(,\"package\") #> [1] \"SAMtool\" # }"},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay - Difference Stock Assessment in TMB — DD_TMB","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"simple delay-difference assessment model using time-series catches relative abundance index coded TMB. model can conditioned either (1) effort estimates predicted catch (2) catch estimates predicted index. state-space version DD_SS, recruitment deviations stock-recruit relationship estimated.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"","code":"DD_TMB(   x = 1,   Data,   condition = c(\"catch\", \"effort\"),   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\"),   rescale = \"mean1\",   MW = FALSE,   start = NULL,   prior = list(),   fix_h = TRUE,   dep = 1,   LWT = list(),   n_itF = 3L,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   ... )  DD_SS(   x = 1,   Data,   condition = c(\"catch\", \"effort\"),   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\"),   rescale = \"mean1\",   MW = FALSE,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_sd = FALSE,   fix_tau = TRUE,   dep = 1,   LWT = list(),   n_itF = 3L,   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"x index objects Data running closed loop simulation. Otherwise, equals 1 running assessment. Data object class MSEtool::Data. condition string indicate whether condition model catch effort (ratio catch index). AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. SR Stock-recruit function (either \"BH\" Beverton-Holt \"Ricker\"). rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. MW Logical, whether fit mean weight. closed-loop simulation, mean weight grabbed Data@Misc[[x]]$MW, otherwise calculated Data@CAL. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep assessment model. Automatically false prior used. dep initial depletion first year model. tight prior placed model objective function estimate equilibrium fishing mortality rate corresponds initial depletion. Due tight prior, F considered independent model parameter. Set zero eliminate prior. LWT named list likelihood weights. LWT$Index, vector likelihood weights survey, LWT$MW numeric. n_itF Integer, number iterations solve F within annual time step conditioning catch. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list parameters regarding optimization passed stats::nlminb(). ... Additional arguments (currently used). fix_sd Logical, whether standard deviation data likelihood (index conditioning catch catch conditioning effort). TRUE, SD fixed value provided start (provided), otherwise, value based either Data@CV_Cat Data@CV_Ind. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, equal 1. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating random effects/state-space variable). Otherwise, recruitment deviations penalized parameters. inner.control named list arguments optimization random effects, passed TMB::newton() via TMB::MakeADFun().","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"object Assessment containing objects output TMB.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"start (optional), named list starting values estimates can provided : R0 Unfished recruitment. Otherwise, Data@OM$R0[x] used closed-loop, 400% mean catch otherwise. h Steepness. Otherwise, Data@steep[x] used, 0.9 empty. M Natural mortality. Otherwise, Data@Mort[x] used. k Age knife-edge maturity. default, age 50% maturity calculated slots Data object. Rho Delay-difference rho parameter. Otherwise, calculated biological parameters Data object. Alpha Delay-difference alpha parameter. Otherwise, calculated biological parameters Data object. q_effort Scalar coefficient conditioning effort (scale F). Otherwise, 1 default. F_equilibrium Equilibrium fishing mortality rate leading first year model (determine initial depletion). default, 0. omega Lognormal SD catch (observation error) conditioning effort. default, Data@CV_Cat[x]. tau Lognormal SD recruitment deviations (process error) DD_SS. default, Data@sigmaR[x]. sigma Lognormal SD index (observation error) conditioning catch. default, Data@CV_Ind[x]. used multiple indices used. sigma_W Lognormal SD mean weight (observation error). default, 0.1. Multiple indices supported model. Data@Ind, Data@VInd, Data@SpInd assumed biomass-based. Data@AddInd, Data@I_units used identify biomass vs. abundance-based index. Similar many assessment models, model depends assumptions stationary productivity proportionality abundance index real abundance. Unsurprisingly extent assumptions violated tends biggest driver performance method.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"priors","dir":"Reference","previous_headings":"","what":"Priors","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"following priors can added named list, e.g., prior = list(M = c(0.25, 0.15), h = c(0.7, 0.1). parameter , provide vector values described: R0 - vector length 3. first value indicates distribution prior: 1 lognormal, 2 uniform log(R0), 3 uniform R0. lognormal, second third values prior mean (normal space) SD (log space). Otherwise, second third values lower upper bounds uniform distribution (values normal space). h - vector length 2 prior mean SD, normal space. Beverton-Holt steepness uses beta distribution, Ricker steepness uses normal distribution. M - vector length 2 prior mean (normal space) SD (log space). Lognormal prior. q - matrix nsurvey rows 2 columns. first column prior mean (normal space) second column SD (log space). Use NA rows corresponding indices without priors. See online documentation details.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"required-data","dir":"Reference","previous_headings":"","what":"Required Data","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"DD_TMB: Cat, Ind, Mort, L50, vbK, vbLinf, vbt0, wla, wlb, MaxAge DD_SS: Cat, Ind, Mort, L50, vbK, vbLinf, vbt0, wla, wlb, MaxAge","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"optional-data","dir":"Reference","previous_headings":"","what":"Optional Data","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"DD_TMB: steep DD_SS: steep, CV_Cat","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"Carruthers, T, Walters, C.J,, McAllister, M.K. 2012. Evaluating methods classify fisheries stock status using fisheries catch data. Fisheries Research 119-120:66-79. Hilborn, R., Walters, C., 1992. Quantitative Fisheries Stock Assessment: Choice, Dynamics Uncertainty. Chapman Hall, New York.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"T. Carruthers & Z. Siders. Zach Siders coded TMB function.","code":""},{"path":"https://samtool.openmse.com/reference/DD_TMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay - Difference Stock Assessment in TMB — DD_TMB","text":"","code":"# \\donttest{ #### Observation-error delay difference model res <- DD_TMB(x = 3, Data = MSEtool::SimulatedData)  # Provide starting values start <- list(h = 0.95) res <- DD_TMB(x = 3, Data = MSEtool::SimulatedData, start = start)  summary(res@SD) # Parameter estimates #>                Estimate   Std. Error #> R0x       -1.828102e+00 2.164137e-02 #> log_sigma -1.071746e+00 1.414214e-02 #> R0         1.579920e+02 3.419164e+00 #> h          9.500000e-01 0.000000e+00 #> q          1.675884e-04 5.816162e-06 #> sigma      3.424100e-01 4.842410e-03  ### State-space version ### Set recruitment variability SD = 0.3 (since fix_tau = TRUE) res <- DD_SS(x = 3, Data = MSEtool::SimulatedData, start = list(tau = 0.3)) # }"},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":null,"dir":"Reference","previous_headings":"","what":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"Harvest Control Rule using B/BMSY F/FMSY adjust TAC TAE.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"","code":"HCR_FB(Brel, Frel, Bpow = 2, Bgrad = 1, Fpow = 1, Fgrad = 1)"},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"Brel improper fraction: estimate Biomass relative BMSY Frel improper fraction: estimate Fishing mortality rate relative FMSY Bpow non-negative real number: controls shape biomass adjustment, zero adjustment Bgrad non-negative real number: controls gradient biomass adjustment Fpow non-negative real number: controls adjustment speed relative F/FMSY. set 1, next recommendation FMSY. less 1 next recommendation current F FMSY. Fgrad improper fraction: target Fishing rate relative FMSY","code":""},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"TAC TAE adjustment factor.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"Made package","code":""},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/HCR_FB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Harvest Control Rule using B/BMSY and F/FMSY to adjust TAC or TAE. — HCR_FB","text":"","code":"res <- 100 Frel <- seq(1/2, 2, length.out = res) Brel <- seq(0.05, 2, length.out=res) adj <- array(HCR_FB(Brel[rep(1:res, res)], Frel[rep(1:res, each = res)],                     Bpow = 2, Bgrad = 1, Fpow = 1, Fgrad = 0.75), c(res, res)) contour(Brel, Frel, adj, nlevels = 20, xlab = \"B/BMSY\", ylab = \"F/FMSY\",         main = \"FBsurface TAC adjustment factor\") abline(h = 1, col = 'red', lty = 2) abline(v = 1, col = 'red', lty = 2) legend('topright', c(\"Bpow = 2\", \"Bgrad = 1\", \"Fpow = 1\", \"Fgrad = 0.75\"), text.col = 'blue')"},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":null,"dir":"Reference","previous_headings":"","what":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"simple control rule specifies total allowable catch (TAC) function abundance first projection year fraction FMSY/UMSY.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"","code":"HCR_MSY(Assessment, reps = 1, MSY_frac = 1, ...)"},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"Assessment object class Assessment estimates FMSY UMSY vulnerable biomass terminal year. reps number stochastic samples TAC recommendation. MSY_frac fraction FMSY UMSY calculating TAC (e.g. MSY_frac = 0.75 fishes 75% FMSY). ... Miscellaneous arguments.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"object class MSEtool::Rec TAC recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"catch advice calculated using catch equation corresponding assessment. See Assessment@forecast$catch_eq, function returns catch advice specified Ftarget.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"Punt, . E, Dorn, M. W., Haltuch, M. . 2008. Evaluation threshold management strategies groundfish U.S. West Coast. Fisheries Research 94:251-266.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/HCR_MSY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harvest control rule to fish at some fraction of maximum sustainable yield — HCR_MSY","text":"","code":"# create an MP to run in closed-loop MSE (fishes at UMSY) SPMSY <- make_MP(SP, HCR_MSY)  # The MP which fishes at 75% of FMSY SP75MSY <- make_MP(SP, HCR_MSY, MSY_frac = 0.75)  # \\donttest{ myOM <- MSEtool::runMSE(MSEtool::testOM, MPs = c(\"FMSYref\", \"SPMSY\", \"SP75MSY\")) #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: SPMSY, SP75MSY # }"},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed escapement harvest control rule — HCR_escapement","title":"Fixed escapement harvest control rule — HCR_escapement","text":"simple control rule allows fishing operational control point (OCP) threshold. default, function sets TAC F = 100% FMSY spawning depletion > 0.1.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed escapement harvest control rule — HCR_escapement","text":"","code":"HCR_escapement(   Assessment,   reps = 1,   OCP_type = \"SSB_SSB0\",   OCP_threshold = 0.2,   Ftarget_type = \"FMSY\",   relF_max = 1,   ... )"},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed escapement harvest control rule — HCR_escapement","text":"Assessment object class Assessment estimates FMSY UMSY vulnerable biomass terminal year. reps number stochastic samples TAC recommendation. OCP_type type operational control points (OCPs) harvest control rule used determine whether fishing. default, use (\"SSB_SSB0\" spawning depletion. biomass OCPs include \"SSB_SSBMSY\" spawning biomass relative MSY \"SSB_dSSB0\", dynamic depletion (dynamic SSB0 historical reconstructed biomass F = 0). F-based OCPs, terminal year fishing mortality relative F01 Fmax (using yield-per-recruit) F-SPR% (see SPR_OCP argument) can used. OCP_threshold value OCP fishing can occur. Ftarget_type type F used target fishing mortality rate. relF_max relative value Ftarget OCP > OCP_treshold. ... Miscellaneous arguments.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed escapement harvest control rule — HCR_escapement","text":"object class MSEtool::Rec TAC recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fixed escapement harvest control rule — HCR_escapement","text":"catch advice calculated using catch equation corresponding assessment. See Assessment@forecast$catch_eq, function returns catch advice specified Ftarget.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fixed escapement harvest control rule — HCR_escapement","text":"Deroba, J.J. Bence, J.R. 2008. review harvest policies: Understanding relative performance control rules. Fisheries Research 94:210-223.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fixed escapement harvest control rule — HCR_escapement","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/HCR_escapement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed escapement harvest control rule — HCR_escapement","text":"","code":"# create an MP to run in closed-loop MSE (fishes at FMSY when B/B0 > 0.2) SP_escapement <- make_MP(SP, HCR_escapement)  # The MP which fishes at 75% of FMSY SP_escapement75 <- make_MP(SP, HCR_escapement, relF_max = 0.75)  # The MP which fishes at FMSY when BMSY > 0.5 SP_BMSY_escapement <- make_MP(SP, HCR_escapement, OCP_type = \"SSB_SSBMSY\",                                OCP_threshold = 0.5, relF_max = 1)  # \\donttest{ myOM <- MSEtool::runMSE(MSEtool::testOM, MPs = c(\"FMSYref\", \"SP_escapement\", \"SP_BMSY_escapement\")) #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: SP_escapement, SP_BMSY_escapement # }"},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple fixed F harvest control rule — HCR_fixedF","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"simple control rule explicitly specifies target apical F independent model.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"","code":"HCR_fixedF(Assessment, reps = 1, Ftarget = 0.1)"},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"Assessment object class Assessment estimates next year's abundance biomass. reps number replicates TAC recommendation (used). Ftarget value F.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"object class MSEtool::Rec TAC recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"catch advice calculated using catch equation corresponding assessment. See Assessment@forecast$catch_eq, function returns catch advice specified Ftarget.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/HCR_fixedF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple fixed F harvest control rule — HCR_fixedF","text":"","code":"# create an MP to run in closed-loop MSE (fishes at F = 0.2) F0.2 <- make_MP(SP, HCR_fixedF, Ftarget = 0.2)  # \\donttest{ myOM <- MSEtool::runMSE(MSEtool::testOM, MPs = c(\"FMSYref\", \"F0.2\")) #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: F0.2 # }"},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly ramped harvest control rules — HCR_ramp","title":"Linearly ramped harvest control rules — HCR_ramp","text":"output control rule ramp reduces target F (used TAC recommendation) linearly function operational control point (OCP) spawning depletion spawning biomass. reduction F linear OCP target OCP (TOCP) limit OCP (LOCP). target F maximized TOCP. LOCP, target F minimized. example, TOCP LOCP 40% 10% spawning depletion, respectively, 40-10 control rule. Ftarget FMSY TOCP zero LOCP. type control rule can generalized control points (>2) HCR_segment. Class HCR objects typically used function make_MP.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly ramped harvest control rules — HCR_ramp","text":"","code":"HCR_ramp(   Assessment,   reps = 1,   OCP_type = c(\"SSB_SSB0\", \"SSB_SSBMSY\", \"SSB_dSSB0\", \"F_FMSY\", \"F_F01\", \"F_FSPR\"),   Ftarget_type = c(\"FMSY\", \"F01\", \"Fmax\", \"FSPR\", \"abs\"),   LOCP = 0.1,   TOCP = 0.4,   relF_min = 0,   relF_max = 1,   SPR_OCP = 0.4,   SPR_targ = 0.4,   ... )  HCR40_10(Assessment, reps = 1, Ftarget_type = \"FMSY\", SPR_targ = 0.4, ...)  HCR60_20(Assessment, reps = 1, Ftarget_type = \"FMSY\", SPR_targ = 0.4, ...)  HCR80_40MSY(Assessment, reps = 1, Ftarget_type = \"FMSY\", SPR_targ = 0.4, ...)"},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly ramped harvest control rules — HCR_ramp","text":"Assessment object class Assessment estimates FMSY UMSY, vulnerable biomass, spawning biomass depletion terminal year. reps number stochastic samples TAC recommendation. OCP_type type operational control points (OCPs) harvest control rule used determine reduction F. See . Ftarget_type type F used target fishing mortality rate. See . LOCP Numeric, limit value OCP HCR. TOCP Numeric, target value OCP HCR. relF_min relative value Ftarget (.e., proportion) OCP < LOCP. relF_max relative value Ftarget OCP > TOCP. SPR_OCP value spawning potential ratio OCP OCP_type = \"F_FSPR\". default, 0.4 (F40%). SPR_targ target value spawning potential ratio Ftarget_type = \"FSPR\". default, 0.4 (F40%). ... Miscellaneous arguments.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linearly ramped harvest control rules — HCR_ramp","text":"object class MSEtool::Rec TAC recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linearly ramped harvest control rules — HCR_ramp","text":"catch advice calculated using catch equation corresponding assessment. See Assessment@forecast$catch_eq, function returns catch advice specified Ftarget. Operational control points (OCP_type) following available options harvest control rule inputs, source values Assessment object: Default \"SSB_SSB0\": Spawning depletion. Uses last value  Assessment@SSB_SSB0 vector. \"SSB_SSBMSY\": Spawning biomass relative MSY. Uses last value Assessment@SSB_SSBMSY vector. \"SSB_dSSB0\": Dynamic depletion (SSB relative historical reconstructed biomass F = 0). Uses last value Assessment@SSB/Assessment@TMB_report$dynamic_SSB0. \"F_FMSY\": Fishing mortality relative MSY. Uses last value Assessment@F_FMSY. \"F_F01\": Fishing mortality relative F_0.1 (yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"F_FSPR\": Fishing mortality relative F_SPR% (F produces spawning potential ratio specified \"SPR_OCP\", calculated data frame Assessment@forecast[[\"per_recruit\"]]. Fishing mortality target (Ftarget_type) type F corresponding catch calculated HCR specified . source values Assessment object specified: Default \"FMSY\": Fishing mortality relative MSY. Uses value Assessment@FMSY. \"F01\": Fishing mortality relative F_0.1 (yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"Fmax\": Fishing mortality relative F_max (maximizing yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"FSPR\": Fishing mortality relative F_SPR% (F produces spawning potential ratio specified \"SPR_targ\", calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"abs\": Fishing mortality independent model output explicitly specified relF.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Linearly ramped harvest control rules — HCR_ramp","text":"HCR_ramp(): Generic ramped-HCR function user specifies OCP corresponding limit target points, well minimum maximum relative F target. HCR40_10(): Common U.S. west coast control rule (LOCP TOCP 0.1 0.4 spawning depletion, respectively) HCR60_20(): conservative HCR40_10, LOCP TOCP 0.2 0.6 spawning depletion, respectively). HCR80_40MSY(): 0.8 0.4 SSBMSY LOCP TOCP, respectively.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linearly ramped harvest control rules — HCR_ramp","text":"Deroba, J.J. Bence, J.R. 2008. review harvest policies: Understanding relative performance control rules. Fisheries Research 94:210-223. Edwards, C.T.T. Dankel, D.J. (eds.). 2016. Management Science Fisheries: introduction simulation methods. Routledge, New York, NY. 460 pp. Punt, . E, Dorn, M. W., Haltuch, M. . 2008. Evaluation threshold management strategies groundfish U.S. West Coast. Fisheries Research 94:251-266. Restrepo, V.R. Power, J.E. 1999. Precautionary control rules US fisheries management: specification performance. ICES Journal Marine Science 56:846-852.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linearly ramped harvest control rules — HCR_ramp","text":"Q. Huynh & T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/HCR_ramp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linearly ramped harvest control rules — HCR_ramp","text":"","code":"# 40-10 linear ramp Brel <- seq(0, 1, length.out = 200) plot(Brel, HCRlin(Brel, 0.1, 0.4),      xlab = expression(\"Operational control point: Estimated\"~SSB/SSB[0]),     ylab = expression(F[target]~~\": proportion of\"~~F[MSY]),      main = \"40-10 harvest control rule\", type = \"l\") abline(v = c(0.1, 0.4), col = \"red\", lty = 2)   # create a 40-10 MP to run in closed-loop MSE DD_40_10 <- make_MP(DD_TMB, HCR40_10)  # Alternatively, DD_40_10 <- make_MP(DD_TMB, HCR_ramp, OCP_type = \"SSB_SSB0\", LOCP = 0.1, TOCP = 0.4)  # An SCA with LOCP and TOCP at 0.4 and 0.8, respectively, of SSB/SSBMSY SCA_80_40 <- make_MP(SCA, HCR_ramp, OCP_type = \"SSB_SSBMSY\", LOCP = 0.4, TOCP = 0.8)  # A conservative HCR that fishes at 75% of FMSY at B > 80% BMSY but only reduces F # to 10% of FMSY if B < 40% BMSY. SCA_conservative <- make_MP(SCA, HCR_ramp, OCP_type = \"SSB_SSBMSY\", LOCP = 0.4, TOCP = 0.8,  relF_min = 0.1, relF_max = 0.75)  # Figure of this conservative HCR Brel <- seq(0, 1, length.out = 200) Frel <- HCRlin(Brel, 0.4, 0.8, 0.1, 0.75) plot(Brel, Frel,      xlab = expression(\"Operational control point: Estimated\"~SSB/SSB[MSY]),     ylab = expression(F[target]~\":\"~~F/F[MSY]),      ylim = c(0, 1), type = \"l\") abline(v = c(0.4, 0.8), col = \"red\", lty = 2)   # A harvest control rule as a function of BMSY, with F independent of model output,  # i.e., specify F in relF argument (here maximum F of 0.1) SCA_80_40 <- make_MP(SCA, HCR_ramp, OCP_type = \"SSB_SSBMSY\", LOCP = 0.4, TOCP = 0.8,                       relF_min = 0, relF_max = 0.1)"},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmented harvest control rules — HCR_segment","title":"Segmented harvest control rules — HCR_segment","text":"linear segmented output control rule target F (used TAC recommendation) function operational control point (OCP) spawning depletion spawning biomass. segments HCR specified arguments OCP relF. Beyond range OCP, response flat. HCR_ramp uses HCR_segment two control points.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmented harvest control rules — HCR_segment","text":"","code":"HCR_segment(   Assessment,   reps = 1,   OCP_type = c(\"SSB_SSB0\", \"SSB_SSBMSY\", \"SSB_dSSB0\", \"F_FMSY\", \"F_F01\", \"F_FSPR\"),   Ftarget_type = c(\"FMSY\", \"F01\", \"Fmax\", \"FSPR\", \"abs\"),   OCP = c(0.1, 0.4),   relF = c(0, 1),   SPR_OCP,   SPR_targ,   ... )"},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segmented harvest control rules — HCR_segment","text":"Assessment object class Assessment estimates FMSY UMSY, vulnerable biomass, spawning biomass depletion terminal year. reps number stochastic samples TAC recommendation. OCP_type type operational control points (OCPs) harvest control rule used determine reduction F. See . Ftarget_type type F used target fishing mortality rate. See . OCP Numeric vector operational control points HCR (increasing order). relF Numeric vector Ftarget corresponding values OCP. SPR_OCP value spawning potential ratio OCP OCP_type = \"F_FSPR\". default, 0.4 (F40%). SPR_targ target value spawning potential ratio Ftarget_type = \"FSPR\". default, 0.4 (F40%). ... Miscellaneous arguments.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segmented harvest control rules — HCR_segment","text":"object class MSEtool::Rec TAC recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Segmented harvest control rules — HCR_segment","text":"catch advice calculated using catch equation corresponding assessment. See Assessment@forecast$catch_eq, function returns catch advice specified Ftarget. Operational control points (OCP_type) following available options harvest control rule inputs, source values Assessment object: Default \"SSB_SSB0\": Spawning depletion. Uses last value  Assessment@SSB_SSB0 vector. \"SSB_SSBMSY\": Spawning biomass relative MSY. Uses last value Assessment@SSB_SSBMSY vector. \"SSB_dSSB0\": Dynamic depletion (SSB relative historical reconstructed biomass F = 0). Uses last value Assessment@SSB/Assessment@TMB_report$dynamic_SSB0. \"F_FMSY\": Fishing mortality relative MSY. Uses last value Assessment@F_FMSY. \"F_F01\": Fishing mortality relative F_0.1 (yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"F_FSPR\": Fishing mortality relative F_SPR% (F produces spawning potential ratio specified \"SPR_OCP\", calculated data frame Assessment@forecast[[\"per_recruit\"]]. Fishing mortality target (Ftarget_type) type F corresponding catch calculated HCR specified . source values Assessment object specified: Default \"FMSY\": Fishing mortality relative MSY. Uses value Assessment@FMSY. \"F01\": Fishing mortality relative F_0.1 (yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"Fmax\": Fishing mortality relative F_max (maximizing yield per recruit), calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"FSPR\": Fishing mortality relative F_SPR% (F produces spawning potential ratio specified \"SPR_targ\", calculated data frame Assessment@forecast[[\"per_recruit\"]]. \"abs\": Fishing mortality independent model output explicitly specified relF.","code":""},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Segmented harvest control rules — HCR_segment","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/HCR_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segmented harvest control rules — HCR_segment","text":"","code":"# This is an MP with a 40-10 harvest control rule (using FMSY) DD_40_10 <- make_MP(DD_TMB, HCR_segment, OCP_type = \"SSB_SSB0\", OCP = c(0.1, 0.4), relF = c(0, 1))  #'  # This is an MP with a 40-10 harvest control rule with a maximum F of 0.1 DD_40_10 <- make_MP(DD_TMB, HCR_segment, OCP_type = \"SSB_SSB0\",                      Ftarget_type = \"abs\", OCP = c(0.1, 0.4), relF = c(0, 0.1))"},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic linear harvest control rule based on biomass — HCRlin","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"general function used HCR_ramp adjusts output (e.g., F) linear ramp based value OCP relative target limit values.","code":""},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"","code":"HCRlin(OCP_val, LOCP, TOCP, relF_min = 0, relF_max = 1)"},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"OCP_val value operational control point (OCP). LOCP Numeric, limit value OCP HCR. TOCP Numeric, target value OCP HCR. relF_min relative maximum value (e.g. multiple FMSY) OCP < LOCP. relF_max relative maximum value (e.g. multiple FMSY) OCP > TOCP.","code":""},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"Numeric adjustment factor.","code":""},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/HCRlin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic linear harvest control rule based on biomass — HCRlin","text":"","code":"#40-10 linear ramp Brel <- seq(0, 1, length.out = 200) plot(Brel, HCRlin(Brel, 0.1, 0.4), xlab = \"Estimated B/B0\", ylab = \"Relative change in F\",      main = \"A 40-10 harvest control rule\", type = 'l', col = 'blue') abline(v = c(0.1,0.4), col = 'red', lty = 2)"},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":null,"dir":"Reference","previous_headings":"","what":"Model-based management procedures — Model-based-MP","title":"Model-based management procedures — Model-based-MP","text":"suite model-based management procedures (MPs) included package. Additional MPs, specific model configurations (e.g., stock-recruit function fixing certain parameters) alternative ramped harvest control rules can created make_MP available Assess HCR objects constant TAC assessment years.","code":""},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model-based management procedures — Model-based-MP","text":"","code":"SCA_MSY(x, Data, reps = 1, diagnostic = \"min\")  SCA_75MSY(x, Data, reps = 1, diagnostic = \"min\")  SCA_4010(x, Data, reps = 1, diagnostic = \"min\")  DDSS_MSY(x, Data, reps = 1, diagnostic = \"min\")  DDSS_75MSY(x, Data, reps = 1, diagnostic = \"min\")  DDSS_4010(x, Data, reps = 1, diagnostic = \"min\")  SP_MSY(x, Data, reps = 1, diagnostic = \"min\")  SP_75MSY(x, Data, reps = 1, diagnostic = \"min\")  SP_4010(x, Data, reps = 1, diagnostic = \"min\")  SSS_MSY(x, Data, reps = 1, diagnostic = \"min\")  SSS_75MSY(x, Data, reps = 1, diagnostic = \"min\")  SSS_4010(x, Data, reps = 1, diagnostic = \"min\")"},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model-based management procedures — Model-based-MP","text":"x position Data object. Data object class Data reps Numeric, number stochastic replicates management advice. diagnostic Character string describing assessment diagnostic save, see make_MP.","code":""},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model-based management procedures — Model-based-MP","text":"object class MSEtool::Rec contains management recommendation.","code":""},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Model-based management procedures — Model-based-MP","text":"SCA_MSY(): statistical catch--age model TAC recommendation based fishing FMSY, default arguments configuring SCA. SCA_75MSY(): SCA TAC recommendation based fishing 75% FMSY. SCA_4010(): SCA 40-10 control rule. DDSS_MSY(): state-space delay difference model TAC recommendation based fishing FMSY, default arguments configuring DD_SS. DDSS_75MSY(): state-space delay difference model TAC recommendation based fishing 75% FMSY. DDSS_4010(): state-space delay difference model 40-10 control rule. SP_MSY(): surplus production model TAC recommendation based fishing FMSY, default arguments configuring SP. SP_75MSY(): surplus production model TAC recommendation based fishing 75% FMSY. SP_4010(): surplus production model 40-10 control rule. SSS_MSY(): Simple stock synthesis (terminal depletion fixed 0.4 SSS) TAC recommendation based fishing FMSY. SSS_75MSY(): Simple stock synthesis (terminal depletion fixed 0.4) TAC recommendation based fishing 75% FMSY. SSS_4010(): Simple stock synthesis (terminal depletion fixed 0.4) 40-10 control rule.","code":""},{"path":"https://samtool.openmse.com/reference/Model-based-MP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model-based management procedures — Model-based-MP","text":"","code":"MSEtool::avail(\"MP\", package = \"SAMtool\") #> ✔ Searching for objects of class  MP  in package:  SAMtool #>  [1] \"DDSS_4010\"  \"DDSS_75MSY\" \"DDSS_MSY\"   \"SCA_4010\"   \"SCA_75MSY\"  #>  [6] \"SCA_MSY\"    \"SP_4010\"    \"SP_75MSY\"   \"SP_MSY\"     \"SSS_4010\"   #> [11] \"SSS_75MSY\"  \"SSS_MSY\"     # \\donttest{ myMSE <- MSEtool::runMSE(MSEtool::testOM, MPs = c(\"FMSYref\", \"SCA_4010\")) #> ✔ Checking MPs #> ℹ Checking OM for completeness #> ✔ Loading operating model #> ✔ Optimizing for user-specified movement #> ✔ Calculating MSY reference points for each year #> ✔ Optimizing for user-specified depletion in last historical year #> ✔ Calculating historical stock and fishing dynamics #> ✔ Calculating per-recruit reference points #> ✔ Calculating B-low reference points #> ✔ Calculating reference yield - best fixed F strategy #> ✔ Simulating observed data #> ✔ Running forward projections #> ✔ 1 / 2  Running MSE for FMSYref  #>    |==                                                | 2 % ~00s             |===                                               | 4 % ~00s             |====                                              | 6 % ~00s             |=====                                             | 8 % ~00s             |======                                            | 10% ~01s             |=======                                           | 12% ~01s             |========                                          | 14% ~01s             |=========                                         | 16% ~01s             |==========                                        | 18% ~01s             |===========                                       | 20% ~01s             |============                                      | 22% ~01s             |=============                                     | 24% ~01s             |==============                                    | 27% ~01s             |===============                                   | 29% ~01s             |================                                  | 31% ~01s             |=================                                 | 33% ~01s             |==================                                | 35% ~01s             |===================                               | 37% ~00s             |====================                              | 39% ~00s             |=====================                             | 41% ~00s             |======================                            | 43% ~00s             |=======================                           | 45% ~00s             |========================                          | 47% ~00s             |=========================                         | 49% ~00s             |==========================                        | 51% ~00s             |===========================                       | 53% ~00s             |============================                      | 55% ~00s             |=============================                     | 57% ~00s             |==============================                    | 59% ~00s             |===============================                   | 61% ~00s             |================================                  | 63% ~00s             |=================================                 | 65% ~00s             |==================================                | 67% ~00s             |===================================               | 69% ~00s             |====================================              | 71% ~00s             |=====================================             | 73% ~00s             |======================================            | 76% ~00s             |=======================================           | 78% ~00s             |========================================          | 80% ~00s             |=========================================         | 82% ~00s             |==========================================        | 84% ~00s             |===========================================       | 86% ~00s             |============================================      | 88% ~00s             |=============================================     | 90% ~00s             |==============================================    | 92% ~00s             |===============================================   | 94% ~00s             |================================================  | 96% ~00s             |================================================= | 98% ~00s             |==================================================| 100% elapsed=01s   #>  #> ✔ 2 / 2  Running MSE for SCA_4010  #>    |==                                                | 2 % ~01m 03s         |===                                               | 4 % ~31s             |====                                              | 6 % ~21s             |=====                                             | 8 % ~15s             |======                                            | 10% ~24s             |=======                                           | 12% ~19s             |========                                          | 14% ~16s             |=========                                         | 16% ~14s             |==========                                        | 18% ~28s             |===========                                       | 20% ~25s             |============                                      | 22% ~22s             |=============                                     | 24% ~20s             |==============                                    | 27% ~22s             |===============                                   | 29% ~20s             |================                                  | 31% ~18s             |=================                                 | 33% ~17s             |==================                                | 35% ~19s             |===================                               | 37% ~17s             |====================                              | 39% ~16s             |=====================                             | 41% ~14s             |======================                            | 43% ~16s             |=======================                           | 45% ~15s             |========================                          | 47% ~13s             |=========================                         | 49% ~12s             |==========================                        | 51% ~13s             |===========================                       | 53% ~12s             |============================                      | 55% ~11s             |=============================                     | 57% ~11s             |==============================                    | 59% ~11s             |===============================                   | 61% ~10s             |================================                  | 63% ~10s             |=================================                 | 65% ~09s             |==================================                | 67% ~09s             |===================================               | 69% ~08s             |====================================              | 71% ~08s             |=====================================             | 73% ~07s             |======================================            | 76% ~07s             |=======================================           | 78% ~06s             |========================================          | 80% ~06s             |=========================================         | 82% ~05s             |==========================================        | 84% ~05s             |===========================================       | 86% ~04s             |============================================      | 88% ~04s             |=============================================     | 90% ~03s             |==============================================    | 92% ~03s             |===============================================   | 94% ~02s             |================================================  | 96% ~01s             |================================================= | 98% ~01s             |==================================================| 100% elapsed=33s   #>  # }"},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"Calculate mahalanobis distance (null alternative MSEs) statistical power MPs MSE","code":""},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"","code":"PRBcalc(   MSE_null,   MSE_alt,   tsd = c(\"Cat\", \"Cat\", \"Cat\", \"Ind\", \"ML\"),   stat = c(\"slp\", \"AAV\", \"mu\", \"slp\", \"slp\"),   dnam = c(\"C_S\", \"C_V\", \"C_M\", \"I_S\", \"ML_S\"),   res = 6,   alpha = 0.05,   plotCC = FALSE,   removedat = FALSE,   removethresh = 0.025 )"},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"MSE_null object class MSE representing null hypothesis MSE_alt object class MSE representing alternative hypothesis tsd Character string data types: Cat = catch, Ind = relative abundance index, ML = mean length catches stat Character string defining quantity calculated data type, slp = slope(log(x)), AAV = average annual variability, mu = mean(log(x)) dnam Character string names quantities calculated res Integer, resolution (time blocking) calculation PPD alpha Probability incorrectly rejecting null operating model valid plotCC Logical, PPD cross correlations plotted? removedat Logical, data contributing mahalanobis distance removed? removethresh Positive fraction: cumulative percentage removed data (removedat=TRUE) contribute mahalanobis distance","code":""},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"list object two hierarchies indexing, first MP, second two positions described Probs: (1) mahalanobis distance, (2) matrix type 1 error (first row) statistical power (second row), time block.","code":""},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"Carruthers, T.R, Hordyk, .R. press. Using management strategy evaluation establish indicators changing fisheries. Canadian Journal Fisheries Aquatic Science.","code":""},{"path":"https://samtool.openmse.com/reference/PRBcalc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate mahalanobis distance (null and alternative MSEs) and statistical power for all MPs in an MSE — PRBcalc","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/Probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"Calculates mahalanobis distance rejection Null operating model, used wrapping function PRBcalc.","code":""},{"path":"https://samtool.openmse.com/reference/Probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"","code":"Probs(indPPD, indData, alpha = 0.05, removedat = FALSE, removethresh = 0.05)"},{"path":"https://samtool.openmse.com/reference/Probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"indPPD 3D array results arising running getind MSE Null operating model (type data/stat (e.g. mean catches),time period (chunk), simulation) indData 3D array results arising running getind MSE Alternative operating model (type data/stat (e.g. mean catches),time period (chunk), simulation) alpha Positive fraction: rate type error, alpha removedat Logical, data contributing mahalanobis distance removed? removethresh Positive fraction: cumulative percentage removed data (removedat=TRUE) contribute mahalanobis distance","code":""},{"path":"https://samtool.openmse.com/reference/Probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"list object. Position 1 array mahalanobis distances. Dimension 1 length 2 Null OM (indPPD) alternative OM (indData). Dimension 2 time block (length indPPD dim 2). Dimension 3 simulation number (length indPPD dim 3.), Position 2 matrix (2 rows, ntimeblock columns) (row 1) alpha: rate false positives, row 2 power (1-beta) rate true positives","code":""},{"path":"https://samtool.openmse.com/reference/Probs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"Carruthers Hordyk 2018","code":""},{"path":"https://samtool.openmse.com/reference/Probs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates mahalanobis distance and rejection of the Null operating model — Probs","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":null,"dir":"Reference","previous_headings":"","what":"Rapid Conditioning Model (RCM) — check_RCMdata","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Intended conditioning operating models MSEtool. data-limited stocks, function can generate range potential depletion scenarios inferred sparse data. historical time series total catch effort, potentially age/length compositions multiple indices abundance, RCM returns range values depletion, selectivity, unfished recruitment (R0), historical fishing effort, recruitment deviations operating model. done sampling life history parameters provided user fitting statistical catch--age model (predicted catch equal observed catch). Alternatively one can single model fit sample covariance matrix generate operating model uncertainty based model fit. Either full catch (conditioned catch) effort (conditioned effort) time series needed missing data (NAs) allowed data types. check_RCMdata evaluates whether inputs S4 RCMdata object correctly formatted.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"","code":"check_RCMdata(RCMdata, OM, condition = \"catch\", silent = FALSE)  RCM(OM, data, ...)  # S4 method for class 'OM,RCMdata' RCM(   OM,   data,   condition = \"catch\",   selectivity = \"logistic\",   s_selectivity = NULL,   LWT = list(),   comp_like = c(\"multinomial\", \"lognormal\", \"mvlogistic\", \"dirmult1\", \"dirmult2\"),   prior = list(),   max_F = 3,   cores = 1L,   integrate = FALSE,   mean_fit = FALSE,   drop_nonconv = FALSE,   drop_highF = FALSE,   control = list(iter.max = 2e+05, eval.max = 4e+05),   start = list(),   map = list(),   silent = FALSE,   ... )  # S4 method for class 'OM,list' RCM(   OM,   data,   condition = \"catch\",   selectivity = \"logistic\",   s_selectivity = NULL,   LWT = list(),   comp_like = c(\"multinomial\", \"lognormal\", \"mvlogistic\", \"dirmult1\", \"dirmult2\"),   ESS = c(30, 30),   prior = list(),   max_F = 3,   cores = 1L,   integrate = FALSE,   mean_fit = FALSE,   drop_nonconv = FALSE,   drop_highF = FALSE,   control = list(iter.max = 2e+05, eval.max = 4e+05),   start = list(),   map = list(),   silent = FALSE,   ... )  # S4 method for class 'OM,Data' RCM(   OM,   data,   condition = \"catch\",   selectivity = \"logistic\",   s_selectivity = NULL,   LWT = list(),   comp_like = c(\"multinomial\", \"lognormal\", \"mvlogistic\", \"dirmult1\", \"dirmult2\"),   ESS = c(30, 30),   prior = list(),   max_F = 3,   cores = 1L,   integrate = FALSE,   mean_fit = FALSE,   drop_nonconv = FALSE,   drop_highF = FALSE,   control = list(iter.max = 2e+05, eval.max = 4e+05),   start = list(),   map = list(),   silent = FALSE,   ... )"},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"RCMdata RCMdata object. OM object class MSEtool::OM specifies natural mortality (M), growth (Linf, K, t0, , b), stock-recruitment relationship, steepness, maturity parameters (L50 L50_95), standard deviation recruitment variability (Perr), well index uncertainty (Iobs). condition String indicate whether RCM conditioned \"catch\" (F estimated parameters), \"catch2\" (F solved internally using Newton's method), \"effort\" (F proportional index series data@Ehist. Can fleet specific, case combination \"catch\" \"effort\" permissible. silent Logical indicate whether informative messages reported console. data Data inputs formatted RCMdata (preferred) MSEtool::Data object. Use list deprecated. See Data section . ... arguments pass starting values parameters fixing parameters. See details. selectivity character vector length nfleet indicate \"logistic_length\", \"dome_length\", \"logistic_age\", \"dome_age\", \"free\" selectivity fleet Chist. time-varying selectivity, character vector length nsel_block (see Data section ). \"free\" indicates independent selectivity parameters age, additional modifications fixing selectivity parameters likely needed. See Additional arguments section. s_selectivity vector length nsurvey indicate selectivity corresponding columns data$Index. Use \"B\" total biomass, \"SSB\" spawning biomass (default, \"B\" used). Use numbers survey selectivity follows fleet (corresponding columns data$Chist, e.g., 1 = first fleet/column ). survey selectivity otherwise independent anything else model, use \"logistic_length\", \"dome_length\", \"logistic_age\", \"dome_age\", \"free\" specify functional form selectivity, see Additional arguments section setup survey selectivity parameters Articles section information. LWT named list likelihood weights RCM. See . comp_like string indicating statistical distribution composition data, either \"multinomial\" (default), \"lognormal\", \"mvlogistic\" (multivariate logistic), \"dirmult1\" (Dirichlet multinomial, linear version), \"dirmult2\" (saturating version; see Thorson et al. 2017). prior named list parameters priors added model. See . max_F maximum F fleet scoping model (higher F's model penalized objective function). argument also update OM@maxF. See also drop_highF. cores Integer number CPU cores (set greater 1 parallel processing). integrate Logical, whether treat recruitment deviations penalized parameters likelihood (FALSE) random effects marginalized likelihood (TRUE). mean_fit Logical, whether run additional mean values life history parameters OM. drop_nonconv Logical, whether drop non-converged fits RCM, including fits F = NA. drop_highF Logical, whether drop fits RCM F = max_F. control named list arguments (e.g, max. iterations, etc.) optimization, passed control argument stats::nlminb(). start list starting values TMB model. See details. map list map argument TMB models override defaults. See MakeADFun details. ESS vector length two. shortcut method setting maximum multinomial sample size age length compositions. used data provided RCMdata object.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"object class RCModel (see link description output). check_RCMdata returns list updated RCMdata object, OM, StockPars FleetPars Hist object generated OM.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Fleet selectivity fixed values sampled OM age length compositions provided. Survey selectivity estimable IAA IAL provided. Otherwise, selectivity mirrored fleet (vulnerable biomass selectivity) indexed total spawning biomass (see s_selectivity). Parameters used fitting model placed RCM@OM@cpars list. operating model OM uses time-varying growth M, trends used RCM well. Non-stationary productivity creates ambiguity calculation interpretation depletion MSY reference points. easiest way turn time-varying growth/M setting: OM@Msd <- OM@Linfsd <- OM@Ksd <- c(0, 0). play alternative fits excluding indices, example, optional data, set corresponding likelihood weight zero. model still generate inferred index data enter likelihood. See section likelihood weights.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"priors","dir":"Reference","previous_headings":"","what":"Priors","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"following priors can added named list, e.g., prior = list(M = c(0.25, 0.15), h = c(0.7, 0.1). parameter , provide vector values described: R0 vector length 3. first value indicates distribution prior: 1 lognormal, 2 uniform log(R0), 3 uniform R0. lognormal, second third values prior mean (normal space) SD (log space). Otherwise, second third values lower upper bounds uniform distribution (values normal space). h vector length 2 prior mean SD, normal space. Beverton-Holt steepness uses beta distribution, Ricker steepness uses normal distribution. M vector length 2 prior mean (normal space) SD (log space). Lognormal prior. q matrix nsurvey rows 2 columns. first column prior mean (normal space) second column SD (log space). Use NA rows corresponding indices without priors. See online documentation details.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Several articles available RCM: General overview approach Mathematical description Setup selectivity settings index catchability (useful data-rich cases) Description priors","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"data","dir":"Reference","previous_headings":"","what":"Data","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"One indices, age compositions, length compositions provided addition historical catch effort. arguments needed run model (defaults, others ignored applicable depending data provided). data variable can object class RCMdata. See help file description inputs. Alternatively, data input can MSEtool::Data S4 object retrieve data following slots: Data@Cat catch series (single fleet Data S4 object) Data@Effort effort series Data@CAA fishery age composition Data@CAL, Data@CAL_mids fishery length composition corresponding length bins Data@Ind, Data@SpInd, Data@VInd, Data@AddInd indices abundance Data@CV_Ind, Data@CV_SpInd, Data@CV_VInd, Data@CV_AddInd annual coefficients variation corresponding indices abundance. CVs converted lognormal standard deviations. Data@ML fishery mean lengths Data@AddIndV, Data@AddIndType, Data@AddIunits Additional information indices Data@AddInd: selectivity units (.e., biomass abundance). slot Data S4 object equilibrium catch/effort. can passed directly function call, .e., RCM(OM, Data, C_eq = C_eq, ...).","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"data-list","dir":"Reference","previous_headings":"","what":"Data list","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Use list deprecated. backwards compatibility, list supported entries: Chist vector historical catch, length OM@nyears. multiple fleets: matrix OM@nyears rows nfleet columns. Ideally, first year catch series represents unfished conditions (see also C_eq). C_sd vector matrix standard deviations (lognormal distribution) catches Chist. provided, default 0.01. used condition = \"catch\". Ehist vector historical effort, length OM@nyears (see also E_eq). Index vector values index (length OM@nyears). multiple indices: matrix historical indices abundances, rows indexing years columns indexing index. I_sd vector matrix standard deviations (lognormal distribution) indices corresponding entries Index. provided, function use values OM@Iobs. I_type Obsolete version 2.0. See s_selectivity argument. CAA Fishery age composition matrix nyears rows OM@maxage+1 columns. multiple fleets: array dimension: nyears, OM@maxage, nfleet. CAL Fishery length composition matrix nyears rows columns indexing length bin. multiple fleets: array dimension: nyears, length bins, nfleet. MS vector fishery mean size (MS, either mean length mean weight) observations (length OM@nyears), multiple fleets: matrix dimension: nyears, nfleet. Generally, mean lengths used CAL also provided, unless mean length length comps independently sampled. MS_type character (either \"length\" (default) \"weight\") denote type mean size data. MS_cv coefficient variation observed mean size. multiple fleets, vector length nfleet. Default 0.2. s_CAA Survey age composition data, array dimension nyears, maxage+1, nsurvey. s_CAL Survey length composition data, array dimension nyears, length(length_bin), nsurvey. length_bin vector midpoints length bins CAL s_CAL. bin widths equal size. C_eq numeric vector length nfleet equilibrium catch fleet Chist prior first year operating model. Zero (default) implies unfished conditions year one. Otherwise, used estimate depletion first year data. Alternatively, one full CAA matrix, one instead estimate \"artificial\" rec devs generate initial numbers--age (hence initial depletion) first year model (see additional arguments). C_eq_sd vector standard deviations (lognormal distribution) equilibrium catches C_eq. provided, default 0.01. used condition = \"catch\". E_eq equilibrium effort fleet Ehist prior first year operating model. Zero (default) implies unfished conditions year one. Otherwise, used estimate depletion first year data. abs_I Optional, integer vector indicate indices absolute magnitude. Use 1 set q = 1, otherwise use 0 estimate q. I_units Optional, integer vector indicate whether indices biomass based (1) abundance-based (0). default, biomass-based. age_error Optional, square matrix maxage + 1 rows columns specify ageing error. aa-th column assigns proportion true age -th row observed age. Thus, rows sum 1. Default identity matrix (ageing error). sel_block Optional, time-varying fleet selectivity (time blocks), integer matrix nyears rows nfleet columns assigns selectivity function fleet certain years.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"additional-arguments","dir":"Reference","previous_headings":"","what":"Additional arguments","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"RCM, additional arguments can passed model via ...: plusgroup Logical whether maximum age plusgroup . default, TRUE. fix_dome Logical whether dome selectivity parameter fleets fixed. Used primarily backwards compatibility, overridden map argument. resample Logical, whether OM conditioning parameters (recruitment, fishing mortality, SSB, selectivity, etc.) obtained sampling Hessian matrix single model fit. default FALSE. feature requires identical biological parameters among simulations. bc_recdev Vector length nyears. additional adjustment bias correction recruitment deviations (estimated). bias correction logspace normal space exp(log_rec_dev[y] - 0.5 * bc_recdev[y] * sigmaR^2). Default 1.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"start","dir":"Reference","previous_headings":"","what":"start","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Starting values can specified named list following: vul_par matrix 3 rows nfleet columns starting values fleet selectivity. three rows correspond LFS (length full selectivity), L5 (length 5 percent selectivity), Vmaxlen (selectivity length Linf). default, starting values values OM object. selectivity = \"free\", matrix needs maxage+1 rows row specifies selectivity age. See Articles section. ivul_par matrix 3 rows nsurvey columns starting values fleet selectivity. setup vul_par. Values column ignored s_selectivity mapped fishing fleet (add NA placeholders case). s_selectivity = \"free\", matrix needs maxage+1 rows row specifies selectivity age. log_rec_dev numeric vector length nyears starting values log-recruitment deviations. log_early_rec_dev numeric vector length OM@maxage starting values recruitment deviations controlling abundance--age first year model. q numeric vector length nsurvey index catchability. See online article information.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"map","dir":"Reference","previous_headings":"","what":"map","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Parameters can fixed map argument (also named list, corresponding start list). vector matrix map argument dimension start entry. entry NA, corresponding parameter fixed model starting value. Otherwise, integer independent parameter, .e., shared mirrored parameters get integer entry. vul_par integer matrix dimension start$vul_par. default, selectivity fixed age length composition fleet survey, otherwise estimated. Unused cells start$vul_par matrix given NA map matrix. ivul_par map argument survey selectivity parameters (dimension start$ivul_par). Placeholder parameters map value NA. log_early_rec_dev vector length OM@maxage indexes recruitment deviates cohorts first year model fixed (using NA) estimated (separate integer). default, deviates estimated (NA). log_rec_dev vector length OM@nyears indexes recruitment deviates fixed (using NA) estimated (separate integer). default, deviates estimated. q vector length nsurvey index catchability. q estimated parameter sharing across surveys (perhaps differing selectivity). Otherwise, solved analytically individual parameters independent indices. Use RCMdata@abs_I fixing catchability 1. See online article information.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"likelihood-weights","dir":"Reference","previous_headings":"","what":"Likelihood weights","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"LWT optional named list containing likelihood weights (values >= 0) possible options: Chist, CAA, CAL, MS, C_eq: vector length nfleet . Index, IAA, IAL: vector length nsurvey . default, likelihood weights equal one specified user. Annual multinomial sample sizes age length comps can now provided directly RCMdata object. list MSEtool::Data object, use ESS argument.","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Thorson et al. 2017. Model-based estimates effective sample size stock assessment models using Dirichlet-multinomial distribution. Fish. Res. 192:84-93. doi:10.1016/j.fishres.2016.06.005","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/RCM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rapid Conditioning Model (RCM) — check_RCMdata","text":"","code":"# \\donttest{  # An example that conditions a Pacific cod operating model. There are 48 simulations,  # where values of natural mortality and steepness are sampled from distributions.  # The model is fitted with priors on the index catchability. Maturity and selectivity  # are knife-edge at the age of 2 years. See online tutorial for more information.  data(pcod)  mat_ogive <- pcod$OM@cpars$Mat_age[1, , 1] out <- RCM(OM = pcod$OM, data = pcod$data,             condition = \"catch\", mean_fit = TRUE,            selectivity = \"free\", s_selectivity = rep(\"SSB\", ncol(pcod$data@Index)),            start = list(vul_par = matrix(mat_ogive, length(mat_ogive), 1)),            map = list(vul_par = matrix(NA, length(mat_ogive), 1),                       log_early_rec_dev = rep(1, pcod$OM@maxage)),            prior = pcod$prior) #> ℹ Checking data... #> ✔ 1 fleet(s) detected. #> ✔ RCM is conditioned on: #> ✔ Fleet 1: catch #> ✔ 65 years of data detected. #> ✔ First year in model: 1956 #> ✔ Last year in model: 2020 #> ✔ 5 survey(s) detected. #> ✔ Checking OM and getting biological parameters... #> ✔ Mean weight data found. #> ✔ Maximum F in RCM will be 3. OM@maxF is also updated. #>    #> ℹ No fishery length or age compositions were provided. Selectivity is fixed to values from OM. #>    #> ℹ Fishery selectivity setup: #> ℹ Fleet 1: individual parameters at age (free) #>    #> ℹ Index selectivity setup: #> ℹ Index 1: spawning biomass #> ℹ Index 2: spawning biomass #> ℹ Index 3: spawning biomass #> ℹ Index 4: spawning biomass #> ℹ Index 5: spawning biomass #>    #> ✔ Beverton-Holt stock-recruitment relationship used. #> ✔ Prior for q found. #> ℹ Fitting model (48 simulations) ... #> ℹ Generating additional model fit from mean values of parameters in the operating model... #> ✔ Updating operating model: #>    #> ✔ Range of unfished age-0 recruitment (OM@cpars$R0): 6383.46 - 13782.9 #> ✔ Range of initial spawning depletion: 0.44 - 1.45 #> ✔ Range of spawning depletion (OM@cpars$D): 0.14 - 0.45 #> ✔ Historical F set with OM@cpars$Find and OM@cpars$qs. #> ✔ Annual selectivity at age set in OM@cpars$V. Projection period uses selectivity of last historical year. #> ✔ RCMdata length bins will be added to OM. #> ✔ Recruitment standard deviation set in OM@cpars$Perr: 0.8 - 0.8 #> ✔ Historical recruitment deviations set in OM@cpars$Perr_y. #> ✔ Range of recruitment autocorrelation OM@AC: 0.21 - 0.31 #> ✔ Future recruitment deviations in OM@cpars$Perr_y sampled with autocorrelation. #> ✔ Growth, maturity, natural mortality, and stock recruit parameters from RCM are set in OM@cpars. #>    #> ℹ Adding some RCMdata inputs into OM@cpars$Data: #>    #> ✔ Historical catch data added to OM@cpars$Data@Cat. #> ✔ Historical indices added to OM@cpars$Data@AddInd. #> ✔ Complete. plot(out, s_name = colnames(pcod$data@Index)) #> ℹ Rendering markdown file: /tmp/RtmpRU73lR/RCM.Rmd #> ℹ See help(plot.RCModel) to adjust report and file directory. #> ✔ Rendered file: /tmp/RtmpRU73lR/RCM.html  # Alternative OM with age-3 maturity and selectivity instead. out_age3 <- local({   pcod$OM@cpars$Mat_age[, 2, ] <- 0   mat_ogive_age3 <- pcod$OM@cpars$Mat_age[1, , 1]   RCM(OM = pcod$OM, data = pcod$data,        condition = \"catch\", mean_fit = TRUE,       selectivity = \"free\", s_selectivity = rep(\"SSB\", ncol(pcod$data@Index)),       start = list(vul_par = matrix(mat_ogive_age3, length(mat_ogive_age3), 1)),       map = list(vul_par = matrix(NA, length(mat_ogive_age3), 1),                     log_early_rec_dev = rep(1, pcod$OM@maxage)),       prior = pcod$prior) }) #> ℹ Checking data... #> ✔ 1 fleet(s) detected. #> ✔ RCM is conditioned on: #> ✔ Fleet 1: catch #> ✔ 65 years of data detected. #> ✔ First year in model: 1956 #> ✔ Last year in model: 2020 #> ✔ 5 survey(s) detected. #> ✔ Checking OM and getting biological parameters... #> ✔ Mean weight data found. #> ✔ Maximum F in RCM will be 3. OM@maxF is also updated. #>    #> ℹ No fishery length or age compositions were provided. Selectivity is fixed to values from OM. #>    #> ℹ Fishery selectivity setup: #> ℹ Fleet 1: individual parameters at age (free) #>    #> ℹ Index selectivity setup: #> ℹ Index 1: spawning biomass #> ℹ Index 2: spawning biomass #> ℹ Index 3: spawning biomass #> ℹ Index 4: spawning biomass #> ℹ Index 5: spawning biomass #>    #> ✔ Beverton-Holt stock-recruitment relationship used. #> ✔ Prior for q found. #> ℹ Fitting model (48 simulations) ... #> ℹ Generating additional model fit from mean values of parameters in the operating model... #> ✔ Updating operating model: #>    #> ✔ Range of unfished age-0 recruitment (OM@cpars$R0): 6383.46 - 13782.9 #> ✔ Range of initial spawning depletion: 0.44 - 1.45 #> ✔ Range of spawning depletion (OM@cpars$D): 0.14 - 0.45 #> ✔ Historical F set with OM@cpars$Find and OM@cpars$qs. #> ✔ Annual selectivity at age set in OM@cpars$V. Projection period uses selectivity of last historical year. #> ✔ RCMdata length bins will be added to OM. #> ✔ Recruitment standard deviation set in OM@cpars$Perr: 0.8 - 0.8 #> ✔ Historical recruitment deviations set in OM@cpars$Perr_y. #> ✔ Range of recruitment autocorrelation OM@AC: 0.21 - 0.31 #> ✔ Future recruitment deviations in OM@cpars$Perr_y sampled with autocorrelation. #> ✔ Growth, maturity, natural mortality, and stock recruit parameters from RCM are set in OM@cpars. #>    #> ℹ Adding some RCMdata inputs into OM@cpars$Data: #>    #> ✔ Historical catch data added to OM@cpars$Data@Cat. #> ✔ Historical indices added to OM@cpars$Data@AddInd. #> ✔ Complete.    compare_RCM(out, out_age3, scenario = list(names = c(\"Age-2 maturity\", \"Age-3 maturity\")),             s_name = colnames(pcod$data@Index)) #> ℹ Rendering markdown file: /tmp/RtmpRU73lR/compare_RCM.Rmd #> ✔ Rendered file: /tmp/RtmpRU73lR/compare_RCM.html               Hist <- runMSE(out@OM, Hist = TRUE)             #> ℹ Checking OM for completeness #> ✔ Loading operating model #> ✖ Invalid names found in custom parameters: #> ✖ not_used_cpars #>   1       L50array #>   2       L95array #> ℹ Valid custom parameters found:  #>    M  #>   h  #>   V  #>   Mat_age  #>   R0  #>   D  #>   Find  #>   qs  #>   CAL_bins  #>   CAL_binsmid  #>   Perr  #>   AC  #>   Perr_y  #>   Len_age  #>   Linf  #>   K  #>   t0  #>   LenCV  #>   LatASD  #>   Wt_age  #>   ageMarray  #>   age95array  #>   hs  #>   M_ageArray  #>   AddIbeta  #>   Data  #> ✔ Note: Maximum age (10) is lower than assuming 1% of cohort survives to maximum age (24) #> ✔ Optimizing for user-specified movement #> ✔ Calculating MSY reference points for each year #> ℹ Skipping optimization for depletion - using catchability (q) from OM@cpars. #> ✔ Calculating historical stock and fishing dynamics #> ✔ Calculating per-recruit reference points #> ✔ Calculating B-low reference points #> ✔ Calculating reference yield - best fixed F strategy #> ✔ Simulating observed data #> ✔ Updating Simulated Data with Real Data from `OM@cpars$Data` #> ℹ Using `OM@cpars$Data@LenCV` (0.1) #> ✔ Updating Simulated Catch from `OM@cpars$Data@Cat` #> ℹ Updating Catch bias from `OM@cpars$Data@Cat` #> ℹ Updating Catch variability from `OM@cpars$Data@Cat` #> ℹ Updating catch observation error from `OM@cpars$Data@Cat` #> ✔ Adding Additional Indices to Simulated Data from `OM@cpars$Data@AddInd` #> ℹ cpars$AddIbeta detected. Not updating beta for additional indices #> ℹ Updating observation variability (AddIerr) for additional indices from real data #> ℹ Additional index 1 - spawning stock (biomass) #> ℹ Additional index 2 - spawning stock (biomass) #> ℹ Additional index 3 - spawning stock (biomass) #> Warning: An error occurred in calculating statistical properties of fit to Additional Index 3 (possibly because there was only one observed data point).  #> Using the index observation error for slot `Ind` from `Obs` object (or possibly conditioned if `cpars$Data@Ind` was provided). #> Use `cpars$AddIerr` to manually set the observation error. #> ℹ Additional index 4 - spawning stock (biomass) #> ℹ Additional index 5 - spawning stock (biomass) #> ✔ Returning historical simulations # }"},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"RCM (Rapid Conditioning Model) returns single-fleet operating model, implying constant effort among fleets projections. , convert single-fleet OM multi-fleet OM, preserving multiple fleet structure used conditioning model projections. allows testing management procedures explicitly specify fleet allocation management advice.","code":""},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"","code":"RCM2MOM(RCModel)"},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"RCModel Output RCM, class RCModel object.","code":""},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"class MSEtool::MOM object.","code":""},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/RCM2MOM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RCM to a multi-fleet operating model (MOM) — RCM2MOM","text":"","code":"data(pcod)  mat_ogive <- pcod$OM@cpars$Mat_age[1, , 1] OM <- MSEtool::SubCpars(pcod$OM, 1:3) #> ✔ Removing simulations:  4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #> ✔ Set OM@nsim =  3 out <- RCM(OM = pcod$OM, data = pcod$data,             condition = \"catch\", mean_fit = TRUE,            selectivity = \"free\", s_selectivity = rep(\"SSB\", ncol(pcod$data@Index)),            start = list(vul_par = matrix(mat_ogive, length(mat_ogive), 1)),            map = list(vul_par = matrix(NA, length(mat_ogive), 1),                       log_early_rec_dev = rep(1, pcod$OM@maxage)),            prior = pcod$prior) #> ℹ Checking data... #> ✔ 1 fleet(s) detected. #> ✔ RCM is conditioned on: #> ✔ Fleet 1: catch #> ✔ 65 years of data detected. #> ✔ First year in model: 1956 #> ✔ Last year in model: 2020 #> ✔ 5 survey(s) detected. #> ✔ Checking OM and getting biological parameters... #> ✔ Mean weight data found. #> ✔ Maximum F in RCM will be 3. OM@maxF is also updated. #>    #> ℹ No fishery length or age compositions were provided. Selectivity is fixed to values from OM. #>    #> ℹ Fishery selectivity setup: #> ℹ Fleet 1: individual parameters at age (free) #>    #> ℹ Index selectivity setup: #> ℹ Index 1: spawning biomass #> ℹ Index 2: spawning biomass #> ℹ Index 3: spawning biomass #> ℹ Index 4: spawning biomass #> ℹ Index 5: spawning biomass #>    #> ✔ Beverton-Holt stock-recruitment relationship used. #> ✔ Prior for q found. #> ℹ Fitting model (48 simulations) ... #> ℹ Generating additional model fit from mean values of parameters in the operating model... #> ✔ Updating operating model: #>    #> ✔ Range of unfished age-0 recruitment (OM@cpars$R0): 6383.46 - 13782.9 #> ✔ Range of initial spawning depletion: 0.44 - 1.45 #> ✔ Range of spawning depletion (OM@cpars$D): 0.14 - 0.45 #> ✔ Historical F set with OM@cpars$Find and OM@cpars$qs. #> ✔ Annual selectivity at age set in OM@cpars$V. Projection period uses selectivity of last historical year. #> ✔ RCMdata length bins will be added to OM. #> ✔ Recruitment standard deviation set in OM@cpars$Perr: 0.8 - 0.8 #> ✔ Historical recruitment deviations set in OM@cpars$Perr_y. #> ✔ Range of recruitment autocorrelation OM@AC: 0.21 - 0.31 #> ✔ Future recruitment deviations in OM@cpars$Perr_y sampled with autocorrelation. #> ✔ Growth, maturity, natural mortality, and stock recruit parameters from RCM are set in OM@cpars. #>    #> ℹ Adding some RCMdata inputs into OM@cpars$Data: #>    #> ✔ Historical catch data added to OM@cpars$Data@Cat. #> ✔ Historical indices added to OM@cpars$Data@AddInd. #> ✔ Complete. MOM <- RCM2MOM(out)"},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":null,"dir":"Reference","previous_headings":"","what":"The rapid conditioning model as an assessment function — RCM_assess","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"beta testing. function uses RCM assessment function use MPs. function arguments added tinker model settings data inputs.","code":""},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"","code":"RCM_assess(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\"),   selectivity = c(\"logistic\", \"dome\"),   CAA_multiplier = 50,   prior = list(),   LWT = list(),   StockPars = \"Data\",   ... )"},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. Vulnerability survey fixed model. SR Stock-recruit function (either \"BH\" Beverton-Holt \"Ricker\"). selectivity Whether model \"logistic\" \"dome\" selectivity fishery. CAA_multiplier Numeric data weighting catch--age matrix. greater 1, maximum multinomial sample size year. less one, multinomial sample size fraction sample size. prior named list parameters priors added model. See documentation SCA. LWT named list (Index, CAA, Catch) likelihood weights data components. index, vector length survey. CAL Catch, single value. StockPars Either string (\"Data\" \"OM\") indicate whether grab biological parameters Data object, operating model. Alternatively, named list provide custom parameters assessment. ... Additional arguments (added).","code":""},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":"data","dir":"Reference","previous_headings":"","what":"Data","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"Currently uses catch, CAA, indices abundance corresponding slots Data object.","code":""},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":"stockpars","dir":"Reference","previous_headings":"","what":"StockPars","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"Biological parameters can used (1) Data object, (2) operating model, (3) provided directly StockPars argument. Options 2 3 allow time-varying growth, maturity, natural mortality. Natural mortality can also age-varying. StockPars can named list parameters used provide inputs assessment model: Wt_age - annual weight age, array [sim, ages, year] Mat_age - annual maturity age, array [sim, ages, year] hs - Stock-recruit steepness, vector length [sim] M_ageArray - annual natural mortality, array [sim, ages, year]","code":""},{"path":"https://samtool.openmse.com/reference/RCM_assess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The rapid conditioning model as an assessment function — RCM_assess","text":"","code":"r <- RCM_assess(Data = SimulatedData) #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value myMP <- make_MP(RCM_assess, HCR_MSY) myMP(x = 1, Data = SimulatedData) #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> Warning: NA/Inf replaced by maximum positive value #> named numeric(0)"},{"path":"https://samtool.openmse.com/reference/RCMdata-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-RCMdata — RCMdata-class","title":"Class-RCMdata — RCMdata-class","text":"S4 class data inputs RCM.","code":""},{"path":"https://samtool.openmse.com/reference/RCMdata-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-RCMdata — RCMdata-class","text":"Chist Either vector historical catch, length OM@nyears, multiple fleets, matrix OM@nyears rows nfleet columns. Ideally, first year catch series represents unfished conditions (see also slot C_eq). C_sd dimension Chist. Lognormal distribution standard deviations (year fleet) catches Chist. provided, default 0.01. used RCM(condition = \"catch2\"). Ehist vector historical effort, length OM@nyears, multiple fleets: matrix OM@nyears rows nfleet columns. See also slot E_eq). CAA Fishery age composition matrix nyears rows OM@maxage+1 columns, multiple fleets: array dimension: nyears, OM@maxage+1, nfleet. Enter NA years without data. Raw numbers converted annual proportions (see slot CAA_ESS sample sizes). CAA_ESS Annual sample size (multinomial distribution) fishery age comps. vector length OM@nyears, multiple fleets: matrix OM@nyears rows nfleet columns. Enter zero years without observations. annual cap ESS, e.g., 50, can calculated something like: pmin(apply(CAA, c(1, 3), sum, na.rm = TRUE), 50). default, CAL Fishery length composition matrix nyears rows n_bin columns (indexing length bin), multiple fleets: array dimension: nyears, n_bin, nfleets. Enter NA years without data. Raw numbers converted annual proportions (see slot CAL_ESS sample sizes). CAL_ESS Annual sample size (multinomial distribution) fishery length comps. dimension CAA_ESS. length_bin vector (length n_bin) midpoints length bins CAL IAL, well population model, bin widths equal size. length bins unequal width, provide vector boundaries length bins (vector length n_bin + 1). MS Mean mean size (either mean length mean weight) observations fishery. dimension Chist. Generally, mean lengths used alongside CAL, unless mean length length comps independently sampled. MS_type character (either \"length\" (default) \"weight\") denote type mean size data. MS_cv coefficient variation observed mean size. multiple fleets, vector length nfleet. Default 0.2. Index Index abundance. Enter NA missing values. vector length OM@nyears, multiple surveys: matrix OM@nyears rows nsurvey columns. I_sd vector matrix standard deviations (lognormal distribution) indices corresponding entries Index. dimension Index. provided, function use values OM@Iobs. IAA Index age composition data, array dimension nyears, maxage+1, nsurvey. Raw numbers converted annual proportions (see IAA_ESS sample sizes). IAA_ESS Annual sample size (multinomial distribution) index age comps. vector length OM@nyears. multiple indices: matrix OM@nyears rows nsurvey columns. IAL Index length composition data, array dimension nyears, n_bin, nsurvey. Raw numbers converted annual proportions (see slot IAL_ESS enter sample sizes). IAL_ESS Annual sample size (multinomial distribution) index length comps. dimension IAA_ESS. C_eq Vector length nfleet equilibrium catch fleet Chist prior first year operating model. Zero (default) implies unfished conditions year one. Otherwise, used estimate depletion first year data. Alternatively, one full CAA matrix, one instead estimate \"artificial\" rec devs generate initial numbers--age (hence initial depletion) first year model (see additional arguments RCM). C_eq_sd vector standard deviations (lognormal distribution) equilibrium catches C_eq. dimension C_eq. provided, default 0.01. used RCM(condition = \"catch\"). E_eq equilibrium effort fleet Ehist prior first year operating model. Zero (default) implies unfished conditions year one. Otherwise, used estimate depletion first year data. abs_I integer vector length nsurvey indicate indices absolute magnitude. Use 1 set q = 1, otherwise use 0 (default) estimate q. I_units integer vector indicate whether indices biomass based (1) abundance-based (0). default, biomass-based. age_error square matrix maxage + 1 rows columns specify ageing error. aa-th column assigns proportion animals true age aa observed age -th row. Thus, rows sum 1. Default identity matrix (ageing error). sel_block time-varying fleet selectivity (time blocks), integer matrix nyears rows nfleet columns assign selectivity function fleet certain years. default, constant selectivity individual fleet. See selectivity article details. Misc list miscellaneous inputs. Used internally.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/RCMdata-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-RCMdata — RCMdata-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/RCModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-RCModel — RCModel-class","title":"Class-RCModel — RCModel-class","text":"S4 class output RCM.","code":""},{"path":"https://samtool.openmse.com/reference/RCModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-RCModel — RCModel-class","text":"OM updated operating model, class MSEtool::OM. SSB matrix estimated spawning biomass OM@nsim rows OM@nyears+1 columns. NAA array predicted numbers age dimension OM@nsim, OM@nyears+1, OM@maxage+1. CAA array predicted catch age dimension OM@nsim, OM@nyears, OM@maxage, nfleet. CAL array predicted catch length dimension OM@nsim, OM@nyears, length bins, nfleet. conv logical vector length OM@nsim indicating convergence RCM -th simulation. Misc list length OM@nsim output fitted RCM. Within simulation, named list containing items interest include: B - total biomass - vector length nyears+1 EPR0 - annual unfished spawners per recruit - vector length nyears ageM - age 50% maturity - integer EPR0_SR - unfished spawners per recruit stock-recruit relationship (mean EPR0 first ageM years) - numeric R0 - unfished recruitment stock-recruit relationship - numeric h - steepness stock-recruit relationship - numeric Arec - stock-recruit alpha parameter - numeric Brec - stock-recruit beta parameter - numeric E0_SR - unfished spawning biomass stock-recruit relationship (product EPR0_SR R0) - numeric CR_SR - compensation ratio, product Arec EPR0_SR - numeric E0 - annual unfished spawning biomass (intersection stock-recruit relationship unfished spawners per recruit) - vector length nyears R0_annual - annual unfished recruitment (annual ratio E0 EPR0) - vector length nyears h_annual - annual steepness (calculated EPR0 Arec) - vector length nyears CR - annual compensation ratio, product alpha annual unfished spawners per recruit (EPR0) - vector length nyears R - recruitment - vector length nyears+1 R_early - recruitment cohorts first year model - vector n_age-1 (n_age = maxage + 1) VB - vulnerable biomass - matrix nyears x nfleet N - abundance age - matrix nyears+1 x n_age F - apical fishing mortality - matrix nyears x nfleet F_at_age - fishing mortality age - matrix nyears x n_age F_equilibrium - equilibrium fishing mortality prior first year - vector length nfleet M - natural mortality - matrix nyears x n_age Z - total mortality - matrix nyears x n_age q - index catchability - vector length nsurvey ivul - index selectivity age - array dim nyears+1, n_age, nsurvey ivul_len - corresponding index selectivity length - matrix nbins x nsurvey Ipred - predicted index values - matrix nyears x nsurvey IAApred - predicted index catch age - array dim nyears, n_age, nsurvey vul - fleet selectivity age - array dim nyears+1, n_age, nfleet (nsel_block) vul_len - corresponding fleet selectivity length - matrix nbins x nfleet (nsel_block) IALpred - predicted index catch length - array dim nyears, nbins, nsurvey MLpred - predicted mean length - matrix nyears x nfleet MWpred - predicted mean weight - matrix nyears x nfleet CAApred - predicted catch age - array nyears, n_age, nfleet CALpred - predicted catch length - array nyears, nbins, nfleet Cpred - predicted catch weight - matrix nyears x nfleet CN - predicted catch numbers - matrix nyears x nfleet dynamic_SSB0 - dynamic unfished spawning biomass calcaluated projecting historical model zero catches - vector length nyears+1 SPR_eq - equilibrium spawning potential ratio calculated annual F--age - vector length nyears SPR_dyn - dynamic (transitional) spawning potential ratio calculated cumulative survival cohorts - vector length nyears nll - total objective function model - numeric nll_fleet - objective function values annual data point(s) fleets - array nyears x nfleet x 5 (Catch, equilibrium catch, CAA, CAL, mean size) nll_index - objective function values annual data point(s) index - array nyears x nsurvey x 3 (Index, IAA, IAL) prior - penalty value added objective function priors - numeric penalty - additional penalty values added objective function due high F - numeric conv - whether model converged (whether positive-definite Hessian obtained) - logical mean_fit list output fit mean values life history parameters operating model. named list consists : obj - list components returned TMB::MakeADFun(). opt - list components calling stats::nlminb() obj. SD - list (class sdreport) parameter estimates standard errors, obtained TMB::sdreport(). report - list model output reported TMB executable, .e. obj$report(). See Misc. data RCMdata object containing data inputs RCM. config list describing configuration RCM: drop_sim - vector simulations dropped output","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/RCModel-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-RCModel — RCModel-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SAMtool-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Stock Assessment Methods Toolkit — SAMtool-package","title":"Stock Assessment Methods Toolkit — SAMtool-package","text":"Simulation tools closed-loop simulation provided 'MSEtool' operating model inform data-rich fisheries. SAMtool provides OM conditioning model, assessment models varying complexity standardized reporting, diagnostic tools evaluating assessments within closed-loop simulation, helper functions building complex operating models model-based management procedures.","code":""},{"path":"https://samtool.openmse.com/reference/SAMtool-package.html","id":"how-to-use-samtool","dir":"Reference","previous_headings":"","what":"How to use SAMtool","title":"Stock Assessment Methods Toolkit — SAMtool-package","text":"main features SAMtool assessment models ability make model-based management procedures combining assessment models harvest control rules. MPs can used tested management strategy evaluation MSEtool operating models. overview features available openMSE website. RCM() (Rapid Conditioning Model) can used condition operating models real data. following articles available openMSE website: Description assessment models General overview RCM function documentation can viewed online.","code":""},{"path":"https://samtool.openmse.com/reference/SAMtool-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stock Assessment Methods Toolkit — SAMtool-package","text":"Carruthers, T.R., Punt, .E., Walters, C.J., MacCall, ., McAllister, M.K., Dick, E.J., Cope, J. 2014. Evaluating methods setting catch limits data-limited fisheries. Fisheries Research. 153: 48-68. Carruthers, T.R., Kell, L.T., Butterworth, D.S., Maunder, M.N., Geromont, H.F., Walters, C., McAllister, M.K., Hillary, R., Levontin, P., Kitakado, T., Davies, C.R. Performance review simple management procedures. ICES Journal Marine Science. 73: 464-482.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SAMtool-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stock Assessment Methods Toolkit — SAMtool-package","text":"Quang Huynh quang@bluematterscience.com Tom Carruthers tom@bluematterscience.com Adrian Hordyk adrian@bluematterscience.com","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical catch-at-age (SCA) model — SCA","title":"Statistical catch-at-age (SCA) model — SCA","text":"generic statistical catch--age model (single fleet, single season) uses catch, index, catch--age composition data. SCA parameterizes R0 steepness leading productivity parameters assessment model. Recruitment estimated deviations resulting stock-recruit relationship. SCA2, mean recruitment time series estimated recruitment deviations around mean estimated penalized parameters (SR = \"none\", similar Cadigan 2016). standard deviation set high recruitment almost like free parameters. Unfished MSY reference points estimated, recommended use yield per recruit spawning potential ratio harvest control rules. SCA_Pope variant SCA fixes expected catch observed catch, Pope's approximation used calculate annual exploitation rate (U; .e., catch_eq = \"Pope\").","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical catch-at-age (SCA) model — SCA","text":"","code":"SCA(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\", \"none\"),   vulnerability = c(\"logistic\", \"dome\"),   catch_eq = c(\"Baranov\", \"Pope\"),   CAA_dist = c(\"multinomial\", \"lognormal\"),   CAA_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_F_equilibrium = TRUE,   fix_omega = TRUE,   fix_tau = TRUE,   LWT = list(),   early_dev = c(\"comp_onegen\", \"comp\", \"all\"),   late_dev = \"comp50\",   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )  SCA2(   x = 1,   Data,   AddInd = \"B\",   vulnerability = c(\"logistic\", \"dome\"),   CAA_dist = c(\"multinomial\", \"lognormal\"),   CAA_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_F_equilibrium = TRUE,   fix_omega = TRUE,   fix_tau = TRUE,   LWT = list(),   common_dev = \"comp50\",   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )  SCA_Pope(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\", \"none\"),   vulnerability = c(\"logistic\", \"dome\"),   CAA_dist = c(\"multinomial\", \"lognormal\"),   CAA_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_U_equilibrium = TRUE,   fix_tau = TRUE,   LWT = list(),   early_dev = c(\"comp_onegen\", \"comp\", \"all\"),   late_dev = \"comp50\",   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical catch-at-age (SCA) model — SCA","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. Vulnerability survey fixed model. SR Stock-recruit function (either \"BH\" Beverton-Holt, \"Ricker\", \"none\" constant mean recruitment). vulnerability Whether estimated vulnerability \"logistic\" \"dome\" (double-normal). See details parameterization. catch_eq Whether use Baranov equation Pope's approximation calculate predicted catch age model. CAA_dist Whether multinomial lognormal distribution used likelihood catch--age matrix. See details. CAA_multiplier Numeric data weighting catch--age matrix CAA_hist = \"multinomial\". Otherwise ignored. See details. rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. max_age Integer, maximum age (plus-group) model. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep model SCA. affects calculation reference points SCA2. fix_F_equilibrium Logical, whether equilibrium fishing mortality prior first year model estimated. TRUE, F_equilibrium fixed value provided start (provided), otherwise, equal zero (assumes unfished conditions). fix_omega Logical, whether standard deviation catch fixed. TRUE, omega fixed value provided start (provided), otherwise, value based Data@CV_Cat. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, value based Data@sigmaR. LWT named list (Index, CAA, Catch) likelihood weights data components. index, vector length survey. CAL Catch, single value. early_dev Numeric character string describing years recruitment deviations estimated SCA. default, equal \"comp_onegen\", rec devs estimated one full generation prior first year catch--age (CAA) data available. \"comp\", rec devs estimated starting first year CAA. \"\", rec devs start beginning model. numeric, number years first year model start estimating rec devs. Use negative numbers years prior first year. late_dev Typically, numeric number recent years recruitment deviations estimated SCA (recruitment years based mean predicted stock-recruit relationship). default, \"comp50\" uses number ages (smaller mode) catch--age matrix less half abundance mode. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating random effects/state-space variable). Otherwise, recruitment deviations penalized parameters. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). inner.control named list arguments optimization random effects, passed TMB::newton(). ... arguments passed. common_dev Typically, numeric number recent years common recruitment deviation estimated (SCA2, uninformative years recruitment closer mean, can misleading, especially near end time series). default, \"comp50\" uses number ages (smaller mode) catch--age matrix less half abundance mode. fix_U_equilibrium Logical, fix_F_equilibrium SCA_Pope.","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical catch-at-age (SCA) model — SCA","text":"object class Assessment.","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical catch-at-age (SCA) model — SCA","text":"basic data inputs catch (weight), index (weight/biomass), catch--age matrix (numbers). catch_eq = \"Baranov\" (default SCA SCA2), annual F's estimated parameters assuming continuous fishing year, annual exploitation rate pulse fishing middle year estimated SCA_Pope SCA(catch_eq = \"Pope\"). annual sample sizes catch--age matrix provided model (used likelihood catch--age assuming multinomial distribution) manipulated via argument CAA_multiplier. argument interpreted two different ways depending value provided. CAA_multiplier > 1, value cap annual sample sizes number. CAA_multiplier <= 1, annual samples sizes re-scaled number, e.g. CAA_multiplier = 0.1 multiplies sample size 10% original number. default, sample sizes capped 50. Alternatively, lognormal distribution inverse proportion variance can used catch age (Punt Kennedy, 1994, cited Maunder 2011). start (optional), named list starting values estimates can provided : R0 Unfished recruitment, except SR = \"none\" mean recruitment. default, 150% Data@OM$R0[x] used start value closed-loop simulation, 400% mean catch otherwise. h Steepness. Otherwise, Data@steep[x] used, 0.9 empty. M Natural mortality. Otherwise, Data@Mort[x] used. vul_par Vulnerability parameters, see next paragraph. F vector length nyears year-specific fishing mortality. F_equilibrium Equilibrium fishing mortality leading first year model (determine initial depletion). default, 0. U_equilibrium F_equilibrium catch_eq = \"Pope\". default, 0. omega Lognormal SD catch (observation error) catch_eq = \"Baranov\". default, Data@CV_Cat[x]. tau Lognormal SD recruitment deviations (process error). default, Data@sigmaR[x]. Vulnerability can specified either logistic dome. logistic, parameter vector vul_par length 2: vul_par[1] corresponds a_95, age 95% vulnerability. a_95 transformed parameter via logit transformation constrain a_95 less 75% maximum age: a_95 = 0.75 * max_age * plogis(x[1]), x estimated vector. vul_par[2] corresponds a_50, age 50% vulnerability. Estimated offset, .e., a_50 = a_95 - exp(x[2]). dome vulnerability, double Gaussian parameterization used, vul_par estimated vector length 4: vul_par[1] corresponds  a_asc, first age full vulnerability ascending limb. model, a_asc estimated via logit transformation constrain a_95 less 75% maximum age: a_asc = 0.75 * maxage * plogis(x[1]), x estimated vector. vul_par[2] corresponds a_50, age 50% vulnerability ascending limb. Estimated offset, .e., a_50 = a_asc - exp(x[2]). vul_par[3] corresponds a_des, last age full vulnerability (descending limb starts). Generated via logit transformation constrain a_asc max_age, .e., a_des = (max_age - a_asc) * plogis(x[3]) + a_asc. default, fixed small value dome effectively three-parameter function. vul_par[4] corresponds vul_max, vulnerability maximum age. Estimated logit space: vul_max = plogis(x[4]). Vague priors vul_par[1] ~ N(0, sd = 3), vul_par[2] ~ N(0, 3), vul_par[3] ~ Beta(1.01, 1.01) used aid convergence parameters may well estimated, example, vulnerability >> 0.5 youngest age class.","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"priors","dir":"Reference","previous_headings":"","what":"Priors","title":"Statistical catch-at-age (SCA) model — SCA","text":"following priors can added named list, e.g., prior = list(M = c(0.25, 0.15), h = c(0.7, 0.1). parameter , provide vector values described: R0 - vector length 3. first value indicates distribution prior: 1 lognormal, 2 uniform log(R0), 3 uniform R0. lognormal, second third values prior mean (normal space) SD (log space). Otherwise, second third values lower upper bounds uniform distribution (values normal space). h - vector length 2 prior mean SD, normal space. Beverton-Holt steepness uses beta distribution, Ricker steepness uses normal distribution. M - vector length 2 prior mean (normal space) SD (log space). Lognormal prior. q - matrix nsurvey rows 2 columns. first column prior mean (normal space) second column SD (log space). Use NA rows corresponding indices without priors. See online documentation details.","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Statistical catch-at-age (SCA) model — SCA","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"required-data","dir":"Reference","previous_headings":"","what":"Required Data","title":"Statistical catch-at-age (SCA) model — SCA","text":"SCA, SCA_Pope, SCA_Pope: Cat, Ind, Mort, L50, L95, CAA, vbK, vbLinf, vbt0, wla, wlb, MaxAge","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"optional-data","dir":"Reference","previous_headings":"","what":"Optional Data","title":"Statistical catch-at-age (SCA) model — SCA","text":"SCA: Rec, steep, sigmaR, CV_Ind, CV_Cat SCA2: Rec, steep, CV_Ind, CV_Cat SCA_Pope: Rec, steep, sigmaR, CV_Ind","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical catch-at-age (SCA) model — SCA","text":"Cadigan, N.G. 2016. state-space stock assessment model northern cod, including -reported catches variable natural mortality rates. Canadian Journal Fisheries Aquatic Science 72:296-308. Maunder, M.N. 2011. Review evaluation likelihood functions composition data stock-assessment models: Estimating effective sample size. Fisheries Research 209:311-319. Punt, .E. Kennedy, R.B. 1997. Population modelling Tasmanian rock lobster, Jasus edwardsii, resources. Marine Freshwater Research 48:967-980.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistical catch-at-age (SCA) model — SCA","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical catch-at-age (SCA) model — SCA","text":"","code":"res <- SCA(Data = MSEtool::SimulatedData) res2 <- SCA2(Data = MSEtool::SimulatedData)  # Downweight the index res3 <- SCA(Data = MSEtool::SimulatedData, LWT = list(Index = 0.1, CAA = 1))  compare_models(res, res2)"},{"path":"https://samtool.openmse.com/reference/SCA_CAL.html","id":null,"dir":"Reference","previous_headings":"","what":"Age-structured model using fishery length composition — SCA_CAL","title":"Age-structured model using fishery length composition — SCA_CAL","text":"single-fleet assessment fits catch, indices abundance, fishery length compositions. See SCA details.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_CAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age-structured model using fishery length composition — SCA_CAL","text":"","code":"SCA_CAL(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\", \"none\"),   vulnerability = c(\"logistic\", \"dome\"),   catch_eq = c(\"Baranov\", \"Pope\"),   CAL_dist = c(\"multinomial\", \"lognormal\"),   CAL_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_F_equilibrium = TRUE,   fix_omega = TRUE,   fix_tau = TRUE,   LWT = list(),   early_dev = c(\"comp_onegen\", \"comp\", \"all\"),   late_dev = \"comp50\",   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/SCA_CAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age-structured model using fishery length composition — SCA_CAL","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. Vulnerability survey fixed model. SR Stock-recruit function (either \"BH\" Beverton-Holt, \"Ricker\", \"none\" constant mean recruitment). vulnerability Whether estimated vulnerability \"logistic\" \"dome\" (double-normal). See details parameterization. catch_eq Whether use Baranov equation Pope's approximation calculate predicted catch age model. CAL_dist Character, statistical distribution likelihood catch--length. CAL_multiplier Numeric data weighting catch--length matrix CAL_hist = \"multinomial\". value smaller one rescales annual sample sizes fraction original sample size. Values greater one generates cap annual sample size value. rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. max_age Integer, maximum age (plus-group) model. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep model SCA. affects calculation reference points SCA2. fix_F_equilibrium Logical, whether equilibrium fishing mortality prior first year model estimated. TRUE, F_equilibrium fixed value provided start (provided), otherwise, equal zero (assumes unfished conditions). fix_omega Logical, whether standard deviation catch fixed. TRUE, omega fixed value provided start (provided), otherwise, value based Data@CV_Cat. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, value based Data@sigmaR. LWT named list (Index, CAA, Catch) likelihood weights data components. index, vector length survey. CAL Catch, single value. early_dev Numeric character string describing years recruitment deviations estimated SCA. default, equal \"comp_onegen\", rec devs estimated one full generation prior first year catch--age (CAA) data available. \"comp\", rec devs estimated starting first year CAA. \"\", rec devs start beginning model. numeric, number years first year model start estimating rec devs. Use negative numbers years prior first year. late_dev Typically, numeric number recent years recruitment deviations estimated SCA (recruitment years based mean predicted stock-recruit relationship). default, \"comp50\" uses number ages (smaller mode) catch--age matrix less half abundance mode. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating random effects/state-space variable). Otherwise, recruitment deviations penalized parameters. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). inner.control named list arguments optimization random effects, passed TMB::newton(). ... arguments passed.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_CAL.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Age-structured model using fishery length composition — SCA_CAL","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_CAL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Age-structured model using fishery length composition — SCA_CAL","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":null,"dir":"Reference","previous_headings":"","what":"SCA models with time-varying natural mortality — SCA_DDM","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"modification SCA incorporates density-dependent effects M based biomass depletion (Forrest et al. 2018). Set bounds M M_bounds argument, length-2 vector first entry M0, M B/B0 >= 1, second entry M1, M B/B0 approaches zero. Note M0 can greater M1 (compensatory) M0 can less M1 (depensatory).","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"","code":"SCA_DDM(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\", \"none\"),   vulnerability = c(\"logistic\", \"dome\"),   catch_eq = c(\"Baranov\", \"Pope\"),   CAA_dist = c(\"multinomial\", \"lognormal\"),   CAA_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_F_equilibrium = TRUE,   fix_omega = TRUE,   fix_tau = TRUE,   LWT = list(),   early_dev = c(\"comp_onegen\", \"comp\", \"all\"),   late_dev = \"comp50\",   M_bounds = NULL,   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. Vulnerability survey fixed model. SR Stock-recruit function (either \"BH\" Beverton-Holt, \"Ricker\", \"none\" constant mean recruitment). vulnerability Whether estimated vulnerability \"logistic\" \"dome\" (double-normal). See details parameterization. catch_eq Whether use Baranov equation Pope's approximation calculate predicted catch age model. CAA_dist Whether multinomial lognormal distribution used likelihood catch--age matrix. See details. CAA_multiplier Numeric data weighting catch--age matrix CAA_hist = \"multinomial\". Otherwise ignored. See details. rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. max_age Integer, maximum age (plus-group) model. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep model SCA. affects calculation reference points SCA2. fix_F_equilibrium Logical, whether equilibrium fishing mortality prior first year model estimated. TRUE, F_equilibrium fixed value provided start (provided), otherwise, equal zero (assumes unfished conditions). fix_omega Logical, whether standard deviation catch fixed. TRUE, omega fixed value provided start (provided), otherwise, value based Data@CV_Cat. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, value based Data@sigmaR. LWT named list (Index, CAA, Catch) likelihood weights data components. index, vector length survey. CAL Catch, single value. early_dev Numeric character string describing years recruitment deviations estimated SCA. default, equal \"comp_onegen\", rec devs estimated one full generation prior first year catch--age (CAA) data available. \"comp\", rec devs estimated starting first year CAA. \"\", rec devs start beginning model. numeric, number years first year model start estimating rec devs. Use negative numbers years prior first year. late_dev Typically, numeric number recent years recruitment deviations estimated SCA (recruitment years based mean predicted stock-recruit relationship). default, \"comp50\" uses number ages (smaller mode) catch--age matrix less half abundance mode. M_bounds numeric vector length 2 indicate M B/B0 approaches zero one, respectively. default, set 75% 125%, respectively, Data@Mort[x]. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating random effects/state-space variable). Otherwise, recruitment deviations penalized parameters. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). inner.control named list arguments optimization random effects, passed TMB::newton(). ... arguments passed.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"object class Assessment.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"See SCA information arguments.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"Forrest, R.E., Holt, K.R., Kronlund, .R. 2018. Performance alternative harvest control rules two Pacific groundfish stocks uncertain natural mortality: Bias, robustness trade-offs. Fisheries Research 2016: 259-286.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SCA_DDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCA models with time-varying natural mortality — SCA_DDM","text":"","code":"res <- SCA_DDM(Data = MSEtool::SimulatedData)"},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":null,"dir":"Reference","previous_headings":"","what":"SCA with random walk in M — SCA_RWM","title":"SCA with random walk in M — SCA_RWM","text":"SCA_RWM modification SCA incorporates random walk M logit space (constant age). Set variance (start$tau_M) small value (0.001) order fix M years, functionally equivalent SCA.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCA with random walk in M — SCA_RWM","text":"","code":"SCA_RWM(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\", \"none\"),   vulnerability = c(\"logistic\", \"dome\"),   catch_eq = c(\"Baranov\", \"Pope\"),   CAA_dist = c(\"multinomial\", \"lognormal\"),   CAA_multiplier = 50,   rescale = \"mean1\",   max_age = Data@MaxAge,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_F_equilibrium = TRUE,   fix_omega = TRUE,   fix_tau = TRUE,   LWT = list(),   early_dev = c(\"comp_onegen\", \"comp\", \"all\"),   late_dev = \"comp50\",   refyear = expression(length(Data@Year)),   M_bounds = NULL,   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCA with random walk in M — SCA_RWM","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. Vulnerability survey fixed model. SR Stock-recruit function (either \"BH\" Beverton-Holt, \"Ricker\", \"none\" constant mean recruitment). vulnerability Whether estimated vulnerability \"logistic\" \"dome\" (double-normal). See details parameterization. catch_eq Whether use Baranov equation Pope's approximation calculate predicted catch age model. CAA_dist Whether multinomial lognormal distribution used likelihood catch--age matrix. See details. CAA_multiplier Numeric data weighting catch--age matrix CAA_hist = \"multinomial\". Otherwise ignored. See details. rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. max_age Integer, maximum age (plus-group) model. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep model SCA. affects calculation reference points SCA2. fix_F_equilibrium Logical, whether equilibrium fishing mortality prior first year model estimated. TRUE, F_equilibrium fixed value provided start (provided), otherwise, equal zero (assumes unfished conditions). fix_omega Logical, whether standard deviation catch fixed. TRUE, omega fixed value provided start (provided), otherwise, value based Data@CV_Cat. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, value based Data@sigmaR. LWT named list (Index, CAA, Catch) likelihood weights data components. index, vector length survey. CAL Catch, single value. early_dev Numeric character string describing years recruitment deviations estimated SCA. default, equal \"comp_onegen\", rec devs estimated one full generation prior first year catch--age (CAA) data available. \"comp\", rec devs estimated starting first year CAA. \"\", rec devs start beginning model. numeric, number years first year model start estimating rec devs. Use negative numbers years prior first year. late_dev Typically, numeric number recent years recruitment deviations estimated SCA (recruitment years based mean predicted stock-recruit relationship). default, \"comp50\" uses number ages (smaller mode) catch--age matrix less half abundance mode. refyear expression year M used report MSY unfished reference points. default, terminal year. multiple years provided, mean M specified time period used. M_bounds numeric vector length 2 indicate minimum maximum M random walk proportion starting M (start$M). default min max 75% 125%, respectively. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating random effects/state-space variable). Otherwise, recruitment deviations penalized parameters. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). inner.control named list arguments optimization random effects, passed TMB::newton(). ... arguments passed.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCA with random walk in M — SCA_RWM","text":"object class Assessment.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SCA with random walk in M — SCA_RWM","text":"model estimates year-specific M (constant age) random walk logit space, bounded proportion start$M (specified M_bounds). starting value first year M (start$M) Data@Mort[x] fixed, unless prior provided (prior$M). fixed SD random walk (tau_M) 0.05, default. Steepness unfished recruitment estimation model, along unfished reference points, correspond spawners per recruit using first year M. argument refyear, new unfished reference points steepness values calculated. See examples. Alternative values can provided start list (see examples): R0 Unfished recruitment, except SR = \"none\" mean recruitment. default, 150% Data@OM$R0[x] used start value closed-loop simulation, 400\\ h Steepness. Otherwise, Data@steep[x] used, 0.9 empty. M Natural mortality first year. Otherwise, Data@Mort[x] used. vul_par Vulnerability parameters, see next paragraph. F vector length nyears year-specific fishing mortality. F_equilibrium Equilibrium fishing mortality leading first year model (determine initial depletion). default, 0. omega Lognormal SD catch (observation error) catch_eq = \"Baranov\". default, Data@CV_Cat[x]. tau Lognormal SD recruitment deviations (process error). default, Data@sigmaR[x]. tau_M fixed SD random walk M. default, 0.05. See SCA information structure setup model. SCA builds stock-recruit relationship model. Annual unfished MSY reference points calculated reported TMB_report Assessment object.","code":""},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"SCA with random walk in M — SCA_RWM","text":"Model description equations available openMSE website.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SCA with random walk in M — SCA_RWM","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SCA_RWM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCA with random walk in M — SCA_RWM","text":"","code":"res <- SCA_RWM(Data = MSEtool::SimulatedData, start = list(M_start = 0.4, tau_M = 0.05)) res2 <- SCA(Data = MSEtool::SimulatedData) res3 <- SCA_RWM(Data = MSEtool::SimulatedData, start = list(M_start = 0.4, tau_M = 0.001))  # Use mean M in most recent 5 years for reporting reference points  res_5r <- SCA_RWM(Data = MSEtool::SimulatedData,                    refyear = expression(seq(length(Data@Year) - 4, length(Data@Year))),                   start = list(M_start = 0.4, tau_M = 0.001)) res_5r@SSB0 # SSB0 reported (see also res_5r@TMB_report$new_E0) #>        B  #> 26454.48  res_5r@TMB_report$E0 # SSB0 of Year 1 M #> [1] 14910.57  # \\donttest{ compare_models(res, res2, res3)  # }"},{"path":"https://samtool.openmse.com/reference/SP.html","id":null,"dir":"Reference","previous_headings":"","what":"Surplus production model with FMSY and MSY as leading parameters — SP","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"surplus production model uses time-series catches relative abundance index coded TMB. base model, SP, conditioned catch estimates predicted index. Continuous surplus production fishing modeled sub-annual time steps approximate behavior ASPIC (Prager 1994). Fox model, SP_Fox, fixes BMSY/K = 0.37 (1/e). state-space version, SP_SS estimates annual deviates biomass. option allows setting prior intrinsic rate increase. function spict model (Pedersen Berg, 2016) available MSEextra.","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"","code":"SP(   x = 1,   Data,   AddInd = \"B\",   rescale = \"mean1\",   start = NULL,   prior = list(),   fix_dep = TRUE,   fix_n = TRUE,   LWT = NULL,   n_seas = 4L,   n_itF = 3L,   Euler_Lotka = 0L,   SR_type = c(\"BH\", \"Ricker\"),   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   ... )  SP_SS(   x = 1,   Data,   AddInd = \"B\",   rescale = \"mean1\",   start = NULL,   prior = list(),   fix_dep = TRUE,   fix_n = TRUE,   fix_sigma = TRUE,   fix_tau = TRUE,   LWT = NULL,   early_dev = c(\"all\", \"index\"),   n_seas = 4L,   n_itF = 3L,   Euler_Lotka = 0L,   SR_type = c(\"BH\", \"Ricker\"),   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   inner.control = list(),   ... )  SP_Fox(x = 1, Data, ...)"},{"path":"https://samtool.openmse.com/reference/SP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"x index objects Data running runMSE. Otherwise, equals 1 running assessment interactively. Data object class Data. AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See details. fix_dep Logical, whether fix initial depletion (ratio biomass carrying capacity first year model). TRUE, uses value start, otherwise equal 1 (unfished conditions). fix_n Logical, whether fix exponent production function. TRUE, uses value start, otherwise equal n = 2, biomass MSY half carrying capacity. LWT vector likelihood weights survey. n_seas Integer, number seasons model calculating continuous surplus production. n_itF Integer, number iterations solve F conditional observed catch given multiple seasons within annual time step. Ignored n_seas = 1. Euler_Lotka Integer. greater zero, function calculate prior intrinsic rate increase use estimation model (lieu explicit prior argument prior). value argument specifies number stochastic samples used calculate prior SD. See section priors . SR_type use_r_prior = TRUE, stock-recruit relationship used calculate stock-recruit alpha parameter steepness unfished spawners-per-recruit. Used develop r prior. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list parameters regarding optimization passed stats::nlminb(). ... SP_Fox, additional arguments pass SP. fix_sigma Logical, whether standard deviation index fixed. TRUE, sigma fixed value provided start (provided), otherwise, value based Data@CV_Ind. fix_tau Logical, standard deviation biomass deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, equal 0.1. early_dev Character string describing years biomass deviations estimated SP_SS. default, deviations estimated year model (\"\"), deviations also estimated index data available (\"index\"). integrate Logical, whether likelihood model integrates likelihood biomass deviations (thus, treating state-space variable). inner.control named list arguments optimization random effects, passed newton via TMB::MakeADFun().","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"object Assessment containing objects output TMB.","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"start (optional), named list starting values estimates can provided : MSY Maximum sustainable yield.. Otherwise, 300% mean catch default. FMSY Steepness. Otherwise, Data@Mort[x] 0.2 used. dep Initial depletion (B/B0) first year model. default, 1. n production function exponent determines BMSY/B0. default, 2 BMSY/B0 = 0.5. sigma Lognormal SD index (observation error). default, 0.05. used multiple indices. tau Lognormal SD biomass deviations (process error) SP_SS. default, 0.1. Multiple indices supported model. Tip: create Fox model (Fox 1970), just fix n = 1. See example.","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"model uses Fletcher (1978) formulation parameterized FMSY MSY leading parameters. default conditions assume unfished conditions first year time series symmetric production function (n = 2).","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"priors","dir":"Reference","previous_headings":"","what":"Priors","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"following priors can added named list, e.g., prior = list(r = c(0.25, 0.15), MSY = c(50, 0.1). parameter , provide vector values described: r - vector length 2 lognormal prior mean (normal space) SD (lognormal space). MSY - vector length 2 lognormal prior mean (normal space) SD (lognormal space). lieu explicit r prior provided user, set argument Euler_Lotka = TRUE calculate prior mean SD using Euler-Lotka method (Equation 15a McAllister et al. 2001). Euler-Lotka method modified multiply left-hand side equation 15a alpha parameter stock-recruit relationship (Stanley et al. 2009). Natural mortality steepness sampled order generate prior distribution r. See vignette(\"Surplus_production\") details.","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"required-data","dir":"Reference","previous_headings":"","what":"Required Data","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"SP: Cat, Ind SP_SS: Cat, Ind","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"optional-data","dir":"Reference","previous_headings":"","what":"Optional Data","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"SP_SS: CV_Ind","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"Fletcher, R. . 1978. restructuring Pella-Tomlinson system. Fishery Bulletin 76:515:521. Fox, W.W. 1970. exponential surplus-yield model optimizing exploited fish populations. Transactions American Fisheries Society 99:80-88. McAllister, M.K., Pikitch, E.K., Babcock, E.. 2001. Using demographic methods construct Bayesian priors intrinsic rate increase Schaefer model implications stock rebuilding. Can. J. Fish. Aquat. Sci. 58: 1871-1890. Pedersen, M. W. Berg, C. W. 2017. stochastic surplus production model continuous time. Fish Fisheries. 18:226-243. Pella, J. J. Tomlinson, P. K. 1969. generalized stock production model. Inter-. Trop. Tuna Comm., Bull. 13:419-496. Prager, M. H. 1994. suite extensions nonequilibrium surplus-production model. Fishery Bulletin 92:374-389. Stanley, R.D., M. McAllister, P. Starr N. Olsen. 2009. Stock assessment bocaccio (Sebastes paucispinis) British Columbia waters. DFO Can. Sci. Advis. Sec. Res. Doc. 2009/055. xiv + 200 p.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Surplus production model with FMSY and MSY as leading parameters — SP","text":"","code":"data(swordfish)  #### Observation-error surplus production model res <- SP(Data = swordfish)  # Provide starting values, assume B/K = 0.875 in first year of model # and symmetrical production curve (n = 2) start <- list(dep = 0.875, n = 2) res <- SP(Data = swordfish, start = start)  # \\donttest{ plot(res) #> ℹ Writing markdown file: /tmp/RtmpRU73lR/report_SP.Rmd #> ℹ Rendering markdown file: /tmp/RtmpRU73lR/report_SP.Rmd #> ℹ See help(plot.Assessment) to adjust report and file directory. #> ✔ Rendered file: /tmp/RtmpRU73lR/report_SP.html profile(res, FMSY = seq(0.1, 0.4, 0.01))  #> An object of class \"prof\" #> Slot \"Model\": #> [1] \"SP\" #>  #> Slot \"Name\": #> [1] \"North Atlantic Swordfish (Source: ASPIC software)\" #>  #> Slot \"Par\": #> [1] \"FMSY\" #>  #> Slot \"MLE\": #> [1] 0.2779916 #>  #> Slot \"grid\": #>    FMSY      MSY          nll #> 1  0.10 14279.16 3.229494e+00 #> 2  0.11 14279.16 2.870962e+00 #> 3  0.12 14279.16 2.530610e+00 #> 4  0.13 14279.16 2.209910e+00 #> 5  0.14 14279.16 1.909978e+00 #> 6  0.15 14279.16 1.631634e+00 #> 7  0.16 14279.16 1.375443e+00 #> 8  0.17 14279.16 1.141752e+00 #> 9  0.18 14279.16 9.307120e-01 #> 10 0.19 14279.16 7.423049e-01 #> 11 0.20 14279.16 5.763609e-01 #> 12 0.21 14279.16 4.325774e-01 #> 13 0.22 14279.16 3.105355e-01 #> 14 0.23 14279.16 2.097149e-01 #> 15 0.24 14279.16 1.295084e-01 #> 16 0.25 14279.16 6.923471e-02 #> 17 0.26 14279.16 2.815079e-02 #> 18 0.27 14279.16 5.463285e-03 #> 19 0.28 14279.16 3.392047e-04 #> 20 0.29 14279.16 1.191583e-02 #> 21 0.30 14279.16 3.930994e-02 #> 22 0.31 14279.16 8.162629e-02 #> 23 0.32 14279.16 1.999949e+01 #> 24 0.33 14279.16 2.074303e-01 #> 25 0.34 14279.16 5.523536e+00 #> 26 0.35 14279.16 3.822012e-01 #> 27 0.36 14279.16 2.003749e+01 #> 28 0.37 14279.16 2.004625e+01 #> 29 0.38 14279.16 2.005471e+01 #> 30 0.39 14279.16 1.466457e+01 #> 31 0.40 14279.16 2.007081e+01 #>  retrospective(res)     #>                   Mohn's rho #> Fishing mortality      0.129 #> F/F[MSY]              -0.145 #> Biomass               -0.091 #> B/B[MSY]               0.152 #> B/B[0]                 0.152 # }  #### State-space version res_SS <- SP_SS(Data = swordfish, start = list(dep = 0.875, sigma = 0.1, tau = 0.1))  # \\donttest{ plot(res_SS) #> ℹ Writing markdown file: /tmp/RtmpRU73lR/report_SP_SS.Rmd #> ℹ Rendering markdown file: /tmp/RtmpRU73lR/report_SP_SS.Rmd #> ℹ See help(plot.Assessment) to adjust report and file directory. #> ✔ Rendered file: /tmp/RtmpRU73lR/report_SP_SS.html  # }  #### Fox model res_Fox <- SP(Data = swordfish, start = list(n = 1), fix_n = TRUE) res_Fox2 <- SP_Fox(Data = swordfish)  #### SP with r prior calculated internally (100 stochastic samples to get prior SD) res_prior <- SP(Data = SimulatedData, Euler_Lotka = 100)  #### Pass an r prior to the model with mean = 0.35, lognormal sd = 0.10 res_prior2 <- SP(Data = SimulatedData, prior = list(r = c(0.35, 0.10)))  #### Pass MSY prior to the model with mean = 1500, lognormal sd = 0.05 res_prior3 <- SP(Data = SimulatedData, prior = list(MSY = c(1500, 0.05)))"},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the production parameter based on depletion that produces MSY — SP_production","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"surplus production models, function returns production exponent n corresponding BMSY/K (Fletcher 1978).","code":""},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"","code":"SP_production(depletion, figure = TRUE)"},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"depletion hypothesized depletion produces MSY. figure Local, plots figure production function function depletion (B/K)","code":""},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"production function exponent n (numeric).","code":""},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"May useful parameterizing n SP SP_SS.","code":""},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"Fletcher, R. . 1978. restructuring Pella-Tomlinson system. Fishery Bulletin 76:515:521.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SP_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the production parameter based on depletion that produces MSY — SP_production","text":"","code":"SP_production(0.5) #> [1] 2 SP_production(0.5)  #> [1] 2"},{"path":"https://samtool.openmse.com/reference/SSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Stock Synthesis — SSS","title":"Simple Stock Synthesis — SSS","text":"simple age-structured model (SCA_Pope) fitted time series catch going back unfished conditions. Terminal depletion (ratio current total biomass unfished biomass) default fixed 0.4. Selectivity fixed maturity ogive, although can overridden start argument. sole parameter estimated R0 (unfished recruitment), process error.","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Stock Synthesis — SSS","text":"","code":"SSS(   x = 1,   Data,   dep = 0.4,   SR = c(\"BH\", \"Ricker\"),   rescale = \"mean1\",   start = NULL,   prior = list(),   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   ... )"},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Stock Synthesis — SSS","text":"x position Data object (default, equal one assessments). Data object class Data dep Depletion value use model. Can expression evaluated inside function. SR Stock-recruit function (either \"BH\" Beverton-Holt \"Ricker\"). rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. start Optional named list starting values. Entries can expressions evaluated function: R0 Unfished recruitment vul_par length-two vector age 95% 50% fleet selectivity. Fixed maturity otherwise. prior named list parameters priors added model. See details SCA_Pope. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). ... arguments passed (currently used).","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Stock Synthesis — SSS","text":"object class Assessment.","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple Stock Synthesis — SSS","text":"SAMtool, SSS implementation SCA_Pope fixed final depletion (terms total biomass, spawning biomass) assumption.","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simple Stock Synthesis — SSS","text":"Cope, J.M. 2013. Implementing statistical catch--age model (Stock Synthesis) tool deriving overfishing limits data-limited situations. Fisheries Research 142:3-14.","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple Stock Synthesis — SSS","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/SSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple Stock Synthesis — SSS","text":"","code":"res <- SSS(Data = Red_snapper)  SSS_MP <- make_MP(SSS, HCR40_10, dep = 0.3) # Always assume depletion = 0.3"},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":null,"dir":"Reference","previous_headings":"","what":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"Functions (class Assessment) emulate stock assessment sampling operating model biomass, abundance, fishing mortality (observation error, autocorrelation, bias) instead fitting model. output can passed onto harvest control rule (HCR function). Shortcut base function samples OM error distribution. Shortcut2, preferable option, fits SCA last historical year operating model, estimates error parameters using vector autoregressive model residuals, generates model \"estimates\" using predict.varest. Perfect assumes error assessment model useful comparing behavior different harvest control rules. utilize shortcut method closed-loop simulation, use make_MP functions Assessment model. N.B. functions work runMSE(parallel = TRUE) MSEtool v3.4.0 earlier.","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"","code":"Shortcut(   x = 1,   Data,   method = c(\"B\", \"N\", \"RF\"),   B_err = c(0.3, 0.7, 1),   N_err = c(0.3, 0.7, 1),   R_err = c(0.3, 0.7, 1),   F_err = c(0.3, 0.7, 1),   VAR_model,   ... )  Shortcut2(   x,   Data,   method = \"N\",   SCA_args = list(),   VAR_args = list(type = \"none\"),   ... )  Perfect(x, Data, ...)"},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"x index objects Data running runMSE. Otherwise, equals 1 running assessment interactively. Data object class Data. method Indicates error OM located. \"B\", OM biomass directly sampled error. \"N\", OM abundance--age sampled biomass subsequently calculated. \"RF\", recruitment F sampled calculate abundance biomass. error biological parameters \"N\" \"RF\". default, \"B\" used Shortcut \"N\" Shortcut2. B_err method = \"B\", vector length three specifies standard deviation (logspace), autocorrelation, bias (1 = unbiased) biomass. N_err B_err, abundance method = \"N\". R_err B_err, recruitment method = \"RF\". F_err B_err. Always used regardless method report F selectivity HCR. VAR_model object returned VAR generate emulated assessment error. Used Shortcut2. ... arguments (currently used). SCA_args Additional arguments pass SCA. Currently, arguments SR vulnerability obtained operating model. VAR_args Additional arguments pass VAR. default, argument type = \"none\" (stationary time series mean zero assumed).","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"object class Assessment.","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"Currently error FMSY (frequently target F HCR). See Wiedenmann et al. (2015) guidance magnitude error shortcut emulator.","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"Wiedenmann, J., Wilberg, M.J., Sylvia, ., Miller, T.J. 2015. Autocorrelated error stock assessment estimates: Implications management strategy evaluation. Fisheries Research 172: 325-334.","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/Shortcut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assessment emulator as a shortcut to model fitting in closed-loop simulation — Shortcut","text":"","code":"Shortcut_4010 <- make_MP(Shortcut, HCR40_10)  Shortcut_Nerr <- make_MP(Shortcut, HCR40_10, method = \"N\", N_err = c(0.1, 0.1, 1)) # Highly precise!  # Fits SCA first and then emulate it in the projection period  Shortcut2_4010 <- make_MP(Shortcut2, HCR40_10)   # \\donttest{ # Compare the shortcut method vs. fitting an SCA model with a 40-10 control rule MSE <- runMSE(testOM, MPs = c(\"Shortcut_4010\", \"SCA_4010\")) #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: Shortcut_4010 # }  # Compare the performance of three HCRs Perfect_4010 <- make_MP(Perfect, HCR40_10) Perfect_6020 <- make_MP(Perfect, HCR60_20) Perfect_8040MSY <- make_MP(Perfect, HCR_ramp, OCP_type = \"SSB_SSBMSY\", TOCP = 0.8, LOCP = 0.4)  # \\donttest{ MSE <- runMSE(testOM, MPs = c(\"Perfect_4010\", \"Perfect_6020\", \"Perfect_8040MSY\")) #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: Perfect_4010, Perfect_6020, Perfect_8040MSY # }"},{"path":"https://samtool.openmse.com/reference/TAC_MSY.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MSY-based TAC from Assessment object — TAC_MSY","title":"Calculate MSY-based TAC from Assessment object — TAC_MSY","text":"function calculate total allowable catch (TAC). Based MSY (maximum sustainable yield) principle, TAC product either UMSY FMSY available biomass, .e. vulnerable biomass, terminal year.","code":""},{"path":"https://samtool.openmse.com/reference/TAC_MSY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MSY-based TAC from Assessment object — TAC_MSY","text":"","code":"TAC_MSY(Assessment, reps, MSY_frac = 1)"},{"path":"https://samtool.openmse.com/reference/TAC_MSY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MSY-based TAC from Assessment object — TAC_MSY","text":"Assessment Assessment object estimates UMSY FMSY terminal year vulnerable biomass. reps number stochastic draws UMSY FMSY. MSY_frac fraction FMSY UMSY calculating TAC (e.g. MSY_frac = 0.75 fishes 75% FMSY).","code":""},{"path":"https://samtool.openmse.com/reference/TAC_MSY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MSY-based TAC from Assessment object — TAC_MSY","text":"vector length reps stochastic samples TAC recommendation. Returns NA's missing either UMSY/FMSY vulnerable biomass.","code":""},{"path":"https://samtool.openmse.com/reference/TAC_MSY.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate MSY-based TAC from Assessment object — TAC_MSY","text":"calculate_TAC deprecated version 1.2 favor TAC_MSY latter informative name.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/VPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual population analysis (VPA) — VPA","title":"Virtual population analysis (VPA) — VPA","text":"VPA model back-calculates abundance--age assuming catch--age known without error tuned index. population dynamics equations primarily drawn VPA-2BOX (Porch 2018). MSY reference points per-recruit quantities calculated VPA output.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual population analysis (VPA) — VPA","text":"","code":"VPA(   x = 1,   Data,   AddInd = \"B\",   expanded = FALSE,   SR = c(\"BH\", \"Ricker\"),   vulnerability = c(\"logistic\", \"dome\", \"free\"),   start = list(),   fix_h = TRUE,   fix_Fratio = TRUE,   fix_Fterm = FALSE,   LWT = NULL,   shrinkage = list(),   n_itF = 5L,   min_age = \"auto\",   max_age = \"auto\",   refpt = list(),   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 2e+05, eval.max = 4e+05),   ... )"},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virtual population analysis (VPA) — VPA","text":"x position Data object (default, equal one assessments). Data object class Data AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. expanded Whether catch age Data expanded. FALSE, catch weight provided Data@Cat function can calculate annual expansion factors. SR Stock-recruit function (either \"BH\" Beverton-Holt \"Ricker\") calculating MSY reference points. vulnerability Whether terminal year vulnerability \"logistic\" \"dome\" (double-normal). \"free\", independent F's calculated terminal year (subject assumed ratio F plus-group previous age class). See details parameterization. start Optional list starting values. Entries can expressions evaluated function. See details. fix_h Logical, whether fix steepness value Data@steep. affects calculation MSY unfished reference points. fix_Fratio Logical, whether ratio F plus-group previous age class fixed model. fix_Fterm Logical, whether fix value terminal F. LWT vector likelihood weights survey. shrinkage named list length 2 constrain parameters: vul - length two vector constrains vulnerability--age recent years. first number number years vulnerability constrained (random walk log space), second number standard deviation random walk. default R - length two vector constrains recruitment estimates recent years. first number number years recruitment constrained (random walk log space), second number standard deviation random walk. n_itF number iterations solving F model (via Newton's method). min_age integer specify smallest age class VPA. default, youngest age non-zero CAA terminal year used. max_age integer specify oldest age class VPA. default, oldest age non-zero CAA years used. refpt named list many years average parameters calculating reference points, yield per recruit, spawning potential ratio: vul integer number recent years average vulnerability schedule (default 3). R length two quantile used calculate recruitment year following terminal year number years quantile used, .e., c(0.5, 5) default calculates median recruitment recent 5 years model. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list arguments optimization passed stats::nlminb(). ... arguments passed.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual population analysis (VPA) — VPA","text":"object class Assessment. F vector apical fishing mortality experienced age class given year.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Virtual population analysis (VPA) — VPA","text":"VPA initialized estimating terminal F--age. Parameter Fterm apical terminal F functional form vulnerability used terminal year, .e., vulnerability = \"logistic\" \"free\". terminal F--age otherwise independent parameters, Fterm F reference age half maximum age. terminal-year abundance estimated, abundance historical years can back-calculated. oldest age group plus-group, requires assumption regarding ratio F's plus-group next youngest age class. F-ratio can fixed (default) estimated. start (optional), named list starting values estimates can provided : Fterm terminal year fishing mortality. apical F vulnerability = \"logistic\" \"free\". Fratio ratio F plus-group next youngest age. provided, value 1 used. vul_par Vulnerability parameters terminal year. length 2 vector \"logistic\" length 4 \"dome\", see SCA documentation parameterization. option \"free\", vector length -2 number age classes model. estimate parameters, vulnerability initially set one half max age (subsequently re-calculated relative maximum F experienced year). Vulnerability plus-group also constrained Fratio. MSY depletion reference points calculated fitting stock recruit relationship recruitment SSB estimates. Per-recruit quantities also calculated, may used harvest control rules.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"additional-considerations","dir":"Reference","previous_headings":"","what":"Additional considerations","title":"Virtual population analysis (VPA) — VPA","text":"VPA tends finicky implement straight box. example, zeros plusgroup age catch--age model crash model, well catch--age values close zero. model sets F--age 1e-4 catch--age value < 1e-4. recommended preliminary fits VPA running simulations en masse. See example . Shrinkage, penalty functions stabilize model estimates recruitment selectivity year--year near end time series, alters behavior model. something tinker initial model fits, worth evaluating closed-loop simulation.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Virtual population analysis (VPA) — VPA","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Virtual population analysis (VPA) — VPA","text":"Porch, C.E. 2018. VPA-2BOX 4.01 User Guide. NOAA Tech. Memo. NMFS-SEFSC-726. 67 pp.","code":""},{"path":"https://samtool.openmse.com/reference/VPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virtual population analysis (VPA) — VPA","text":"","code":"# \\donttest{ OM <- MSEtool::testOM  # Simulate logistic normal age comps with CV = 0.1 # (set CAA_ESS < 1, which is interpreted as a CV) OM@CAA_ESS <- c(0.1, 0.1)  Hist <- MSEtool::Simulate(OM, silent = TRUE)  # VPA max age is 15 (Hist@Data@MaxAge) m <- VPA(x = 2, Data = Hist@Data, vulnerability = \"dome\")  # Use age-9 as the VPA max age instead m9 <- VPA(x = 2, Data = Hist@Data, vulnerability = \"dome\", max_age = 9)  compare_models(m, m9)  # }"},{"path":"https://samtool.openmse.com/reference/cDD.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous Delay-differential assessment model — cDD","title":"Continuous Delay-differential assessment model — cDD","text":"catch index-based assessment model. Compared discrete delay-difference (annual time-step production fishing), delay-differential model (cDD) based continuous recruitment fishing mortality within time-step. continuous model works much better populations high turnover (e.g. high F M, continuous reproduction). model conditioned catch fits observed index. state-space version (cDD_SS), recruitment deviations stock-recruit relationship estimated.","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous Delay-differential assessment model — cDD","text":"","code":"cDD(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\"),   rescale = \"mean1\",   MW = FALSE,   start = NULL,   prior = list(),   fix_h = TRUE,   dep = 1,   LWT = list(),   n_itF = 5L,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   ... )  cDD_SS(   x = 1,   Data,   AddInd = \"B\",   SR = c(\"BH\", \"Ricker\"),   rescale = \"mean1\",   MW = FALSE,   start = NULL,   prior = list(),   fix_h = TRUE,   fix_sigma = FALSE,   fix_tau = TRUE,   dep = 1,   LWT = list(),   n_itF = 5L,   integrate = FALSE,   silent = TRUE,   opt_hess = FALSE,   n_restart = ifelse(opt_hess, 0, 1),   control = list(iter.max = 5000, eval.max = 10000),   inner.control = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous Delay-differential assessment model — cDD","text":"x index objects Data running closed loop simulation. Otherwise, equals 1 running assessment. Data object class MSEtool::Data. AddInd vector integers character strings indicating indices used model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. SR Stock-recruit function (either \"BH\" Beverton-Holt \"Ricker\"). rescale multiplicative factor rescales catch assessment model, can improve convergence. default, \"mean1\" scales catch time series mean 1, otherwise numeric. Output re-converted back original units. MW Logical, whether fit mean weight. closed-loop simulation, mean weight grabbed Data@Misc[[x]]$MW, otherwise calculated Data@CAL. start Optional list starting values. Entries can expressions evaluated function. See details. prior named list parameters priors added model. See . fix_h Logical, whether fix steepness value Data@steep assessment model. dep initial depletion first year model. tight prior placed model objective function estimate equilibrium fishing mortality corresponding initial depletion. Due tight prior, F considered independent model parameter. Set zero eliminate prior. LWT named list likelihood weights. LWT$Index, vector likelihood weights survey, LWT$MW numeric. n_itF Integer, number iterations solve F conditional observed catch. silent Logical, passed TMB::MakeADFun(), whether TMB print trace information optimization. Used diagnostics model convergence. opt_hess Logical, whether hessian function passed stats::nlminb() optimization (generally reduces number iterations convergence, memory time intensive guarantee increase convergence rate). Ignored integrate = TRUE. n_restart number restarts (calls stats::nlminb()) optimization procedure, long model converged. optimization continues parameters previous (re)start. control named list parameters regarding optimization passed stats::nlminb(). ... Additional arguments (currently used). fix_sigma Logical, whether standard deviation index fixed. TRUE, sigma fixed value provided start (provided), otherwise, value based Data@CV_Ind. fix_tau Logical, standard deviation recruitment deviations fixed. TRUE, tau fixed value provided start (provided), otherwise, equal 1. integrate Logical, whether likelihood model integrates likelihood recruitment deviations (thus, treating state-space variable). Otherwise, recruitment deviations penalized parameters. inner.control named list arguments optimization random effects, passed TMB::newton() via TMB::MakeADFun().","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous Delay-differential assessment model — cDD","text":"object Assessment containing objects output TMB.","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Continuous Delay-differential assessment model — cDD","text":"start (optional), named list starting values estimates can provided : R0 Unfished recruitment. Otherwise, Data@OM$R0[x] used closed-loop, 400% mean catch otherwise. h Steepness. Otherwise, Data@steep[x] used, 0.9 empty. Kappa Delay-differential Kappa parameter. Otherwise, calculated biological parameters Data object. F_equilibrium Equilibrium fishing mortality leading first year model (determine initial depletion). default, 0. tau Lognormal SD recruitment deviations (process error) DD_SS. default, Data@sigmaR[x]. sigma Lognormal SD index (observation error). default, Data@CV_Ind[x]. used multiple indices used. sigma_W Lognormal SD mean weight (observation error). default, 0.1. Multiple indices supported model. Data@Ind, Data@VInd, Data@SpInd assumed biomass-based. Data@AddInd, Data@I_units used identify biomass vs. abundance-based index.","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"priors","dir":"Reference","previous_headings":"","what":"Priors","title":"Continuous Delay-differential assessment model — cDD","text":"following priors can added named list, e.g., prior = list(M = c(0.25, 0.15), h = c(0.7, 0.1). parameter , provide vector values described: R0 - vector length 3. first value indicates distribution prior: 1 lognormal, 2 uniform log(R0), 3 uniform R0. lognormal, second third values prior mean (normal space) SD (log space). Otherwise, second third values lower upper bounds uniform distribution (values normal space). h - vector length 2 prior mean SD, normal space. Beverton-Holt steepness uses beta distribution, Ricker steepness uses normal distribution. M - vector length 2 prior mean (normal space) SD (log space). Lognormal prior. q - matrix nsurvey rows 2 columns. first column prior mean (normal space) second column SD (log space). Use NA rows corresponding indices without priors. See online documentation details.","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Continuous Delay-differential assessment model — cDD","text":"Model description equations available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"required-data","dir":"Reference","previous_headings":"","what":"Required Data","title":"Continuous Delay-differential assessment model — cDD","text":"cDD: Cat, Ind, Mort, L50, vbK, vbLinf, vbt0, wla, wlb, MaxAge cDD_SS: Cat, Ind, Mort, L50, vbK, vbLinf, vbt0, wla, wlb, MaxAge","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"optional-data","dir":"Reference","previous_headings":"","what":"Optional Data","title":"Continuous Delay-differential assessment model — cDD","text":"cDD: steep cDD_SS: steep, CV_Ind, sigmaR","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Continuous Delay-differential assessment model — cDD","text":"Hilborn, R., Walters, C., 1992. Quantitative Fisheries Stock Assessment: Choice, Dynamics Uncertainty. Chapman Hall, New York.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Continuous Delay-differential assessment model — cDD","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/cDD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous Delay-differential assessment model — cDD","text":"","code":"#### Observation-error delay difference model res <- cDD(Data = MSEtool::Red_snapper)  ### State-space version ### Also set recruitment variability SD = 0.6 (since fix_tau = TRUE) res <- cDD_SS(Data = MSEtool::Red_snapper, start = list(tau = 0.6))  summary(res@SD) # Parameter estimates #>                 Estimate Std. Error #> R0x         -0.516462146        NaN #> log_sigma   -1.825697311        NaN #> log_rec_dev  0.007309376        NaN #> log_rec_dev  0.033324174        NaN #> log_rec_dev  0.036138491        NaN #> log_rec_dev  0.037280642        NaN #> log_rec_dev  0.053679032        NaN #> log_rec_dev  0.113799092        NaN #> log_rec_dev  0.148088168        NaN #> log_rec_dev  0.185460723        NaN #> log_rec_dev  0.242453173        NaN #> log_rec_dev  0.310530201        NaN #> log_rec_dev  0.342690648        NaN #> log_rec_dev  0.337102550        NaN #> log_rec_dev  0.330495999        NaN #> log_rec_dev  0.366257963        NaN #> log_rec_dev  0.384039989        NaN #> log_rec_dev  0.402561567        NaN #> log_rec_dev  0.453567855        NaN #> log_rec_dev  0.414847098        NaN #> log_rec_dev  0.355096744        NaN #> log_rec_dev  0.323088402        NaN #> log_rec_dev  0.318067480        NaN #> log_rec_dev  0.327920944        NaN #> log_rec_dev  0.306529182        NaN #> log_rec_dev  0.302725964        NaN #> log_rec_dev  0.353198959        NaN #> log_rec_dev  0.384240430        NaN #> log_rec_dev  0.446717608        NaN #> log_rec_dev  0.539499589        NaN #> log_rec_dev  0.564339576        NaN #> log_rec_dev  0.511080900        NaN #> log_rec_dev  0.563475086        NaN #> log_rec_dev  0.539197361        NaN #> log_rec_dev  0.367188417        NaN #> log_rec_dev  0.221219093        NaN #> log_rec_dev  0.139529613        NaN #> log_rec_dev  0.085437945        NaN #> log_rec_dev  0.065626784        NaN #> log_rec_dev  0.062538212        NaN #> log_rec_dev  0.074750056        NaN #> log_rec_dev  0.041520994        NaN #> log_rec_dev  0.007606233        NaN #> log_rec_dev  0.007096973        NaN #> log_rec_dev  0.053798631        NaN #> log_rec_dev  0.095699895        NaN #> log_rec_dev  0.092595003        NaN #> log_rec_dev  0.070754701        NaN #> log_rec_dev  0.059231729        NaN #> log_rec_dev  0.050443507        NaN #> log_rec_dev  0.049333273        NaN #> log_rec_dev  0.049128428        NaN #> log_rec_dev  0.031476104        NaN #> log_rec_dev  0.028465058        NaN #> log_rec_dev  0.011997883        NaN #> log_rec_dev -0.014335908        NaN #> log_rec_dev -0.013501650        NaN #> log_rec_dev -0.023189784        NaN #> log_rec_dev -0.013922131        NaN #> log_rec_dev -0.037682299        NaN #> log_rec_dev -0.105658047        NaN #> log_rec_dev -0.150263442        NaN #> log_rec_dev -0.157945761        NaN #> log_rec_dev -0.150706928        NaN #> log_rec_dev -0.167906572        NaN #> log_rec_dev -0.229036300        NaN #> log_rec_dev -0.274486497        NaN #> log_rec_dev -0.279307235        NaN #> log_rec_dev -0.248849718        NaN #> log_rec_dev -0.214099416        NaN #> log_rec_dev -0.205747970        NaN #> log_rec_dev -0.231667491        NaN #> log_rec_dev -0.256883800        NaN #> log_rec_dev -0.273316451        NaN #> log_rec_dev -0.270855428        NaN #> log_rec_dev -0.275867215        NaN #> log_rec_dev -0.270787993        NaN #> log_rec_dev -0.275187001        NaN #> log_rec_dev -0.282803279        NaN #> log_rec_dev -0.249544800        NaN #> log_rec_dev -0.229031544        NaN #> log_rec_dev -0.218633177        NaN #> log_rec_dev -0.186554106        NaN #> log_rec_dev -0.150406056        NaN #> log_rec_dev -0.107573490        NaN #> log_rec_dev -0.063303275        NaN #> log_rec_dev -0.065666120        NaN #> log_rec_dev -0.033815268        NaN #> log_rec_dev -0.025354704        NaN #> log_rec_dev -0.019843728        NaN #> log_rec_dev -0.023144074        NaN #> log_rec_dev -0.030285521        NaN #> log_rec_dev -0.061928335        NaN #> log_rec_dev -0.079617299        NaN #> log_rec_dev -0.115037875        NaN #> log_rec_dev -0.157590805        NaN #> log_rec_dev -0.193396401        NaN #> log_rec_dev -0.211749821        NaN #> log_rec_dev -0.206408787        NaN #> log_rec_dev -0.215012407        NaN #> log_rec_dev -0.202239284        NaN #> log_rec_dev -0.164449617        NaN #> log_rec_dev -0.168729177        NaN #> log_rec_dev -0.166330932        NaN #> log_rec_dev -0.123512727        NaN #> log_rec_dev -0.155587811        NaN #> log_rec_dev -0.179035004        NaN #> log_rec_dev -0.271359916        NaN #> log_rec_dev -0.358704133        NaN #> log_rec_dev -0.356621232        NaN #> log_rec_dev -0.411378487        NaN #> log_rec_dev -0.447722953        NaN #> log_rec_dev -0.482605564        NaN #> log_rec_dev -0.533069456        NaN #> log_rec_dev -0.554356514        NaN #> log_rec_dev -0.608834077        NaN #> log_rec_dev -0.658653773        NaN #> log_rec_dev -0.648402316        NaN #> log_rec_dev -0.732410697        NaN #> log_rec_dev -0.792387014        NaN #> log_rec_dev -0.788267328        NaN #> log_rec_dev -0.714021933        NaN #> log_rec_dev -0.477556493        NaN #> log_rec_dev -0.166597079        NaN #> log_rec_dev  0.113171464        NaN #> log_rec_dev  0.776095656        NaN #> log_rec_dev  0.065704176        NaN #> log_rec_dev  1.475117497        NaN #> log_rec_dev -0.469887281        NaN #> log_rec_dev -0.594670030        NaN #> log_rec_dev  1.412706083        NaN #> log_rec_dev  0.923574520        NaN #> log_rec_dev  1.385879522        NaN #> log_rec_dev  0.175963525        NaN #> log_rec_dev  0.077785849        NaN #> log_rec_dev  0.205758440        NaN #> log_rec_dev  2.070546485        NaN #> log_rec_dev  0.593703916        NaN #> log_rec_dev  1.252685884        NaN #> log_rec_dev  0.482254069        NaN #> log_rec_dev  0.125041458        NaN #> log_rec_dev  0.000000000        NaN #> R0           0.944441461        NaN #> h            0.990000000        NaN #> q            0.008799889        NaN #> sigma        0.161105264        NaN"},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare output from several assessment models — compare_models","title":"Compare output from several assessment models — compare_models","text":"Plot biomass, recruitment, fishing mortality time series several . function can used compare outputs among different assessment models Data object.","code":""},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare output from several assessment models — compare_models","text":"","code":"compare_models(..., label = NULL, color = NULL)"},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare output from several assessment models — compare_models","text":"... Objects class Assessment. label character vector models legend. color vector colors assessment model.","code":""},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare output from several assessment models — compare_models","text":"set figures biomass, recruitment, fishing mortality estimates among models.","code":""},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare output from several assessment models — compare_models","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/compare_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare output from several assessment models — compare_models","text":"","code":"res <- cDD_SS(x = 3, Data = MSEtool::SimulatedData) res2 <- SCA(x = 3, Data = MSEtool::SimulatedData) res3 <- SP(x = 3, Data = MSEtool::SimulatedData)  compare_models(res, res2, res3)"},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"Diagnostic check convergence Assess models closed-loop simulation. Use MP created make_MP argument diagnostic = \"min\" \"full\". function summarizes plots diagnostic information.","code":""},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"","code":"diagnostic(MSE, MP, gradient_threshold = 0.1, figure = TRUE)  diagnostic_AM(...)"},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"MSE object class MSE created MSEtool::runMSE(). MP Optional, character vector MPs use assessment models. gradient_threshold maximum magnitude (absolute value) desired gradient likelihood. figure Logical, whether figure drawn. ... Arguments pass diagnostic.","code":""},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"matrix diagnostic performance assessment models MSE. figure = TRUE, set figures: traffic light (red/green) plots indicating whether model converged (defined positive-definite Hessian matrix obtained), optimizer reached pre-specified iteration limits (passed stats::nlminb()), maximum gradient likelihood assessment run. Also includes number optimization iterations function evaluations reported stats::nlminb() application assessment model.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/diagnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic of assessments in MSE: did Assess models converge during MSE? — diagnostic","text":"","code":"# \\donttest{ OM <- MSEtool::testOM; OM@proyears <- 20 myMSE <- runMSE(OM, MPs = \"SCA_4010\") #> ✔ Checking MPs #> ℹ Checking OM for completeness #> ✔ Loading operating model #> ✔ Optimizing for user-specified movement #> ✔ Calculating MSY reference points for each year #> ✔ Optimizing for user-specified depletion in last historical year #> ✔ Calculating historical stock and fishing dynamics #> ✔ Calculating per-recruit reference points #> ✔ Calculating B-low reference points #> ✔ Calculating reference yield - best fixed F strategy #> ✔ Simulating observed data #> ✔ Running forward projections #> ✔ 1 / 1  Running MSE for SCA_4010  #>    |===                                               | 5 % ~21s             |======                                            | 11% ~10s             |========                                          | 16% ~06s             |===========                                       | 21% ~05s             |==============                                    | 26% ~07s             |================                                  | 32% ~05s             |===================                               | 37% ~04s             |======================                            | 42% ~03s             |========================                          | 47% ~04s             |===========================                       | 53% ~03s             |=============================                     | 58% ~03s             |================================                  | 63% ~02s             |===================================               | 68% ~03s             |=====================================             | 74% ~02s             |========================================          | 79% ~02s             |===========================================       | 84% ~01s             |=============================================     | 89% ~01s             |================================================  | 95% ~00s             |==================================================| 100% elapsed=08s   #>  diagnostic(myMSE) #> ✔ Creating plots for MP: #>   SCA_4010  #>                                   SCA_4010 #> Percent positive-definite Hessian      100 #> Percent iteration limit reached          0 #> Percent max. gradient < 0.1             80 #> Median iterations                      753 #> Median function evaluations           1130  # How to get all the reporting library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union conv_statistics <- lapply(1:myMSE@nMPs, function(m) {   lapply(1:myMSE@nsim, function(x) {     myMSE@PPD[[m]]@Misc[[x]]$diagnostic %>%       mutate(MP = myMSE@MPs[m], Simulation = x)  }) %>% bind_rows() }) %>% bind_rows() # }"},{"path":"https://samtool.openmse.com/reference/getinds.html","id":null,"dir":"Reference","previous_headings":"","what":"Characterize posterior predictive data — getinds","title":"Characterize posterior predictive data — getinds","text":"Characterize posterior predictive data","code":""},{"path":"https://samtool.openmse.com/reference/getinds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Characterize posterior predictive data — getinds","text":"","code":"getinds(   PPD,   styr,   res = 6,   tsd = c(\"Cat\", \"Cat\", \"Cat\", \"Ind\", \"ML\"),   stat = c(\"slp\", \"AAV\", \"mu\", \"slp\", \"slp\") )"},{"path":"https://samtool.openmse.com/reference/getinds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Characterize posterior predictive data — getinds","text":"PPD object class Data stored Misc slot MSE object following call runMSE(PPD = TRUE). styr Positive integer, starting year calculation quantities res Positive integer, temporal resolution (chunks - normally years) calculate quantities tsd Character vector names types data: Cat = catch, Ind = relative abundance index, ML = mean length catches stat Character vector types quantity calculated: slp = slope(log(x)), AAV = average annual variability, mu = mean(log(x))","code":""},{"path":"https://samtool.openmse.com/reference/getinds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Characterize posterior predictive data — getinds","text":"3D array results (type data/stat (e.g. mean catches),time period (chunk), simulation)","code":""},{"path":"https://samtool.openmse.com/reference/getinds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Characterize posterior predictive data — getinds","text":"Carruthers Hordyk 2018","code":""},{"path":"https://samtool.openmse.com/reference/getinds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Characterize posterior predictive data — getinds","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot statistical power of the indicator with increasing time blocks — mahplot","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"Plot statistical power indicator increasing time blocks","code":""},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"","code":"mahplot(outlist, res = 6, maxups = 5, MPs)"},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"outlist list object produced function PRBcalc res Integer, resolution (time blocking) calculation PPD maxups Integer, maximum number update time blocks plot MPs Character vector MP names","code":""},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"Density plots Mahalanobis distance.","code":""},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"Carruthers Hordyk 2018","code":""},{"path":"https://samtool.openmse.com/reference/mahplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot statistical power of the indicator with increasing time blocks — mahplot","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a custom management procedure (MP) — make_interim_MP","title":"Make a custom management procedure (MP) — make_interim_MP","text":"Function operator creates management procedure (MP) combining assessment model (function class Assess) harvest control rule (function class HCR). resulting function can tested closed-loop simulation via MSEtool::runMSE(). Use make_MP specify constant TAC assessments; frequency assessments specified OM@interval. Use make_projection_MP set catches according schedule set projections, specify assessment frequency argument assessment_interval ensure OM@interval <- 1. Use make_interim_MP use interim procedure adjust TAC assessments using index (Huynh et al. 2020), frequency assessments specified argument assessment_interval making MP; ensure OM@interval <- 1.","code":""},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a custom management procedure (MP) — make_interim_MP","text":"","code":"make_interim_MP(   .Assess = \"SCA\",   .HCR = \"HCR_MSY\",   AddInd = \"VB\",   assessment_interval = 5,   type = c(\"buffer\", \"mean\", \"loess\", \"none\"),   type_par = NULL,   diagnostic = c(\"min\", \"full\", \"none\"),   ... )  make_projection_MP(   .Assess = \"SCA\",   .HCR = \"HCR_MSY\",   assessment_interval = 5,   Ftarget = expression(Assessment@FMSY),   proj_args = list(process_error = 1, p_sim = 1),   diagnostic = c(\"min\", \"full\", \"none\"),   ... )  make_MP(.Assess, .HCR, diagnostic = c(\"min\", \"full\", \"none\"), ...)"},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a custom management procedure (MP) — make_interim_MP","text":".Assess Assessment model, function class Assess. .HCR Harvest control rule, function class HCR. Currently used projection MPs. AddInd vector integers character strings indicating indices used assessment model. Integers assign index corresponding index Data@AddInd, \"B\" (0) represents total biomass Data@Ind, \"VB\" represents vulnerable biomass Data@VInd, \"SSB\" represents spawning stock biomass Data@SpInd. interim procedure, function use first index AddInd. assessment_interval time interval assessment model applied (number years). years, interim procedure applied. type index used calculate TAC interim procedure. See details. type_par control parameter interim procedure. See details. diagnostic character string describing additional diagnostic information assessment models collected closed-loop simulation. \"min\" (minimal) collect information convergence (default) \"full\" also collect model estimates biomass F generated .Assess. \"none\" skips step. ... Additional arguments passed .Assess .HCR. Ftarget expression MP evaluate identify F used projection. See projection example. proj_args Additional arguments projection.","code":""},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a custom management procedure (MP) — make_interim_MP","text":"function class MP.","code":""},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a custom management procedure (MP) — make_interim_MP","text":"make_interim_MP creates MP runs interim procedure (updating TAC according index observations periodic assessment intervals. Always ensure set: OM@interval <- 1. assessment frequency specified argument assessment_interval. year assessment applied, TAC set fitting model running harvest control rule. assessments, TAC updated $$ \\textrm{TAC}_{y+1} = C_{\\textrm{ref}} (I_y + b \\times s)/(I_{\\textrm{ref}} + b \\times s) $$ Cref TAC calculated recent assessment, Iref value index Cref calculated (see Equations 6 7 Huynh et al. 2020). value I_y depends type, b s equal zero unless type = \"buffer\": \"buffer\" - I_y recent index b specifed type_par (default = 1), s standard deviation index residuals recent assessment. \"mean\" - I_y mean value index recent type_par years (default = 3). \"loess\" - I_y recent index predicted loess smoother applied entire time series index. Use type_par adjust span parameter (default = 0.75). \"none\" - I_y recent index. Index values adjusted interim procedure.","code":""},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make a custom management procedure (MP) — make_interim_MP","text":"Huynh et al. 2020. interim management procedure approach assessed stocks: Responsive management advice lower assessment frequency. Fish Fish. 21:663–679. doi:10.1111/faf.12453","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/make_MP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a custom management procedure (MP) — make_interim_MP","text":"","code":"# \\donttest{ # Interim MPs MP_buffer_5 <- make_interim_MP(assessment_interval = 5) MP_buffer_10 <- make_interim_MP(assessment_interval = 10) OM <- MSEtool::testOM OM@interval <- 1  MSE <- MSEtool::runMSE(OM, MPs = c(\"MP_buffer_5\", \"MP_buffer_10\"))  #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: MP_buffer_5, MP_buffer_10 # } # A statistical catch-at-age model with a 40-10 control rule SCA_40_10 <- make_MP(SCA, HCR40_10)  # An SCA that will produce convergence diagnostics SCA_40_10 <- make_MP(SCA, HCR40_10, diagnostic = \"min\")  # MP with an SCA that uses a Ricker stock-recruit function. SCA_Ricker <- make_MP(SCA, HCR_MSY, SR = \"Ricker\") show(SCA_Ricker) #> function (x, Data, reps = 1, diagnostic = \"min\")  #> { #>     dependencies <- \"Data@Cat, Data@Ind, Data@Mort, Data@L50, Data@L95, Data@CAA, Data@vbK, Data@vbLinf, Data@vbt0, Data@wla, Data@wlb, Data@MaxAge, Data@steep, Data@CV_Ind, Data@sigmaR, Data@CV_Cat, Data@Mort, Data@CV_Mort, Data@steep, Data@CV_steep, Data@vbLinf, Data@vbK, Data@vbt0, Data@wla, Data@wlb, Data@MaxAge, Data@L50, Data@L95\" #>     do_Assessment <- SCA(x = x, Data = Data, SR = \"Ricker\") #>     Rec <- HCR_MSY(Assessment = do_Assessment, reps = reps) #>     if (diagnostic != \"none\")  #>         Rec@Misc <- Assess_diagnostic(x, Data, do_Assessment,  #>             include_assessment = FALSE) #>     if (!is.null(do_Assessment@info$Misc))  #>         Rec@Misc <- c(Rec@Misc, do_Assessment@info$Misc) #>     return(Rec) #> } #> <environment: 0x56157682d050> #> attr(,\"class\") #> [1] \"MP\"  # \\donttest{ # TAC is calculated annually from triennial assessments with projections between # assessments with F = 0.75 FMSY # Projections by default assume no process error. OM <- MSEtool::testOM OM@interval <- 1 pMP <- make_projection_MP(SCA, assessment_interval = 3,                            Ftarget = expression(0.75 * Assessment@FMSY),                           proj_args = list(process_error = 1)) # }"},{"path":"https://samtool.openmse.com/reference/pcod.html","id":null,"dir":"Reference","previous_headings":"","what":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","title":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","text":"list containing operating model, data set, priors updating operating model using conditioning model RCM.","code":""},{"path":"https://samtool.openmse.com/reference/pcod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","text":"","code":"pcod"},{"path":"https://samtool.openmse.com/reference/pcod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","text":"list containing object class MSEtool::OM, RCMdata, list priors index catchability.","code":""},{"path":"https://samtool.openmse.com/reference/pcod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","text":"Forrest, R.E., Anderson, S.C., Grandin, C.J., Starr, P.J. 2020. Assessment Pacific Cod (Gadus macrocephalus) Hecate Strait Queen Charlotte Sound (Area 5ABCD), West Coast Vancouver Island (Area 3CD) 2018. DFO Can. Sci. Advis. Sec. Res. Doc. 2020/070. v + 215 p. DFO. 2021. Status Update Pacifc Cod (Gadus macrocephalus) West Coast Vancouver Island (Area 3CD), Hecate Strait Queen Charlotte Sound (Area 5ABCD) 2020. DFO Can. Sci. Advis. Sec. Sci. Resp. 2021/002.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/pcod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pacific cod in Area 5ABCD (Hecate Strait and Queen Charlotte Sound), British Columbia, Canada — pcod","text":"","code":"data(pcod)"},{"path":"https://samtool.openmse.com/reference/plot.Assessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Assessment object — plot.Assessment","title":"Plot Assessment object — plot.Assessment","text":"Produces HTML file (via markdown) figures parameter estimates output Assessment object.","code":""},{"path":"https://samtool.openmse.com/reference/plot.Assessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Assessment object — plot.Assessment","text":"","code":"# S4 method for class 'Assessment,missing' plot(   x,   filename = paste0(\"report_\", x@Model),   dir = tempdir(),   ret_yr = 0L,   open_file = TRUE,   quiet = TRUE,   render_args = list(),   ... )  # S4 method for class 'Assessment,retro' plot(   x,   y,   filename = paste0(\"report_\", x@Model),   dir = tempdir(),   open_file = TRUE,   quiet = TRUE,   render_args = list(),   ... )"},{"path":"https://samtool.openmse.com/reference/plot.Assessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Assessment object — plot.Assessment","text":"x object class Assessment. filename Character string name markdown HTML files. dir directory markdown HTML files saved. ret_yr greater zero, retrospective analysis performed results reported. integer corresponds number peels (maximum number terminal years data removed). open_file Logical, whether HTML document opened rendered. quiet Logical, whether silence markdown rendering function. render_args Arguments pass render. ... arguments. y object class retro.","code":""},{"path":"https://samtool.openmse.com/reference/plot.Assessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Assessment object — plot.Assessment","text":"Returns invisibly output render.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot.Assessment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Assessment object — plot.Assessment","text":"","code":"output <- DD_TMB(Data = Simulation_1)  # \\donttest{ plot(output) #> ℹ Writing markdown file: /tmp/RtmpRU73lR/report_DD_TMB.Rmd #> ℹ Rendering markdown file: /tmp/RtmpRU73lR/report_DD_TMB.Rmd #> ℹ See help(plot.Assessment) to adjust report and file directory. #> ✔ Rendered file: /tmp/RtmpRU73lR/report_DD_TMB.html # }"},{"path":"https://samtool.openmse.com/reference/plot.RCModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RCM scope output — plot.RCModel","title":"Plot RCM scope output — plot.RCModel","text":"Produces HTML file (via markdown) figures parameter estimates output Assessment object. Plots histograms operating model parameters updated RCM scoping function, well diagnostic plots fits RCM simulation. compare_RCM plots short report compares output multiple RCM objects, assuming model structure, .e., identical matrix array dimensions among models, different data weightings, data omissions, etc.","code":""},{"path":"https://samtool.openmse.com/reference/plot.RCModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RCM scope output — plot.RCModel","text":"","code":"# S4 method for class 'RCModel,missing' plot(   x,   compare = FALSE,   filename = \"RCM\",   dir = tempdir(),   sims = 1:x@OM@nsim,   Year = NULL,   f_name = NULL,   s_name = NULL,   MSY_ref = c(0.5, 1),   bubble_adj = 1.5,   scenario = list(),   title = NULL,   open_file = TRUE,   quiet = TRUE,   render_args,   ... )  compare_RCM(   ...,   compare = FALSE,   filename = \"compare_RCM\",   dir = tempdir(),   Year = NULL,   f_name = NULL,   s_name = NULL,   MSY_ref = c(0.5, 1),   bubble_adj = 1.5,   scenario = list(),   title = NULL,   open_file = TRUE,   quiet = TRUE,   render_args )"},{"path":"https://samtool.openmse.com/reference/plot.RCModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RCM scope output — plot.RCModel","text":"x object class RCModel (output RCM). compare Logical, TRUE, function run runMSE compare historical period operating model RCM output. filename Character string name markdown HTML files. dir directory markdown HTML files saved. sims logical vector length x@OM@nsim numeric vector indicating simulations keep. Year Optional, vector years historical period plotting. f_name Character vector fleet names. s_name Character vector survey names. MSY_ref numeric vector reference horizontal lines B/BMSY plots. bubble_adj number adjust size bubble plots (residuals age length comps). scenario Optional, named list label simulation RCM plotting, e.g.: list(names = c(\"low M\", \"high M\"), col = c(\"blue\", \"red\")). title Optional character string alternative title markdown report. open_file Logical, whether HTML document opened rendered. quiet Logical, whether silence markdown rendering function. render_args list arguments pass render. ... compare_RCM, multiple RCM objects comparison.","code":""},{"path":"https://samtool.openmse.com/reference/plot.RCModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot RCM scope output — plot.RCModel","text":"Returns invisibly output render.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot.prof.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot profile object — plot.prof","title":"Plot profile object — plot.prof","text":"Generates profile plot generated profile. two-parameter profile performed, contour plot likelihood surface returned.","code":""},{"path":"https://samtool.openmse.com/reference/plot.prof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot profile object — plot.prof","text":"","code":"# S4 method for class 'prof,missing' plot(x, contour_levels = 20, ...)"},{"path":"https://samtool.openmse.com/reference/plot.prof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot profile object — plot.prof","text":"x object class prof returned profile. contour_levels Integer, passed nlevels argument contour. ... Miscellaneous. used.","code":""},{"path":"https://samtool.openmse.com/reference/plot.prof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot profile object — plot.prof","text":"likelihood profile plot, either one-dimensional line plot two-dimensional contour plot.","code":""},{"path":"https://samtool.openmse.com/reference/plot.prof.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot profile object — plot.prof","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for retro object — plot.retro","title":"Methods for retro object — plot.retro","text":"plot summary functions retro object.","code":""},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for retro object — plot.retro","text":"","code":"# S4 method for class 'retro,missing' plot(x, color = NULL)  # S4 method for class 'retro' summary(object)"},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for retro object — plot.retro","text":"x object class retro. color optional character vector colors plotting. object object class retro.","code":""},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for retro object — plot.retro","text":"series plots showing retrospective patterns fishing mortality, spawning biomass, recruitment, etc.","code":""},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for retro object — plot.retro","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot.retro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for retro object — plot.retro","text":"","code":"# \\donttest{ res <- SP(Data = swordfish) ret <- retrospective(res, figure = FALSE)  summary(ret) #>                   Mohn's rho #> Fishing mortality      0.130 #> F/F[MSY]              -0.145 #> Biomass               -0.091 #> B/B[MSY]               0.152 #> B/B[0]                 0.152 plot(ret)      # }"},{"path":"https://samtool.openmse.com/reference/plot_SR.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stock-recruitment function — plot_SR","title":"Plot stock-recruitment function — plot_SR","text":"Plot stock-recruitment (recruitment deviations estimated).","code":""},{"path":"https://samtool.openmse.com/reference/plot_SR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stock-recruitment function — plot_SR","text":"","code":"plot_SR(   Spawners,   expectedR,   R0 = NULL,   S0 = NULL,   rec_dev = NULL,   trajectory = FALSE,   y_zoom = NULL,   ylab = \"Recruitment\" )"},{"path":"https://samtool.openmse.com/reference/plot_SR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stock-recruitment function — plot_SR","text":"Spawners vector number spawners (x-axis). expectedR vector expected recruitment (stock-recruit function) corresponding values Spawners. R0 Virgin recruitment. S0 Virgin spawners. rec_dev recruitment deviations estimated, vector estimated recruitment (normal space) corresponding values Spawners. trajectory Indicates whether arrows drawn showing trajectory spawners recruitment deviations time. y_zoom recruitment deviations plotted, y-axis limit relative maximum expected recruitment expectedR. NULL, recruitment values plotted. ylab Character string label y-axis.","code":""},{"path":"https://samtool.openmse.com/reference/plot_SR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stock-recruitment function — plot_SR","text":"stock-recruit plot","code":""},{"path":"https://samtool.openmse.com/reference/plot_SR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot stock-recruitment function — plot_SR","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a beta variable — plot_betavar","title":"Plots a beta variable — plot_betavar","text":"Plots probability distribution function beta variable mean standard deviation either transformed (logit) untransformed space.","code":""},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a beta variable — plot_betavar","text":"","code":"plot_betavar(m, sd, label = NULL, is_logit = FALSE, color = \"black\")"},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a beta variable — plot_betavar","text":"m vector means distribution. sd vector standard deviations distribution. label Name variable used x-axis label. is_logit Logical indicates whether means standard deviations logit (TRUE) normal (FALSE) space. color vector colors.","code":""},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a beta variable — plot_betavar","text":"plot probability distribution function. Vertical dotted line indicates mean distribution. function can plot multiple curves multiple means standard deviations provided.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots a beta variable — plot_betavar","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_betavar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a beta variable — plot_betavar","text":"","code":"mu <- 0.5 stddev <- 0.1 plot_betavar(mu, stddev) # mean of plot should be 0.5   #logit parameters mu <- 0 stddev <- 0.1 plot_betavar(mu, stddev, is_logit = TRUE) # mean of plot should be 0.5"},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot composition data — plot_composition","title":"Plot composition data — plot_composition","text":"Plots annual length age composition data.","code":""},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot composition data — plot_composition","text":"","code":"plot_composition(   Year = 1:nrow(obs),   obs,   fit = NULL,   plot_type = c(\"annual\", \"bubble_data\", \"bubble_residuals\", \"mean\", \"heat_residuals\",     \"hist_residuals\"),   N = rowSums(obs),   CAL_bins = NULL,   ages = NULL,   ind = 1:nrow(obs),   annual_ylab = \"Frequency\",   annual_yscale = c(\"proportions\", \"raw\"),   bubble_adj = 1.5,   bubble_color = c(\"#99999999\", \"white\"),   fit_linewidth = 3,   fit_color = \"red\" )"},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot composition data — plot_composition","text":"Year vector years. obs matrix either length age composition data. lengths, rows columns index years length bin, respectively. ages, rows columns index years age, respectively. fit matrix predicted length age composition assessment model. dimensions obs. plot_type Indicates plots create. Options include annual distributions, bubble plot data, bubble plot Pearson residuals, annual means. N Annual sample sizes. Vector length nrow(obs). CAL_bins vector lengths corresponding columns obs. fit. Ignored age data. ages optional vector ages corresponding columns obs. ind numeric vector plotting subset rows (indexes year) obs fit. annual_ylab Character string y-axis label plot_type = \"annual\". annual_yscale annual composition plots (plot_type = \"annual\"), whether raw values (\"raw\") frequencies (\"proportions\") plotted. bubble_adj Numeric, adjusting relative size bubbles bubble plots (larger number = larger bubbles). bubble_color Colors negative positive residuals, respectively, bubble plots. fit_linewidth Argument lwd fitted line. fit_color Color fitted line.","code":""},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot composition data — plot_composition","text":"Plots depending plot_type. Invisibly returns matrix list values plotted.","code":""},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot composition data — plot_composition","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot composition data — plot_composition","text":"","code":"plot_composition(obs = SimulatedData@CAA[1, 1:16, ])  plot_composition(   obs = SimulatedData@CAA[1, , ],    plot_type = \"bubble_data\",    ages = 0:SimulatedData@MaxAge )                    SCA_fit <- SCA(x = 2, Data = SimulatedData) plot_composition(   obs = SimulatedData@CAA[1, , ], fit = SCA_fit@C_at_age,   plot_type = \"mean\", ages = 0:SimulatedData@MaxAge )   plot_composition(   obs = SimulatedData@CAA[1, 1:16, ], fit = SCA_fit@C_at_age[1:16, ],   plot_type = \"annual\", ages = 0:SimulatedData@MaxAge )   plot_composition(   obs = SimulatedData@CAA[1, , ], fit = SCA_fit@C_at_age,   plot_type = \"bubble_residuals\", ages = 0:SimulatedData@MaxAge )   plot_composition(   obs = SimulatedData@CAA[1, , ], fit = SCA_fit@C_at_age,   plot_type = \"heat_residuals\", ages = 0:SimulatedData@MaxAge )   plot_composition(   obs = SimulatedData@CAA[1, , ], fit = SCA_fit@C_at_age,   plot_type = \"hist_residuals\", ages = 0:SimulatedData@MaxAge )"},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"Produce cross-correlation plot derived data arising getinds(MSE_object)","code":""},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"","code":"plot_crosscorr(   indPPD,   indData,   pp = 1,   dnam = c(\"CS\", \"CV\", \"CM\", \"IS\", \"MLS\"),   res = 1 )"},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"indPPD 3D array results arising running getind MSE Null operating model (type data/stat (e.g. mean catches),time period (chunk), simulation) indData 3D array results arising running getind MSE Alternative operating model (type data/stat (e.g. mean catches),time period (chunk), simulation) pp Positive integer, number time chunks (blocks years normally, second dimension indPPD indData) produce plot . dnam character vector names data plotting purposes (long dimension 1 indPPD indData). res size temporal blocking created indPPD indData - just used labelling purposes","code":""},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"cross-correlation plot (ndata-1) x (ndata-1)","code":""},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"Carruthers Hordyk 2018","code":""},{"path":"https://samtool.openmse.com/reference/plot_crosscorr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce a cross-correlation plot of the derived data arising from getinds(MSE_object) — plot_crosscorr","text":"T. Carruthers","code":""},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a lognormal variable — plot_lognormalvar","title":"Plots a lognormal variable — plot_lognormalvar","text":"Plots probability distribution function lognormal variable mean standard deviation either transformed (normal) untransformed space.","code":""},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a lognormal variable — plot_lognormalvar","text":"","code":"plot_lognormalvar(m, sd, label = NULL, logtransform = FALSE, color = \"black\")"},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a lognormal variable — plot_lognormalvar","text":"m vector means distribution. sd vector standard deviations distribution. label Name variable used x-axis label. logtransform Indicates whether mean standard deviation lognormal (TRUE) normal (FALSE) space. color vector colors.","code":""},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a lognormal variable — plot_lognormalvar","text":"plot probability distribution function. Vertical dotted line indicates mean distribution. function can plot multiple curves multiple means standard deviations provided.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots a lognormal variable — plot_lognormalvar","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_lognormalvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots a lognormal variable — plot_lognormalvar","text":"","code":"mu <- 0.5 stddev <- 0.1 plot_lognormalvar(mu, stddev) # mean of plot should be 0.5   #logtransformed parameters mu <- 0 stddev <- 0.1 plot_lognormalvar(mu, stddev, logtransform = TRUE) # mean of plot should be 1"},{"path":"https://samtool.openmse.com/reference/plot_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot residuals — plot_residuals","title":"Plot residuals — plot_residuals","text":"Plots figure residuals (time series predicted mean zero).","code":""},{"path":"https://samtool.openmse.com/reference/plot_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot residuals — plot_residuals","text":"","code":"plot_residuals(   Year,   res,   res_sd = NULL,   res_sd_CI = 0.95,   res_upper = NULL,   res_lower = NULL,   res_ind_blue = NULL,   draw_zero = TRUE,   zero_linetype = 2,   label = \"Residual\" )"},{"path":"https://samtool.openmse.com/reference/plot_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot residuals — plot_residuals","text":"Year vector years data. res vector residuals. res_sd vector year specific standard deviation res. res_sd_CI confidence interval error bars based res_sd. res_upper vector year-specific upper bounds error bars residual (lieu argument res_CV). res_lower vector year-specific lower bounds error bars residual (lieu argument res_CV). res_ind_blue Indices obs plotted residuals error bars blue. draw_zero Indicates whether horizontal line drawn zero. zero_linetype Passes argument lty (e.g. solid line = 1, dotted = 2) draw_zero. label Character string describes data label y-axis.","code":""},{"path":"https://samtool.openmse.com/reference/plot_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot residuals — plot_residuals","text":"plot model residuals year (optionally, error bars).","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot_residuals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot residuals — plot_residuals","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots probability distribution function of stock-recruit steepness — plot_steepness","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"Plots probability distribution function steepness mean standard deviation.","code":""},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"","code":"plot_steepness(   m,   sd,   is_transform = FALSE,   SR = c(\"BH\", \"Ricker\"),   color = \"black\" )"},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"m mean distribution (vectorized). sd standard deviation distribution (vectorized). is_transform Logical, whether mean standard deviation normal space (FALSE) transformed space. SR stock recruitment relationship (determines range , relevant, transformation steepness). color vector colors.","code":""},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"plot probability distribution function. Vertical dotted line indicates mean distribution.","code":""},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"function samples beta distribution parameters alpha beta converted mean standard deviation. , distribution transformed 0 - 1 0.2 - 1.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_steepness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots probability distribution function of stock-recruit steepness — plot_steepness","text":"","code":"mu <- 0.8 stddev <- 0.1 plot_steepness(mu, stddev)"},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time series of data — plot_timeseries","title":"Plot time series of data — plot_timeseries","text":"Plot time series observed (lognormally-distributed error bars) vs. predicted data.","code":""},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time series of data — plot_timeseries","text":"","code":"plot_timeseries(   Year,   obs,   fit = NULL,   obs_CV = NULL,   obs_CV_CI = 0.95,   obs_upper = NULL,   obs_lower = NULL,   obs_ind_blue = NULL,   fit_linewidth = 3,   fit_color = \"red\",   label = \"Observed data\" )"},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time series of data — plot_timeseries","text":"Year vector years data. obs vector observed data. fit vector predicted data (e.g., assessment model). obs_CV vector year-specific coefficient variation observed data. obs_CV_CI confidence interval error bars based obs_CV. obs_upper vector year-specific upper bounds error bars observed data (lieu argument obs_CV). obs_lower vector year-specific lower bounds error bars observed data (lieu argument obs_CV). obs_ind_blue Indices obs plotted points error bars blue. fit_linewidth Argument lwd fitted line. fit_color Color fitted line. label Character string describes data label y-axis.","code":""},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot time series of data — plot_timeseries","text":"plot annual observed data predicted values model.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot time series of data — plot_timeseries","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/plot_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot time series of data — plot_timeseries","text":"","code":"data(Red_snapper) plot_timeseries(Red_snapper@Year, Red_snapper@Cat[1, ], obs_CV = Red_snapper@CV_Cat, label = \"Catch\")"},{"path":"https://samtool.openmse.com/reference/posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample posterior of TMB models in SAMtool — posterior","title":"Sample posterior of TMB models in SAMtool — posterior","text":"convenient wrapper function (posterior) sample posterior using MCMC rstan returns stanfit object diagnostics. Use RCMstan update RCM enclosed operating model MCMC samples..","code":""},{"path":"https://samtool.openmse.com/reference/posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample posterior of TMB models in SAMtool — posterior","text":"","code":"posterior(x, ...)  # S4 method for class 'RCModel' posterior(   x,   priors_only = FALSE,   laplace = FALSE,   chains = 2,   iter = 2000,   warmup = floor(iter/2),   thin = 5,   seed = 34,   init = \"last.par.best\",   cores = chains,   ... )  # S4 method for class 'Assessment' posterior(x, priors_only = FALSE, ...)  RCMstan(RCModel, stanfit, sim, cores = 1, silent = FALSE)"},{"path":"https://samtool.openmse.com/reference/posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample posterior of TMB models in SAMtool — posterior","text":"x object class Assessment RCModel. ... Additional arguments pass rstan::sampling via tmbstan::tmbstan. priors_only Logical, whether set likelihood zero sample priors . laplace Logical, whether Laplace approximation random parameters. chains numer MCMC chains. iter number iterations chain, including warmup. warmup number burnin iterations thin frequency iterations kept (e.g., 5 saves every fifth iteration) seed Seed random number generator MCMC. init initial values parameters starting MCMC chain. See tmbstan::tmbstan. cores number cores running parallel, e.g., one core per MCMC chain. Used RCMstan reconstructing population. RCModel object class RCModel stanfit object class stanfit returned posterior. sim matrix RCModel@OM@nsim rows 2 columns specifies samples used update operating model. first column specifies chain second columns specifies MCMC iteration. silent Logical indicate progress messages printed console.","code":""},{"path":"https://samtool.openmse.com/reference/posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample posterior of TMB models in SAMtool — posterior","text":"posterior returns object class stanfit. See class?stanfit. RCMstan returns updated RCModel.","code":""},{"path":"https://samtool.openmse.com/reference/posterior.html","id":"online-documentation","dir":"Reference","previous_headings":"","what":"Online Documentation","title":"Sample posterior of TMB models in SAMtool — posterior","text":"vignette steps run MCMC available openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/posterior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample posterior of TMB models in SAMtool — posterior","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":null,"dir":"Reference","previous_headings":"","what":"Preliminary Assessments in MSE — prelim_AM","title":"Preliminary Assessments in MSE — prelim_AM","text":"Evaluates likely performance Assessment models operating model. function apply assessment model Data generated historical period MSE, report convergence rate model total time elapsed running assessments.","code":""},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preliminary Assessments in MSE — prelim_AM","text":"","code":"prelim_AM(x, Assess, ncpus = NULL, ...)"},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preliminary Assessments in MSE — prelim_AM","text":"x Either Hist, Data OM object. Assess Assess function class Assess. ncpus Numeric, number CPUs run Assessment model (run parallel greater 1). ... Arguments passed Assess, e.g., model configurations.","code":""},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preliminary Assessments in MSE — prelim_AM","text":"Returns invisibly list Assessment objects length OM@nsim. Messages via console.","code":""},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preliminary Assessments in MSE — prelim_AM","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/prelim_AM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preliminary Assessments in MSE — prelim_AM","text":"","code":"# \\donttest{ prelim_AM(MSEtool::SimulatedData, SP) #> ✔ Running SP with 3 simulations for MSEtool::SimulatedData. #> ✔ Assessments complete. #> ✔ Total time to run 3 assessments: 0.1 seconds #> ✔ 0 of 3 simulations (0%) failed to converge. # }"},{"path":"https://samtool.openmse.com/reference/prof-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-prof — prof-class","title":"Class-prof — prof-class","text":"S4 class contains output profile.","code":""},{"path":"https://samtool.openmse.com/reference/prof-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-prof — prof-class","text":"Model Name assessment model. Name Name Data object. Par Character vector parameters profiled. MLE Numeric vector estimated values parameters (corresponding Par) assessment. grid data.frame change negative log-likelihood (nll) based profile parameters.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/prof-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-prof — prof-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile likelihood of assessment models — profile,Assessment-method","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"Profile likelihood parameters assessment models.","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"","code":"# S4 method for class 'Assessment' profile(fitted, figure = TRUE, ...)  # S4 method for class 'RCModel' profile(fitted, figure = TRUE, ...)"},{"path":"https://samtool.openmse.com/reference/profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"fitted, Assessment object class Assessment. figure Logical, indicates whether figure plotted. ... sequence values parameter(s) profile. See details example . See details name arguments passed .","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"object class prof contains data frame negative log-likelihood values profile , optionally, figure likelihood surface.","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"following assessment models, possible sequence values profiling : DD_TMB DD_SS: R0 h SP SP_SS: FMSY MSY DD cDD_SS: R0 h SCA SCA_Pope: R0 h SCA2: meanR VPA: F_term SSS: R0 RCM: D (spawning biomass depletion), R0, h used. Mesnil-Rochet stock-recruit function used, can also profile MRRmax MRgamma.","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile likelihood of assessment models — profile,Assessment-method","text":"","code":"# \\donttest{ output <- SCA(Data = MSEtool::SimulatedData)  # Profile R0 only pro <- profile(output, R0 = seq(1000, 2000, 50))   # Profile both R0 and steepness pro <- profile(output, R0 = seq(1000, 2000, 100), h = seq(0.8, 0.95, 0.025))   # Ensure your grid is of proper resolution. A grid that is too coarse # will likely distort the shape of the likelihood surface. # }"},{"path":"https://samtool.openmse.com/reference/project-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-project — project-class","title":"Class-project — project-class","text":"S4 class output projection.","code":""},{"path":"https://samtool.openmse.com/reference/project-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-project — project-class","text":"Model Name assessment model. Name Name Data object. FMort matrix fishing mortality p_sim rows p_years columns. B matrix biomass p_sim rows p_years columns. SSB matrix spawning biomass p_sim rows p_years columns. VB matrix vulnerable biomass p_sim rows p_years columns. R matrix recruitment p_sim rows p_years columns. N matrix abundance p_sim rows p_years columns. Catch matrix simulated observed catch p_sim rows p_years columns. Index array simulated observed index dimension c(p_sim, p_years, nsurvey). C_at_age array catch--age dimension c(p_sim, p_years, n_age).","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/project-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-project — project-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Projections for assessment models — projection","title":"Projections for assessment models — projection","text":"function takes assessment model runs stochastic projection based future F catch.","code":""},{"path":"https://samtool.openmse.com/reference/projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projections for assessment models — projection","text":"","code":"projection(   Assessment,   constrain = c(\"F\", \"Catch\"),   Ftarget,   Catch,   p_years = 50,   p_sim = 200,   obs_error,   process_error,   max_F = 3,   seed = 499 )"},{"path":"https://samtool.openmse.com/reference/projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projections for assessment models — projection","text":"Assessment object class Assessment. constrain Whether project future F catch. default, projects F. Ftarget projection F, either length 1 constant F entirety projection length p_years. Catch projection catch, either length 1 constant catch entirety projection length p_years. p_years Integer number projection years. p_sim Integer number simulations projection. obs_error list length two. first entry, vector length nsurvey giving standard deviations future index, alternatively array dimension p_sim, p_years, nsurvey giving deviates. second entry standard deviation projected catch. Alternatively, matrix simulation year-specific error structure catch (p_sim rows p_year columns; matrix ones indicates perfect data). process_error Numeric, standard deviation process error (e.g., recruitment biomass deviates). NULL, uses values assessment model. Alternatively, matrix simulation year-specific recruitment deviates (p_sim rows p_year columns, matrix ones indicates recruitment deviates). max_F maximum allowable F projection constrained catch. seed integer set seed sampling observation process error deviates.","code":""},{"path":"https://samtool.openmse.com/reference/projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projections for assessment models — projection","text":"object class project contains future predicted values F, catch, biomass, recruitment, etc.","code":""},{"path":"https://samtool.openmse.com/reference/projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projections for assessment models — projection","text":"","code":"# \\donttest{ myAssess <- SP(Data = swordfish) do_projection <- projection(myAssess, Ftarget = myAssess@FMSY) # }"},{"path":"https://samtool.openmse.com/reference/retro-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-retro — retro-class","title":"Class-retro — retro-class","text":"S4 class contains output retrospective.","code":""},{"path":"https://samtool.openmse.com/reference/retro-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-retro — retro-class","text":"Model Name assessment model. Name Name Data object. TS_var Character vector time series variables, e.g. recruitment, biomass, assessment. TS array time series assessment output dimension, indexed : peel (number terminal years removed base assessment), years, variables (corresponding TS_var). Est_var Character vector estimated parameters, e.g. R0, steepness, assessment. Est array estimated parameters dimension, indexed : peel, variables (corresponding Est_var), value (length 2 estimate standard error).","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/retro-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-retro — retro-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrospective analysis of assessment models — retrospective","title":"Retrospective analysis of assessment models — retrospective","text":"Perform retrospective analysis, successive removals recent years data evaluate resulting parameter estimates.","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrospective analysis of assessment models — retrospective","text":"","code":"retrospective(x, ...)  # S4 method for class 'Assessment' retrospective(x, nyr = 5, figure = TRUE)  # S4 method for class 'RCModel' retrospective(x, nyr = 5, figure = TRUE)"},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrospective analysis of assessment models — retrospective","text":"x S4 object class Assessment RCModel. ... arguments. nyr maximum number years remove retrospective analysis. figure Indicates whether plots drawn.","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrospective analysis of assessment models — retrospective","text":"list array model output model estimates retrospective analysis. Figures showing time series biomass exploitation parameter estimates successive number years removed. variety time series output (SSB, recruitment, etc.) estimates (R0, steepness, etc.), also returns matrix Mohn's rho (Mohn 1999).","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrospective analysis of assessment models — retrospective","text":"Mohn, R. 1999. retrospective problem sequential population analysis: investigation using cod fishery simulated data. ICES Journal Marine Science 56:473-488.","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrospective analysis of assessment models — retrospective","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/retrospective.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrospective analysis of assessment models — retrospective","text":"","code":"# \\donttest{ output <- SP(Data = swordfish) get_retro <- retrospective(output, nyr = 5, figure = FALSE) # }"},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":null,"dir":"Reference","previous_headings":"","what":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"Plots true retrospective assessment model closed-loop simulation. series time series estimates SSB, F, VB plotted course MSE plotted operating model (true) values (black).","code":""},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"","code":"retrospective_AM(MSE, MP, sim = 1, plot_legend = FALSE)"},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"MSE object class MSEtool::MSE. MP Character. name management procedure created make_MP() containing assessment model. sim Integer 1 MSE@nsim. simulation number retrospectives plotted. plot_legend Logical. Whether plot legend reference year assessment MSE.","code":""},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"series figures SSB, depletion, fishing mortality, vulnerable biomass (VB) estimated MP course closed-loop simulation values generated operating model (historical projected).","code":""},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"assessment models utilize annual exploitation rates (u), instantaneous fishing mortality rates obtained F = -log(1 - u).","code":""},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"function plots retrospectives single simulation MSE. Results one figure may indicative general assessment behavior performance overall.","code":""},{"path":[]},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/retrospective_AM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"retrospective_AM (retrospective of Assessment model in MSE) — retrospective_AM","text":"","code":"# \\donttest{ SP_40_10 <- make_MP(SP, HCR_MSY, diagnostic = \"full\") OM <- MSEtool::testOM; OM@proyears <- 20 myMSE <- MSEtool::runMSE(OM = OM, MPs = \"SP_40_10\") #> ✔ Checking MPs #> Error: Some MPs are not a functions of class `MP`: SP_40_10 retrospective_AM(myMSE, MP = \"SP_40_10\", sim = 1) #> Error in eval(expr, envir, enclos): object 'myMSE' not found  # How to get all the estimates library(dplyr) assess_estimates <- lapply(1:myMSE@nMPs, function(m) {   lapply(1:myMSE@nsim, function(x) {     myMSE@PPD[[m]]@Misc[[x]]$Assessment_report %>%        mutate(MP = myMSE@MPs[m], Simulation = x)   }) %>% bind_rows() }) %>% bind_rows() #> Error in eval(expr, envir, enclos): object 'myMSE' not found # }"},{"path":"https://samtool.openmse.com/reference/sim-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-sim — sim-class","title":"Class-sim — sim-class","text":"S4 class contains output simulate.","code":""},{"path":"https://samtool.openmse.com/reference/sim-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class-sim — sim-class","text":"Model Name assessment model. data List data assessment. data_sim List simulated data values. value returns array. process_sim List simulated process error. est Estimates original model fit. est_sim Estimates simulated data.","code":""},{"path":"https://samtool.openmse.com/reference/sim-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-sim — sim-class","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated data from TMB models in SAMtool — simulate","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"convenient wrapper function (simulate) simulate data (process error) likelihood function.","code":""},{"path":"https://samtool.openmse.com/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"","code":"simulate(object, ...)  # S4 method for class 'Assessment' simulate(   object,   nsim = 1,   seed = NULL,   process_error = FALSE,   refit = FALSE,   cores = 1,   ... )  # S4 method for class 'RCModel' simulate(   object,   nsim = 1,   seed = NULL,   process_error = FALSE,   refit = FALSE,   cores = 1,   ... )"},{"path":"https://samtool.openmse.com/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"object object class Assessment RCModel containing fitted model. ... Additional arguments nsim Number simulations seed Used random number generator process_error Logical, indicates process error re-sampled simulation. refit Logical, whether re-fit model simulated dataset. cores number CPUs parallel processing model re-fitting refit = TRUE.","code":""},{"path":"https://samtool.openmse.com/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"sim object returning original data, simulated data, original parameters, parameters estimated simulated data, process error used simulate data. nested list model output (opt, SD, report).","code":""},{"path":"https://samtool.openmse.com/reference/simulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"Process error, e.g., recruitment deviations, re-sampled simulation.","code":""},{"path":"https://samtool.openmse.com/reference/simulate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate simulated data from TMB models in SAMtool — simulate","text":"Q. Huynh","code":""},{"path":"https://samtool.openmse.com/reference/summary.Assessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Assessment object — summary.Assessment","title":"Summary of Assessment object — summary.Assessment","text":"Returns summary parameter estimates output Assessment object.","code":""},{"path":"https://samtool.openmse.com/reference/summary.Assessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Assessment object — summary.Assessment","text":"","code":"# S4 method for class 'Assessment' summary(object)"},{"path":"https://samtool.openmse.com/reference/summary.Assessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Assessment object — summary.Assessment","text":"object object class Assessment","code":""},{"path":"https://samtool.openmse.com/reference/summary.Assessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Assessment object — summary.Assessment","text":"list parameters.","code":""},{"path":"https://samtool.openmse.com/reference/summary.Assessment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Assessment object — summary.Assessment","text":"","code":"output <- DD_TMB(Data = MSEtool::SimulatedData) summary(output) #> $model #> [1] \"Delay-Difference\" #>  #> $current_status #>            Value #> F/FMSY 0.5416090 #> B/BMSY 1.5522568 #> B/B0   0.3921528 #>  #> $input_parameters #>            Value                         Description #> alpha  9.3839612              alpha = Winf * (1-rho) #> rho    0.8460155 rho = (W_k+2 - Winf)/(W_k+1 - Winf) #> k      4.0000000       Age of knife-edge selectivity #> w_k   21.3874412                     Weight at age k #> h      0.7341829             Stock-recruit steepness #> M      0.3835144                   Natural mortality #>  #> $derived_quantities #>                Value                     Description #> B0      1.520520e+04                Unfished biomass #> N0      4.875238e+02              Unfished abundance #> MSY     2.059243e+03 Maximum sustainable yield (MSY) #> FMSY    9.834573e-01        Fishing mortality at MSY #> BMSY    3.841350e+03                  Biomass at MSY #> BMSY/B0 2.526340e-01                Depletion at MSY #>  #> $model_estimates #>                Estimate   Std. Error     Gradient          CV #> R0         1.552947e+02 1.855504e+00           NA 0.011948276 #> h          7.341829e-01 0.000000e+00           NA 0.000000000 #> q          1.096571e-04 3.111379e-06           NA 0.028373713 #> sigma      3.890664e-01 5.502230e-03           NA 0.014142136 #> R0x       -2.391703e+00 1.194828e-02 8.796344e-05 0.004995719 #> log_sigma -9.440052e-01 1.414214e-02 7.732051e-05 0.014980994 #>  #> $log_likelihood #>           Neg.LL #> Total   1187.333 #> Index_1 1187.333 #> Dev        0.000 #> Prior      0.000 #> Penalty    0.000 #>"},{"path":"https://samtool.openmse.com/reference/swordfish.html","id":null,"dir":"Reference","previous_headings":"","what":"North Atlantic Swordfish dataset — swordfish","title":"North Atlantic Swordfish dataset — swordfish","text":"S4 object containing catch index time series North Atlantic swordfish.","code":""},{"path":"https://samtool.openmse.com/reference/swordfish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North Atlantic Swordfish dataset — swordfish","text":"","code":"swordfish"},{"path":"https://samtool.openmse.com/reference/swordfish.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"North Atlantic Swordfish dataset — swordfish","text":"object class MSEtool::Data.","code":""},{"path":"https://samtool.openmse.com/reference/swordfish.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"North Atlantic Swordfish dataset — swordfish","text":"ASPIC Software https://www.mhprager.com/aspic.html","code":""},{"path":"https://samtool.openmse.com/reference/swordfish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North Atlantic Swordfish dataset — swordfish","text":"","code":"data(swordfish)"},{"path":"https://samtool.openmse.com/reference/userguide.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the SAMtool vignettes — userguide","title":"Get the SAMtool vignettes — userguide","text":"convenient function open web browser openMSE documentation vignettes","code":""},{"path":"https://samtool.openmse.com/reference/userguide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the SAMtool vignettes — userguide","text":"","code":"userguide()"},{"path":"https://samtool.openmse.com/reference/userguide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the SAMtool vignettes — userguide","text":"Displays browser webpage openMSE website.","code":""},{"path":"https://samtool.openmse.com/reference/userguide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the SAMtool vignettes — userguide","text":"","code":"userguide()"},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-170","dir":"Changelog","previous_headings":"","what":"SAMtool 1.7.0","title":"SAMtool 1.7.0","text":"Add argument adjust annual recruitment deviation bias correction RCM argument pbc_recdev. bias correction logspace normal space exp(log_rec_dev[y] - 0.5 * bc_recdev[y] * sigmaR^2) year-specific rec dev estimated.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-165","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.5","title":"SAMtool 1.6.5","text":"Update RCM2MOM (report selectivity length array, catch fractions, . Update RCM report identify non-converged simulations figures data predictions likelihood.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-164","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.4","title":"SAMtool 1.6.4","text":"CRAN release: 2024-02-15 RCM passes maturity length parameters operating model. RCM uses corresponding age ogive, OM later back-calculate retrieve length parameters, may recover original values. RCM passes selectivity length operating model. needed simulate length data projection. Plot maturity length length-weight relationship RCM output fitted sized data. Histograms exclude extreme outliers (samples greater 95th percentile skewness > 3).","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-163-2023-11-18","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.3 (2023-11-18)","title":"SAMtool 1.6.3 (2023-11-18)","text":"CRAN release: 2023-11-18 RCM_output tab plot(RCModel), report simulations convergence rate, clean comp plots. Fix issue F calcs RCM(condition = \"catch2\"), introduced version 1.6.0.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-162-2023-10-26","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.2 (2023-10-26)","title":"SAMtool 1.6.2 (2023-10-26)","text":"CRAN release: 2023-10-26 Minor RCM updates calculate fishery length comp CAL_n > 0 protect plot.RCM empty index vectors. Update roxygen doc markdown.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-161-2023-08-23","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.1 (2023-08-23)","title":"SAMtool 1.6.1 (2023-08-23)","text":"CRAN release: 2023-08-23 Patch updates tidy RCM report prevent empty length selectivity figures. Perfect uses spawn_timing calculate spawning biomass (exp(-spawn_time * M)) middle projection year. Note perfect HCR implementation needs iteratively re-calculate projection year biomass, B/BMSY, B/B0 (exp(-spawn_time * [Ftarget + M])) applying HCR. Recommend spawn_time = 0 implement HCR perfectly. Update URLs describe map index q RCM. RCM longer uses ObsPars$Isd. Update yield curve calcs RCM fecundity spawn timing. Update retrospective function RCM (map dimensions changed TMB).","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-160-2023-07-19","dir":"Changelog","previous_headings":"","what":"SAMtool 1.6.0 (2023-07-19)","title":"SAMtool 1.6.0 (2023-07-19)","text":"CRAN release: 2023-07-19","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"rcm-updates-1-6-0","dir":"Changelog","previous_headings":"","what":"RCM updates","title":"SAMtool 1.6.0 (2023-07-19)","text":"Add spawn_time_frac argument RCM. Add fleet-specific option catch/effort conditioning RCM. Allow map argument index q RCM(map = list(q = c(1, 1))). example allows sharing q 2 indices. Currently, q can explicit estimated parameter (map argument integer), solved analytically (map argument NA), fixed 1 (map argument NA additional specification RCMdata@abs_I). Add explicit selectivity length (“logistic_length”, “dome_length”) age-based (“logistic_age”, “dome_age”) functions. backwards compatibility, “logistic” “dome” map length-based equivalents. Update prior length age full selectivity x^0.01 * (1 - x)^0.01 x ratio length full selectivity Linf age full selectivity maxage. Update figures RCM markdown reports.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"other-additions-1-6-0","dir":"Changelog","previous_headings":"","what":"Other additions","title":"SAMtool 1.6.0 (2023-07-19)","text":"Add heat (red/blue) residuals age comps plot_composition(plot_type = \"heat_residuals\"). Also re-adjust default bubble residual size. Switch back TMB compilation CppAD. TMBad appears cause “file big” errors codecov. Import abind (already done MSEtool)","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-153-2023-05-23","dir":"Changelog","previous_headings":"","what":"SAMtool 1.5.3 (2023-05-23)","title":"SAMtool 1.5.3 (2023-05-23)","text":"CRAN release: 2023-05-23 Fix indexing issue estimating steepness post-hoc SCA2 VPA. Return warning arguments make_MP don’t match formal arguments .Assess .HCR","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-152-2023-04-04","dir":"Changelog","previous_headings":"","what":"SAMtool 1.5.2 (2023-04-04)","title":"SAMtool 1.5.2 (2023-04-04)","text":"CRAN release: 2023-04-04 Custom internal hist function report NA rate (percent NA’s) vector. Seen markdown reports. Internal max function excludes infinite values. Primarily used generating axes limits markdown reports. Fix bugs Data object passed RCM. Allow resample = TRUE stochastic fits RCM.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-151-2023-02-08","dir":"Changelog","previous_headings":"","what":"SAMtool 1.5.1 (2023-02-08)","title":"SAMtool 1.5.1 (2023-02-08)","text":"CRAN release: 2023-02-08 Add gridlines markdown plots easier viewing. Update plots re-organize tabs RCM markdown report. Add Gaussian penalty dnorm(log(Shinge/min(SSB)), 0, 2) hockey-stick SRR hinge point less smallest SSB. Convert zeros 1e-8 found RCMdata@Chist. trivially small catch still allows predictions fishery age composition Baranov equation. Turn various RCM messages warnings, e.g., non-convergence, high F, etc. Fix bug diagnostic introduced 1.5.0.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-150-2023-01-29","dir":"Changelog","previous_headings":"","what":"SAMtool 1.5.0 (2023-01-29)","title":"SAMtool 1.5.0 (2023-01-29)","text":"CRAN release: 2023-01-29 Add simulate method RCM assessment models. New map start arguments RCM. Add progress bar timers RCM various diagnostic functions using pbapply. Add hockey-stick stock-recruit relationship RCM using Mesnil Rochet (2010) parameterization. Users can now add lognormal priors r MSY surplus production models. Update reporting assessment output inside MSE. Use data frames instead lists save space MSE object.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-141-2022-11-16","dir":"Changelog","previous_headings":"","what":"SAMtool 1.4.1 (2022-11-16)","title":"SAMtool 1.4.1 (2022-11-16)","text":"CRAN release: 2022-11-16 Fix Data@CAL check using RCM. Use Gmisc::fastDoCall fitting models, e.g., SP_Fox. Gmisc Suggests package.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-140-2022-06-07","dir":"Changelog","previous_headings":"","what":"SAMtool 1.4.0 (2022-06-07)","title":"SAMtool 1.4.0 (2022-06-07)","text":"CRAN release: 2022-06-07 RCM can now use multivariate logistic Dirichlet multinomial distributions fitting age/length comps. Compile TMBAD library. Import individual functions NAMESPACE avoid package conflicts.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-131-2022-05-06","dir":"Changelog","previous_headings":"","what":"SAMtool 1.3.1 (2022-05-06)","title":"SAMtool 1.3.1 (2022-05-06)","text":"CRAN release: 2022-05-06 Patch RCM markdown report plotting fishery length composition.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-130-2022-04-08","dir":"Changelog","previous_headings":"","what":"SAMtool 1.3.0 (2022-04-08)","title":"SAMtool 1.3.0 (2022-04-08)","text":"CRAN release: 2022-04-08 Require TMB 1.8 (need TMB package consistency compilation model fitting)","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-126-2022-03-31","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.6 (2022-03-31)","title":"SAMtool 1.2.6 (2022-03-31)","text":"CRAN release: 2022-03-31","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"new-features-1-2-6","dir":"Changelog","previous_headings":"","what":"New features","title":"SAMtool 1.2.6 (2022-03-31)","text":"RCM2MOM converts output RCM multi-fleet operating model. Vignette now hosted online. Added beta version RCM_assess using RCM model assessment closed-loop projections. arguments added future flexibility model configuration. make_project_MP creates management procedures update TAC annually stock assessment projections. posterior wrapper function added run MCMC RCM models. RCMstan updates OMs MCMC output.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"minor-updates-1-2-6","dir":"Changelog","previous_headings":"","what":"Minor updates","title":"SAMtool 1.2.6 (2022-03-31)","text":"Fix FSPR reporting Shortcut Perfect assessment functions. Fix F calculation HCR_segment yield per recruit (F01 Fmax). Updates interim_MP include adding NULL catch catch advice adding missing feature report assessment output diagnostic = 'full'. Create ability specify output F absolute magnitude (independent model output) HCR_segment HCR_ramp. Uniform prior available R0 log(R0) RCM models assessment models. Shared recruitment deviation parameters RCM enter objective function . New correlation plots estimated productivity parameters (steepness, M, R0, well depletion) RCM reporting. Clean TMB code fix clang-14 compiler warnings.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-125-2022-01-12","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.5 (2022-01-12)","title":"SAMtool 1.2.5 (2022-01-12)","text":"CRAN release: 2022-01-12 SCA_RWM can accept multiple years refyear argument, e.g., expression(1:Data@Year). model calculate reference points (MSY, unfished values, steepness) using mean M specified years. Fix bug interim MPs return NA Rec@TAC multiple assessments converge.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-124-2021-12-15","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.4 (2021-12-15)","title":"SAMtool 1.2.4 (2021-12-15)","text":"CRAN release: 2021-12-14 Update Shortcut indexing align year assessment projection. MP using Perfect assessment HCR_MSY annually produce F = FMSY OM. Stabilize VPA catch--age plusgroup plusgroup-1 small.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-123-2021-11-28","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.3 (2021-11-28)","title":"SAMtool 1.2.3 (2021-11-28)","text":"CRAN release: 2021-11-28 RCM check age length comp data NA’s replaces zero RCM reports annual equilibrium unfished reference points using constant stock recruit alpha beta Unlink TMB executable unloading package Fix punctuation issue markdown reports use knitr v1.36. minor fixes","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-122-2021-09-16","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.2 (2021-09-16)","title":"SAMtool 1.2.2 (2021-09-16)","text":"CRAN release: 2021-09-16 make_interim_MP function added generate MPs adjust TAC periodic assessments using index. additional posfun SP added avoid negative biomass situations. Fix sampling recruitment deviations projections RCM mean one normal space. error apparent autocorrelation large. Assessment RCModel objects now save package version attributes. Shortcut function now reports year-specific reference points harvest control rule. HCR returns TAC = NA control point target point negative.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-121-2021-08-12","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.1 (2021-08-12)","title":"SAMtool 1.2.1 (2021-08-12)","text":"CRAN release: 2021-08-12 HCR_segment allows creating control rules number linear segments. Assign index beta = 1 OMs conditioned RCM. ESS argument re-instated RCM maintain backwards compatibility. Fix assignment length bins OM RCM.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-120-2021-07-06","dir":"Changelog","previous_headings":"","what":"SAMtool 1.2.0 (2021-07-06)","title":"SAMtool 1.2.0 (2021-07-06)","text":"CRAN release: 2021-07-06","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"rcm-1-2-0","dir":"Changelog","previous_headings":"","what":"RCM","title":"SAMtool 1.2.0 (2021-07-06)","text":"new S4 object, RCMdata, used send data RCM model, .e., RCM(OM, RCMdata). now, backwards compatibility still maintained feeding data list (used prior v1.2) fit model. Internal R TMB code RCM revised, e.g., reducing interchangeability terms ‘survey’ ‘index’ focus ‘index’ much possible maintaining backwards compatibility. profile generic now available RCM models. Steepness, R0, final depletion can profiled. Fixed plotting bug compare_RCM. Priors index q RCM now lognormal instead normal. Annual equilibrium transitional SPR now calculated reported. Uneven length bin widths now supported. example added help documentation online article, using Pacific cod (courtesy R. Forrest).","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"assessment-models-1-2-0","dir":"Changelog","previous_headings":"","what":"Assessment models","title":"SAMtool 1.2.0 (2021-07-06)","text":"Priors M, steepness, R0, index q (lognormal, see RCM) can created SCA, DD, cDD assessment models. Likelihood weights SCA assessments can now provided Catch, CAA, CAL addition Index named list LWT. Backwards compatibility remains provide LWT vector index likelihood weights . new SCA assessment model incorporates density-dependent natural mortality (SCA_DDM) added. new SCA assessment model fits length composition (SCA_CAL) added. Delay-difference assessments (DD_TMB, DD_SS, cDD, cDD_SS) can now fit mean weight argument MW = TRUE. functions look mean weight data series Data@Misc[[x]]$MW, otherwise convert length composition Data@CAL weights calculate annual means. Delay-difference assessments (DD_TMB DD_SS) now use instantaneous F formulation catch equation instead Pope’s approximation. models now robust high F situations. Dynamic SSB0 calculated assessment models. variant shortcut assessment emulator closed-loop simulation available (Shortcut2). function fits SCA assessment characterizes assessment error relative operating model using vector autoregressive (VAR) model. functions samples operating model error predicted VAR model projection period. useful function guide level error shortcut method.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"harvest-control-rules-1-2-0","dir":"Changelog","previous_headings":"","what":"Harvest control rules","title":"SAMtool 1.2.0 (2021-07-06)","text":"Additional OCP types HCR_ramp available create harvest control rules based dynamic B0, F-based rules (F/FMSY, F/F01, F/F-SPR). Added shortcut function fixed escapement harvest control rule (HCR_escapement).","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-112-2021-03-09","dir":"Changelog","previous_headings":"","what":"SAMtool 1.1.2 (2021-03-09)","title":"SAMtool 1.1.2 (2021-03-09)","text":"CRAN release: 2021-03-09 Minor fix vignette fix MSEtool reverse dependency issue.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-111-2021-02-17","dir":"Changelog","previous_headings":"","what":"SAMtool 1.1.1 (2021-02-17)","title":"SAMtool 1.1.1 (2021-02-17)","text":"CRAN release: 2021-02-17 Fix year range depletion calculation time-varying SSB0 RCM.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-110-2021-02-02","dir":"Changelog","previous_headings":"","what":"SAMtool 1.1.0 (2021-02-02)","title":"SAMtool 1.1.0 (2021-02-02)","text":"CRAN release: 2021-02-02 Edits fix valgrind sanitizer issues TMB code. Likelihood gradients, derivatives likelihood annual data point respect model parameters, plotted RCM markdown report. purpose, annual age length composition considered single piece data. diagnostic informative informative data model parameters, influential data points larger gradients. conditioned effort, RCM now incorporate catches likelihood default. allows model estimate F R0 conditioned effort patchy catch data.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"samtool-100-2021-01-22","dir":"Changelog","previous_headings":"","what":"SAMtool 1.0.0 (2021-01-22)","title":"SAMtool 1.0.0 (2021-01-22)","text":"CRAN release: 2021-01-22 Development assessment models OM conditioning model SAMtool 1.0.0 continues MSEtool 2.0.1. multiMSE remains MSEtool. age structure SCA models (SCA, SCA_Pope, SSS) start age 0 following change MSEtool OM. additional SCA model (SCA_RWM) can used estimate time-varying M (constant age) random walk. Fix random walk SD low value effectively estimate time-constant M (see help page). Warnings fit assessment models (nlminb) turned . Convergence status issues can checked conv slot output Assessment object. closed-loop simulation, diagnostic function can used track behavior model-based MPs. default, pre-packaged model-based MPs MPs made make_MP function designed report convergence info (stored MSE@PPD). Assessment functions now calculate report spawning potential ratio yield per recruit forecast slot S4 object. Also slot catch equation function calculates TAC given F. HCR nomenclature changed. Operational control points (OCPs) used instead reference points (help distinguish reference points estimation model vs. operating model. Various types F can now used HCR, including F0.1, Fmax, FSPR, addition FMSY TAC calculation. Shortcut assess function samples OM error autocorrelation HCRs emulator stock assessment closed-loop simulation. Perfect function samples OM without error. assessment models now accommodate multiple indices model fitting, specify AddInd argument functions index slots Data object used among Data@Ind, Data@SpInd, Data@VInd, Data@AddInd. Within series weighting applied using corresponding CV slot, .e., Data@CV_Ind Data@Ind, etc. Among series weighting can also tuned using likelihood weights LWT argument. SCA VPA models, selectivity fixed model using Data@AddIndV indices Data@AddInd.","code":""},{"path":"https://samtool.openmse.com/news/index.html","id":"rcm-1-0-0","dir":"Changelog","previous_headings":"","what":"RCM","title":"SAMtool 1.0.0 (2021-01-22)","text":"function OM conditioning model now re-named RCM (Rapid Conditioning Model). age structure model now starts age 0, following change MSEtool OM. dimension associated age matrices arrays need length maxage + 1 corresponds ages 0 maxage. estimating fleet F model (condition = \"catch\"), likelihood catch can now user-defined standard deviation indicated data$C_sd (year fleet specific, previous default 0.01 built-catches). generating length comps, variability length--age can now age-specific. Specify length--age standard deviation OM@cpars$LatASD. Priors log_R0 (normal distribution), steepness (beta distribution Beverton-Holt, normal Ricker), log_M (age time constant, normal), survey q (normal) can now specified.","code":""}]
